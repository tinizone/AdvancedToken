{
	"id": "25c52ae695175b82e8331014eb6fc6fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"AdvancedToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\n\ncontract AdvancedToken is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable, PausableUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    uint256 public transferFee;\n    uint256 public burnRate;\n    address public feeRecipient;\n    uint256 public accumulatedFees;\n    uint256 public constant FEE_DENOMINATOR = 10000;\n    uint256 public constant MAX_SUPPLY = 1000000 * 1e18;\n\n    address public stakingModule;\n    address public nftStakingModule;\n    address public vestingModule;\n\n    event TransferFeeUpdated(uint256 newFee);\n    event BurnRateUpdated(uint256 newRate);\n    event FeesWithdrawn(address indexed recipient, uint256 amount);\n\n    function initialize(\n        string memory _name,\n        string memory _symbol,\n        uint256 _totalSupply,\n        address _admin,\n        address _feeRecipient\n    ) public initializer {\n        __ERC20_init(_name, _symbol);\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n        __Pausable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\n        _grantRole(PAUSER_ROLE, _admin);\n        _grantRole(UPGRADER_ROLE, _admin);\n\n        _mint(_admin, _totalSupply);\n        transferFee = 100; // 1%\n        burnRate = 50; // 0.5%\n        feeRecipient = _feeRecipient;\n    }\n\n    function setStakingModule(address _stakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        stakingModule = _stakingModule;\n    }\n\n    function setNFTStakingModule(address _nftStakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        nftStakingModule = _nftStakingModule;\n    }\n\n    function setVestingModule(address _vestingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        vestingModule = _vestingModule;\n    }\n\n    function transfer(address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {\n        _customTransfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {\n        _customTransfer(sender, recipient, amount);\n        uint256 currentAllowance = allowance(sender, _msgSender());\n        _approve(sender, _msgSender(), currentAllowance - amount);\n        return true;\n    }\n\n    function _customTransfer(address sender, address recipient, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than 0\");\n        uint256 fee = (amount * transferFee) / FEE_DENOMINATOR;\n        uint256 burnAmount = (amount * burnRate) / FEE_DENOMINATOR;\n        uint256 netAmount = amount - fee - burnAmount;\n\n        if (fee > 0) {\n            super._transfer(sender, feeRecipient, fee);\n            accumulatedFees += fee;\n        }\n        if (burnAmount > 0) {\n            _burn(sender, burnAmount);\n        }\n        super._transfer(sender, recipient, netAmount);\n    }\n\n    function withdrawFees() external onlyRole(DEFAULT_ADMIN_ROLE) whenNotPaused {\n        uint256 amount = accumulatedFees;\n        require(amount > 0, \"No fees to withdraw\");\n        accumulatedFees = 0;\n        _transfer(address(this), feeRecipient, amount);\n        emit FeesWithdrawn(feeRecipient, amount);\n    }\n\n    function setTransferFee(uint256 _fee) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        transferFee = _fee;\n        emit TransferFeeUpdated(_fee);\n    }\n\n    function setBurnRate(uint256 _rate) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        burnRate = _rate;\n        emit BurnRateUpdated(_rate);\n    }\n\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function _authorizeUpgrade(address) internal override onlyRole(UPGRADER_ROLE) {}\n}"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5c54228bbb2f1f8616179c51bdb90b7960f4a3414c390ad5c6ead6763eb55a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745fe72596bb8fde5f294d9d6b943db942202e4445536ee00da3ba011f876e86\",\"dweb:/ipfs/QmcjeESkk4rbhUVaSBfyq5f8rY56Jms1TwcJXaRD55K3UH\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AdvancedToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AdvancedToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AdvancedToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AdvancedToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AdvancedToken.sol": {
				"AdvancedToken": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "BurnRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeesWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "TransferFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FEE_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accumulatedFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftStakingModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setBurnRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftStakingModule",
									"type": "address"
								}
							],
							"name": "setNFTStakingModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingModule",
									"type": "address"
								}
							],
							"name": "setStakingModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setTransferFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vestingModule",
									"type": "address"
								}
							],
							"name": "setVestingModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AdvancedToken.sol\":377:4214  contract AdvancedToken is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"AdvancedToken.sol\":377:4214  contract AdvancedToken is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"AdvancedToken.sol\":377:4214  contract AdvancedToken is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xd73792a9\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xd73792a9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xe723422d\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_41\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xbed99850\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc60b494f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc76af7b0\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_36\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0x91d14854\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xacb2ad6f\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_45:\n      dup1\n      0x5c975abb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x7e77c503\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8f02bb5b\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_42:\n      dup1\n      0x36568abe\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x504b82bf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x55b593f1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x587f5ed7\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_47:\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x476343ee\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x492ef538\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_46:\n      dup1\n      0x23b872dd\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_48:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x189d165e\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":3820:3964  function setBurnRate(uint256 _rate) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"AdvancedToken.sol\":2392:2733  function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":829:880  uint256 public constant MAX_SUPPLY = 1000000 * 1e18 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"AdvancedToken.sol\":4049:4126  function unpause() external onlyRole(PAUSER_ROLE) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"AdvancedToken.sol\":707:734  address public feeRecipient */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":3346:3658  function withdrawFees() external onlyRole(DEFAULT_ADMIN_ROLE) whenNotPaused {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      stop\n        /* \"AdvancedToken.sol\":2053:2188  function setVestingModule(address _vestingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_17:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      stop\n        /* \"AdvancedToken.sol\":887:915  address public stakingModule */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":921:952  address public nftStakingModule */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":740:770  uint256 public accumulatedFees */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":1152:1753  function initialize(... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      tag_157\n      jump\t// in\n    tag_154:\n      stop\n        /* \"AdvancedToken.sol\":3970:4043  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      stop\n        /* \"AdvancedToken.sol\":3664:3814  function setTransferFee(uint256 _fee) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_162\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n    tag_162:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_166\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":2194:2386  function transfer(address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":646:672  uint256 public transferFee */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_188\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":678:701  uint256 public burnRate */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":1759:1894  function setStakingModule(address _stakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      tag_196\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_197:\n      tag_198\n      jump\t// in\n    tag_196:\n      stop\n        /* \"AdvancedToken.sol\":958:986  address public vestingModule */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      tag_204\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_205:\n      tag_206\n      jump\t// in\n    tag_204:\n      stop\n        /* \"AdvancedToken.sol\":776:823  uint256 public constant FEE_DENOMINATOR = 10000 */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      tag_212\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      tag_215\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":505:567  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n      pop\n      tag_218\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      tag_220\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AdvancedToken.sol\":1900:2047  function setNFTStakingModule(address _nftStakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_222\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_223:\n      tag_224\n      jump\t// in\n    tag_222:\n      stop\n        /* \"AdvancedToken.sol\":573:639  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3566:3598  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3562  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3626:3637  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3625  super.supportsInterface */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_238\n      swap1\n      tag_237\n      jump\t// in\n    tag_238:\n      dup1\n      iszero\n      tag_239\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_240\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_239)\n    tag_240:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_241:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_241\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"AdvancedToken.sol\":3820:3964  function setBurnRate(uint256 _rate) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":3874:3892  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_250:\n        /* \"AdvancedToken.sol\":3915:3920  _rate */\n      dup2\n        /* \"AdvancedToken.sol\":3904:3912  burnRate */\n      0x33\n        /* \"AdvancedToken.sol\":3904:3920  burnRate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":3935:3957  BurnRateUpdated(_rate) */\n      0x47863b595116a31383855975a4078913dce7881e717b75a06ced2db5d534ff78\n        /* \"AdvancedToken.sol\":3951:3956  _rate */\n      dup3\n        /* \"AdvancedToken.sol\":3935:3957  BurnRateUpdated(_rate) */\n      mload(0x40)\n      tag_253\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AdvancedToken.sol\":3820:3964  function setBurnRate(uint256 _rate) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":2392:2733  function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {... */\n    tag_81:\n        /* \"AdvancedToken.sol\":2512:2516  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_255:\n        /* \"AdvancedToken.sol\":2528:2570  _customTransfer(sender, recipient, amount) */\n      tag_258\n        /* \"AdvancedToken.sol\":2544:2550  sender */\n      dup5\n        /* \"AdvancedToken.sol\":2552:2561  recipient */\n      dup5\n        /* \"AdvancedToken.sol\":2563:2569  amount */\n      dup5\n        /* \"AdvancedToken.sol\":2528:2543  _customTransfer */\n      tag_259\n        /* \"AdvancedToken.sol\":2528:2570  _customTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_258:\n        /* \"AdvancedToken.sol\":2580:2604  uint256 currentAllowance */\n      0x00\n        /* \"AdvancedToken.sol\":2607:2638  allowance(sender, _msgSender()) */\n      tag_260\n        /* \"AdvancedToken.sol\":2617:2623  sender */\n      dup6\n        /* \"AdvancedToken.sol\":2625:2637  _msgSender() */\n      tag_261\n        /* \"AdvancedToken.sol\":2625:2635  _msgSender */\n      tag_244\n        /* \"AdvancedToken.sol\":2625:2637  _msgSender() */\n      jump\t// in\n    tag_261:\n        /* \"AdvancedToken.sol\":2607:2616  allowance */\n      tag_215\n        /* \"AdvancedToken.sol\":2607:2638  allowance(sender, _msgSender()) */\n      jump\t// in\n    tag_260:\n        /* \"AdvancedToken.sol\":2580:2638  uint256 currentAllowance = allowance(sender, _msgSender()) */\n      swap1\n      pop\n        /* \"AdvancedToken.sol\":2648:2705  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_262\n        /* \"AdvancedToken.sol\":2657:2663  sender */\n      dup6\n        /* \"AdvancedToken.sol\":2665:2677  _msgSender() */\n      tag_263\n        /* \"AdvancedToken.sol\":2665:2675  _msgSender */\n      tag_244\n        /* \"AdvancedToken.sol\":2665:2677  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"AdvancedToken.sol\":2698:2704  amount */\n      dup6\n        /* \"AdvancedToken.sol\":2679:2695  currentAllowance */\n      dup5\n        /* \"AdvancedToken.sol\":2679:2704  currentAllowance - amount */\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"AdvancedToken.sol\":2648:2656  _approve */\n      tag_246\n        /* \"AdvancedToken.sol\":2648:2705  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_262:\n        /* \"AdvancedToken.sol\":2722:2726  true */\n      0x01\n        /* \"AdvancedToken.sol\":2715:2726  return true */\n      swap2\n      pop\n      pop\n        /* \"AdvancedToken.sol\":2392:2733  function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4873  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4900  _getAccessControlStorage */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4902  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4920  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4927  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4928:4932  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4912:4943  return $._roles[role].adminRole */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"AdvancedToken.sol\":829:880  uint256 public constant MAX_SUPPLY = 1000000 * 1e18 */\n    tag_102:\n        /* \"AdvancedToken.sol\":866:880  1000000 * 1e18 */\n      0xd3c21bcecceda1000000\n        /* \"AdvancedToken.sol\":829:880  uint256 public constant MAX_SUPPLY = 1000000 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6473  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6459  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_279:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":4049:4126  function unpause() external onlyRole(PAUSER_ROLE) {... */\n    tag_110:\n        /* \"AdvancedToken.sol\":543:567  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_282:\n        /* \"AdvancedToken.sol\":4109:4119  _unpause() */\n      tag_284\n        /* \"AdvancedToken.sol\":4109:4117  _unpause */\n      tag_285\n        /* \"AdvancedToken.sol\":4109:4119  _unpause() */\n      jump\t// in\n    tag_284:\n        /* \"AdvancedToken.sol\":4049:4126  function unpause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":707:734  address public feeRecipient */\n    tag_113:\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AdvancedToken.sol\":3346:3658  function withdrawFees() external onlyRole(DEFAULT_ADMIN_ROLE) whenNotPaused {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":3388:3406  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_289:\n        /* \"AdvancedToken.sol\":3432:3446  uint256 amount */\n      0x00\n        /* \"AdvancedToken.sol\":3449:3464  accumulatedFees */\n      sload(0x35)\n        /* \"AdvancedToken.sol\":3432:3464  uint256 amount = accumulatedFees */\n      swap1\n      pop\n        /* \"AdvancedToken.sol\":3491:3492  0 */\n      0x00\n        /* \"AdvancedToken.sol\":3482:3488  amount */\n      dup2\n        /* \"AdvancedToken.sol\":3482:3492  amount > 0 */\n      gt\n        /* \"AdvancedToken.sol\":3474:3516  require(amount > 0, \"No fees to withdraw\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"AdvancedToken.sol\":3544:3545  0 */\n      0x00\n        /* \"AdvancedToken.sol\":3526:3541  accumulatedFees */\n      0x35\n        /* \"AdvancedToken.sol\":3526:3545  accumulatedFees = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":3555:3601  _transfer(address(this), feeRecipient, amount) */\n      tag_294\n        /* \"AdvancedToken.sol\":3573:3577  this */\n      address\n        /* \"AdvancedToken.sol\":3580:3592  feeRecipient */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AdvancedToken.sol\":3594:3600  amount */\n      dup4\n        /* \"AdvancedToken.sol\":3555:3564  _transfer */\n      tag_295\n        /* \"AdvancedToken.sol\":3555:3601  _transfer(address(this), feeRecipient, amount) */\n      jump\t// in\n    tag_294:\n        /* \"AdvancedToken.sol\":3630:3642  feeRecipient */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AdvancedToken.sol\":3616:3651  FeesWithdrawn(feeRecipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a\n        /* \"AdvancedToken.sol\":3644:3650  amount */\n      dup3\n        /* \"AdvancedToken.sol\":3616:3651  FeesWithdrawn(feeRecipient, amount) */\n      mload(0x40)\n      tag_296\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"AdvancedToken.sol\":3422:3658  {... */\n      pop\n        /* \"AdvancedToken.sol\":3346:3658  function withdrawFees() external onlyRole(DEFAULT_ADMIN_ROLE) whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":2053:2188  function setVestingModule(address _vestingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":2121:2139  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_298:\n        /* \"AdvancedToken.sol\":2167:2181  _vestingModule */\n      dup2\n        /* \"AdvancedToken.sol\":2151:2164  vestingModule */\n      0x38\n      0x00\n        /* \"AdvancedToken.sol\":2151:2181  vestingModule = _vestingModule */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":2053:2188  function setVestingModule(address _vestingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_301\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_305\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":887:915  address public stakingModule */\n    tag_130:\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"AdvancedToken.sol\":921:952  address public nftStakingModule */\n    tag_138:\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AdvancedToken.sol\":740:770  uint256 public accumulatedFees */\n    tag_142:\n      sload(0x35)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":1152:1753  function initialize(... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_320\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_322:\n        /* \"AdvancedToken.sol\":1352:1380  __ERC20_init(_name, _symbol) */\n      tag_324\n        /* \"AdvancedToken.sol\":1365:1370  _name */\n      dup11\n        /* \"AdvancedToken.sol\":1372:1379  _symbol */\n      dup11\n        /* \"AdvancedToken.sol\":1352:1364  __ERC20_init */\n      tag_325\n        /* \"AdvancedToken.sol\":1352:1380  __ERC20_init(_name, _symbol) */\n      jump\t// in\n    tag_324:\n        /* \"AdvancedToken.sol\":1390:1412  __AccessControl_init() */\n      tag_326\n        /* \"AdvancedToken.sol\":1390:1410  __AccessControl_init */\n      tag_327\n        /* \"AdvancedToken.sol\":1390:1412  __AccessControl_init() */\n      jump\t// in\n    tag_326:\n        /* \"AdvancedToken.sol\":1422:1446  __UUPSUpgradeable_init() */\n      tag_328\n        /* \"AdvancedToken.sol\":1422:1444  __UUPSUpgradeable_init */\n      tag_329\n        /* \"AdvancedToken.sol\":1422:1446  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_328:\n        /* \"AdvancedToken.sol\":1456:1473  __Pausable_init() */\n      tag_330\n        /* \"AdvancedToken.sol\":1456:1471  __Pausable_init */\n      tag_331\n        /* \"AdvancedToken.sol\":1456:1473  __Pausable_init() */\n      jump\t// in\n    tag_330:\n        /* \"AdvancedToken.sol\":1484:1522  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":1495:1513  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"AdvancedToken.sol\":1515:1521  _admin */\n      dup9\n        /* \"AdvancedToken.sol\":1484:1494  _grantRole */\n      tag_274\n        /* \"AdvancedToken.sol\":1484:1522  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n      jump\t// in\n    tag_332:\n      pop\n        /* \"AdvancedToken.sol\":1532:1563  _grantRole(PAUSER_ROLE, _admin) */\n      tag_333\n        /* \"AdvancedToken.sol\":543:567  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"AdvancedToken.sol\":1556:1562  _admin */\n      dup9\n        /* \"AdvancedToken.sol\":1532:1542  _grantRole */\n      tag_274\n        /* \"AdvancedToken.sol\":1532:1563  _grantRole(PAUSER_ROLE, _admin) */\n      jump\t// in\n    tag_333:\n      pop\n        /* \"AdvancedToken.sol\":1573:1606  _grantRole(UPGRADER_ROLE, _admin) */\n      tag_334\n        /* \"AdvancedToken.sol\":613:639  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"AdvancedToken.sol\":1599:1605  _admin */\n      dup9\n        /* \"AdvancedToken.sol\":1573:1583  _grantRole */\n      tag_274\n        /* \"AdvancedToken.sol\":1573:1606  _grantRole(UPGRADER_ROLE, _admin) */\n      jump\t// in\n    tag_334:\n      pop\n        /* \"AdvancedToken.sol\":1617:1644  _mint(_admin, _totalSupply) */\n      tag_335\n        /* \"AdvancedToken.sol\":1623:1629  _admin */\n      dup8\n        /* \"AdvancedToken.sol\":1631:1643  _totalSupply */\n      dup10\n        /* \"AdvancedToken.sol\":1617:1622  _mint */\n      tag_336\n        /* \"AdvancedToken.sol\":1617:1644  _mint(_admin, _totalSupply) */\n      jump\t// in\n    tag_335:\n        /* \"AdvancedToken.sol\":1668:1671  100 */\n      0x64\n        /* \"AdvancedToken.sol\":1654:1665  transferFee */\n      0x32\n        /* \"AdvancedToken.sol\":1654:1671  transferFee = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":1698:1700  50 */\n      0x32\n        /* \"AdvancedToken.sol\":1687:1695  burnRate */\n      0x33\n        /* \"AdvancedToken.sol\":1687:1700  burnRate = 50 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":1733:1746  _feeRecipient */\n      dup6\n        /* \"AdvancedToken.sol\":1718:1730  feeRecipient */\n      0x34\n      0x00\n        /* \"AdvancedToken.sol\":1718:1746  feeRecipient = _feeRecipient */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"AdvancedToken.sol\":1152:1753  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":3970:4043  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_160:\n        /* \"AdvancedToken.sol\":543:567  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_341:\n        /* \"AdvancedToken.sol\":4028:4036  _pause() */\n      tag_343\n        /* \"AdvancedToken.sol\":4028:4034  _pause */\n      tag_344\n        /* \"AdvancedToken.sol\":4028:4036  _pause() */\n      jump\t// in\n    tag_343:\n        /* \"AdvancedToken.sol\":3970:4043  function pause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":3664:3814  function setTransferFee(uint256 _fee) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":3720:3738  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_346:\n        /* \"AdvancedToken.sol\":3764:3768  _fee */\n      dup2\n        /* \"AdvancedToken.sol\":3750:3761  transferFee */\n      0x32\n        /* \"AdvancedToken.sol\":3750:3768  transferFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":3783:3807  TransferFeeUpdated(_fee) */\n      0xf9f635b7cf851af6071aaf78ef8a5f752dc52f19d556fea4512b0c2ad4baea72\n        /* \"AdvancedToken.sol\":3802:3806  _fee */\n      dup3\n        /* \"AdvancedToken.sol\":3783:3807  TransferFeeUpdated(_fee) */\n      mload(0x40)\n      tag_348\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AdvancedToken.sol\":3664:3814  function setTransferFee(uint256 _fee) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3855  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3882  _getAccessControlStorage */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3884  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3902  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3909  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3910:3914  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3923  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3924:3931  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3894:3932  return $._roles[role].hasRole[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_353\n      swap1\n      tag_237\n      jump\t// in\n    tag_353:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_354\n      swap1\n      tag_237\n      jump\t// in\n    tag_354:\n      dup1\n      iszero\n      tag_355\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_356\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_355)\n    tag_356:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_357:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_357\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"AdvancedToken.sol\":2194:2386  function transfer(address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {... */\n    tag_181:\n        /* \"AdvancedToken.sol\":2294:2298  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_359:\n        /* \"AdvancedToken.sol\":2310:2358  _customTransfer(_msgSender(), recipient, amount) */\n      tag_361\n        /* \"AdvancedToken.sol\":2326:2338  _msgSender() */\n      tag_362\n        /* \"AdvancedToken.sol\":2326:2336  _msgSender */\n      tag_244\n        /* \"AdvancedToken.sol\":2326:2338  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"AdvancedToken.sol\":2340:2349  recipient */\n      dup5\n        /* \"AdvancedToken.sol\":2351:2357  amount */\n      dup5\n        /* \"AdvancedToken.sol\":2310:2325  _customTransfer */\n      tag_259\n        /* \"AdvancedToken.sol\":2310:2358  _customTransfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_361:\n        /* \"AdvancedToken.sol\":2375:2379  true */\n      0x01\n        /* \"AdvancedToken.sol\":2368:2379  return true */\n      swap1\n      pop\n        /* \"AdvancedToken.sol\":2194:2386  function transfer(address recipient, uint256 amount) public virtual override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":646:672  uint256 public transferFee */\n    tag_185:\n      sload(0x32)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_189:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"AdvancedToken.sol\":678:701  uint256 public burnRate */\n    tag_193:\n      sload(0x33)\n      dup2\n      jump\t// out\n        /* \"AdvancedToken.sol\":1759:1894  function setStakingModule(address _stakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":1827:1845  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_364:\n        /* \"AdvancedToken.sol\":1873:1887  _stakingModule */\n      dup2\n        /* \"AdvancedToken.sol\":1857:1870  stakingModule */\n      0x36\n      0x00\n        /* \"AdvancedToken.sol\":1857:1887  stakingModule = _stakingModule */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":1759:1894  function setStakingModule(address _stakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":958:986  address public vestingModule */\n    tag_201:\n      0x38\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n    tag_370:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":776:823  uint256 public constant FEE_DENOMINATOR = 10000 */\n    tag_209:\n        /* \"AdvancedToken.sol\":818:823  10000 */\n      0x2710\n        /* \"AdvancedToken.sol\":776:823  uint256 public constant FEE_DENOMINATOR = 10000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":505:567  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_219:\n        /* \"AdvancedToken.sol\":543:567  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"AdvancedToken.sol\":505:567  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"AdvancedToken.sol\":1900:2047  function setNFTStakingModule(address _nftStakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"AdvancedToken.sol\":1974:1992  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_374:\n        /* \"AdvancedToken.sol\":2023:2040  _nftStakingModule */\n      dup2\n        /* \"AdvancedToken.sol\":2004:2020  nftStakingModule */\n      0x37\n      0x00\n        /* \"AdvancedToken.sol\":2004:2040  nftStakingModule = _nftStakingModule */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":1900:2047  function setNFTStakingModule(address _nftStakingModule) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"AdvancedToken.sol\":573:639  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_227:\n        /* \"AdvancedToken.sol\":613:639  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"AdvancedToken.sol\":573:639  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1035:1181  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1111:1115  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1149:1174  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1145  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1127:1174  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1035:1181  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4241  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"AdvancedToken.sol\":2739:3340  function _customTransfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_259:\n        /* \"AdvancedToken.sol\":2851:2852  0 */\n      0x00\n        /* \"AdvancedToken.sol\":2842:2848  amount */\n      dup2\n        /* \"AdvancedToken.sol\":2842:2852  amount > 0 */\n      gt\n        /* \"AdvancedToken.sol\":2834:2886  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_393\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_392:\n        /* \"AdvancedToken.sol\":2896:2907  uint256 fee */\n      0x00\n        /* \"AdvancedToken.sol\":818:823  10000 */\n      0x2710\n        /* \"AdvancedToken.sol\":2920:2931  transferFee */\n      sload(0x32)\n        /* \"AdvancedToken.sol\":2911:2917  amount */\n      dup4\n        /* \"AdvancedToken.sol\":2911:2931  amount * transferFee */\n      tag_395\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n        /* \"AdvancedToken.sol\":2910:2950  (amount * transferFee) / FEE_DENOMINATOR */\n      tag_397\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"AdvancedToken.sol\":2896:2950  uint256 fee = (amount * transferFee) / FEE_DENOMINATOR */\n      swap1\n      pop\n        /* \"AdvancedToken.sol\":2960:2978  uint256 burnAmount */\n      0x00\n        /* \"AdvancedToken.sol\":818:823  10000 */\n      0x2710\n        /* \"AdvancedToken.sol\":2991:2999  burnRate */\n      sload(0x33)\n        /* \"AdvancedToken.sol\":2982:2988  amount */\n      dup5\n        /* \"AdvancedToken.sol\":2982:2999  amount * burnRate */\n      tag_399\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_399:\n        /* \"AdvancedToken.sol\":2981:3018  (amount * burnRate) / FEE_DENOMINATOR */\n      tag_400\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_400:\n        /* \"AdvancedToken.sol\":2960:3018  uint256 burnAmount = (amount * burnRate) / FEE_DENOMINATOR */\n      swap1\n      pop\n        /* \"AdvancedToken.sol\":3028:3045  uint256 netAmount */\n      0x00\n        /* \"AdvancedToken.sol\":3063:3073  burnAmount */\n      dup2\n        /* \"AdvancedToken.sol\":3057:3060  fee */\n      dup4\n        /* \"AdvancedToken.sol\":3048:3054  amount */\n      dup6\n        /* \"AdvancedToken.sol\":3048:3060  amount - fee */\n      tag_401\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_401:\n        /* \"AdvancedToken.sol\":3048:3073  amount - fee - burnAmount */\n      tag_402\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_402:\n        /* \"AdvancedToken.sol\":3028:3073  uint256 netAmount = amount - fee - burnAmount */\n      swap1\n      pop\n        /* \"AdvancedToken.sol\":3094:3095  0 */\n      0x00\n        /* \"AdvancedToken.sol\":3088:3091  fee */\n      dup4\n        /* \"AdvancedToken.sol\":3088:3095  fee > 0 */\n      gt\n        /* \"AdvancedToken.sol\":3084:3200  if (fee > 0) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"AdvancedToken.sol\":3111:3153  super._transfer(sender, feeRecipient, fee) */\n      tag_404\n        /* \"AdvancedToken.sol\":3127:3133  sender */\n      dup7\n        /* \"AdvancedToken.sol\":3135:3147  feeRecipient */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AdvancedToken.sol\":3149:3152  fee */\n      dup6\n        /* \"AdvancedToken.sol\":3111:3126  super._transfer */\n      tag_295\n        /* \"AdvancedToken.sol\":3111:3153  super._transfer(sender, feeRecipient, fee) */\n      jump\t// in\n    tag_404:\n        /* \"AdvancedToken.sol\":3186:3189  fee */\n      dup3\n        /* \"AdvancedToken.sol\":3167:3182  accumulatedFees */\n      0x35\n      0x00\n        /* \"AdvancedToken.sol\":3167:3189  accumulatedFees += fee */\n      dup3\n      dup3\n      sload\n      tag_405\n      swap2\n      swap1\n      tag_406\n      jump\t// in\n    tag_405:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AdvancedToken.sol\":3084:3200  if (fee > 0) {... */\n    tag_403:\n        /* \"AdvancedToken.sol\":3226:3227  0 */\n      0x00\n        /* \"AdvancedToken.sol\":3213:3223  burnAmount */\n      dup3\n        /* \"AdvancedToken.sol\":3213:3227  burnAmount > 0 */\n      gt\n        /* \"AdvancedToken.sol\":3209:3279  if (burnAmount > 0) {... */\n      iszero\n      tag_407\n      jumpi\n        /* \"AdvancedToken.sol\":3243:3268  _burn(sender, burnAmount) */\n      tag_408\n        /* \"AdvancedToken.sol\":3249:3255  sender */\n      dup7\n        /* \"AdvancedToken.sol\":3257:3267  burnAmount */\n      dup4\n        /* \"AdvancedToken.sol\":3243:3248  _burn */\n      tag_409\n        /* \"AdvancedToken.sol\":3243:3268  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_408:\n        /* \"AdvancedToken.sol\":3209:3279  if (burnAmount > 0) {... */\n    tag_407:\n        /* \"AdvancedToken.sol\":3288:3333  super._transfer(sender, recipient, netAmount) */\n      tag_410\n        /* \"AdvancedToken.sol\":3304:3310  sender */\n      dup7\n        /* \"AdvancedToken.sol\":3312:3321  recipient */\n      dup7\n        /* \"AdvancedToken.sol\":3323:3332  netAmount */\n      dup4\n        /* \"AdvancedToken.sol\":3288:3303  super._transfer */\n      tag_295\n        /* \"AdvancedToken.sol\":3288:3333  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_410:\n        /* \"AdvancedToken.sol\":2824:3340  {... */\n      pop\n      pop\n      pop\n        /* \"AdvancedToken.sol\":2739:3340  function _customTransfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2845:2875  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2920:2948  AccessControlStorageLocation */\n      0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2910:2948  $.slot := AccessControlStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7393  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7420  _getAccessControlStorage */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7422  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_414:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_415\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7476  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7484:7488  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7497  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7498:7505  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7569  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_412)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_412:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7986:8016  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8019:8045  _getAccessControlStorage() */\n      tag_419\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8019:8043  _getAccessControlStorage */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8019:8045  _getAccessControlStorage() */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7986:8045  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_420\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_420:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_421\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8098  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8105  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8106:8110  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8119  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8127  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8182:8194  _msgSender() */\n      tag_422\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8182:8192  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8182:8194  _msgSender() */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8173:8180  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8167:8171  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_418)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8258:8263  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8251:8263  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_418:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_425\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_426\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_428\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_429\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_431\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_432\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_434\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_434:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_436\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_438\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_440\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"AdvancedToken.sol\":4132:4212  function _authorizeUpgrade(address) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_305:\n        /* \"AdvancedToken.sol\":613:639  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_443\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_443:\n        /* \"AdvancedToken.sol\":4132:4212  function _authorizeUpgrade(address) internal override onlyRole(UPGRADER_ROLE) {} */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_446\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_447\n      swap2\n      swap1\n      tag_448\n      jump\t// in\n    tag_447:\n      0x01\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_449\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_453\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_453:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_449:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_455\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_456\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_456:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_457\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_458\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_460\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_466\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_467\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_466:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_469\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_472\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_472:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_477\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_477:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_481\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_481:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_482\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_436\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_484\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_484:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_486\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_487\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_487:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_489:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_491\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_491:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_490:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_492\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_493\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_493:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_492:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_495\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_495:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_497\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_497:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_498\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4547:4554  account */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4556:4560  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_499\n      swap3\n      swap2\n      swap1\n      tag_500\n      jump\t// in\n    tag_499:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n    tag_498:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9259:9465  function _burn(address account, uint256 value) internal {... */\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9348:9349  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9350  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9336  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9350  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9325:9414  if (account == address(0)) {... */\n      tag_502\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9400:9401  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9373:9403  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_503\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_503:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9325:9414  if (account == address(0)) {... */\n    tag_502:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9458  _update(account, address(0), value) */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9431:9438  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:9449  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9452:9457  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9430  _update */\n      tag_436\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9458  _update(account, address(0), value) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9259:9465  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_506\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_506:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_507\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_508\n      swap1\n      tag_509\n      jump\t// in\n    tag_508:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_507:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_511\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_511:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_512\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_513\n      swap2\n      swap1\n      tag_406\n      jump\t// in\n    tag_513:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_514)\n    tag_512:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_515\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_516\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_517\n      jump\t// in\n    tag_516:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_515:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_514:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_519)\n    tag_518:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_519:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_520\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_520:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_440:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_522\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_523\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_522:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_458:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_525\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_526\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_525:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_527\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_528\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_529\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_528:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_530)\n    tag_527:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_531\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_532\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_534\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_535\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_534:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_536\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_536:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_467:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_538\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_538:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_540\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_540:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_541\n      swap2\n      swap1\n      tag_542\n      jump\t// in\n    tag_541:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_543\n      swap2\n      swap1\n      tag_542\n      jump\t// in\n    tag_543:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_545\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_545:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_523:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_526:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_549\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_550\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_550:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_549:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_551\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_523\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_551:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_529:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_553\n      swap2\n      swap1\n      tag_554\n      jump\t// in\n    tag_553:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_557\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_556)\n    tag_557:\n      0x60\n      swap2\n      pop\n    tag_556:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_558\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_559\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_558:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_532:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_561\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_561:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_535:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_563\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_563:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_559:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_565\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_566\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_567\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_566:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_568)\n    tag_565:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_569\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_569:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_570\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_571\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_571:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_570:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_564)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_568:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_564:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_567:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_573\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_573:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_575:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_576:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_577:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_578:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_579:\n        /* \"#utility.yul\":561:584   */\n      tag_655\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_578\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_656\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_656:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_580:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_658\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_579\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_52:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_661\n      tag_576\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":833:952   */\n    tag_660:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_662\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_580\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_581:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_582:\n        /* \"#utility.yul\":1268:1289   */\n      tag_665\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_581\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_55:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_667\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_582\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_583:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_584:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_585:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_586:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_587:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_673\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_583\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":2222:2293   */\n      tag_674\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_584\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_675\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_585\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":2392:2421   */\n      tag_676\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_586\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_60:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_678\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_587\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_588:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_589:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_681\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_588\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_590:\n        /* \"#utility.yul\":3060:3084   */\n      tag_683\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_589\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_684\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_684:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_591:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_686\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_590\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_592:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_593:\n        /* \"#utility.yul\":3416:3440   */\n      tag_689\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_592\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_690:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_594:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_692\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_593\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_64:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_695\n      tag_576\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":3709:3828   */\n    tag_694:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_696\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_591\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_697\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_594\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_595:\n        /* \"#utility.yul\":4183:4207   */\n      tag_699\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_592\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_71:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_701\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_595\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:4777   */\n    tag_75:\n        /* \"#utility.yul\":4507:4513   */\n      0x00\n        /* \"#utility.yul\":4556:4558   */\n      0x20\n        /* \"#utility.yul\":4544:4553   */\n      dup3\n        /* \"#utility.yul\":4535:4542   */\n      dup5\n        /* \"#utility.yul\":4531:4554   */\n      sub\n        /* \"#utility.yul\":4527:4559   */\n      slt\n        /* \"#utility.yul\":4524:4643   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":4562:4641   */\n      tag_704\n      tag_576\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":4524:4643   */\n    tag_703:\n        /* \"#utility.yul\":4682:4683   */\n      0x00\n        /* \"#utility.yul\":4707:4760   */\n      tag_705\n        /* \"#utility.yul\":4752:4759   */\n      dup5\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup6\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_594\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4770   */\n      pop\n        /* \"#utility.yul\":4448:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_80:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_708\n      tag_576\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":4893:5012   */\n    tag_707:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_709\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_591\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_710\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_591\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_711\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_594\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_596:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_597:\n        /* \"#utility.yul\":5564:5588   */\n      tag_714\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_596\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_715:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_598:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_717\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_597\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6093   */\n    tag_86:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5851:5858   */\n      dup5\n        /* \"#utility.yul\":5847:5870   */\n      sub\n        /* \"#utility.yul\":5843:5875   */\n      slt\n        /* \"#utility.yul\":5840:5959   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":5878:5957   */\n      tag_720\n      tag_576\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":5840:5959   */\n    tag_719:\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":6023:6076   */\n      tag_721\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6048:6057   */\n      dup6\n        /* \"#utility.yul\":6044:6066   */\n      add\n        /* \"#utility.yul\":6023:6076   */\n      tag_598\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":6013:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6086   */\n      pop\n        /* \"#utility.yul\":5764:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6217   */\n    tag_599:\n        /* \"#utility.yul\":6186:6210   */\n      tag_723\n        /* \"#utility.yul\":6204:6209   */\n      dup2\n        /* \"#utility.yul\":6186:6210   */\n      tag_596\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6211   */\n      mstore\n        /* \"#utility.yul\":6099:6217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6445   */\n    tag_89:\n        /* \"#utility.yul\":6316:6320   */\n      0x00\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"#utility.yul\":6343:6352   */\n      dup3\n        /* \"#utility.yul\":6339:6357   */\n      add\n        /* \"#utility.yul\":6331:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6438   */\n      tag_725\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6367:6438   */\n      tag_599\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":6223:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_93:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_727\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_728\n      tag_576\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":6544:6663   */\n    tag_727:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_729\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_598\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_730\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_591\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_600:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_601:\n        /* \"#utility.yul\":7106:7128   */\n      tag_733\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_600\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_99:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_735\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_601\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7479   */\n    tag_602:\n        /* \"#utility.yul\":7448:7472   */\n      tag_737\n        /* \"#utility.yul\":7466:7471   */\n      dup2\n        /* \"#utility.yul\":7448:7472   */\n      tag_589\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":7443:7446   */\n      dup3\n        /* \"#utility.yul\":7436:7473   */\n      mstore\n        /* \"#utility.yul\":7361:7479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7485:7707   */\n    tag_115:\n        /* \"#utility.yul\":7578:7582   */\n      0x00\n        /* \"#utility.yul\":7616:7618   */\n      0x20\n        /* \"#utility.yul\":7605:7614   */\n      dup3\n        /* \"#utility.yul\":7601:7619   */\n      add\n        /* \"#utility.yul\":7593:7619   */\n      swap1\n      pop\n        /* \"#utility.yul\":7629:7700   */\n      tag_739\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7686:7695   */\n      dup4\n        /* \"#utility.yul\":7682:7699   */\n      add\n        /* \"#utility.yul\":7673:7679   */\n      dup5\n        /* \"#utility.yul\":7629:7700   */\n      tag_602\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":7485:7707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:8042   */\n    tag_122:\n        /* \"#utility.yul\":7772:7778   */\n      0x00\n        /* \"#utility.yul\":7821:7823   */\n      0x20\n        /* \"#utility.yul\":7809:7818   */\n      dup3\n        /* \"#utility.yul\":7800:7807   */\n      dup5\n        /* \"#utility.yul\":7796:7819   */\n      sub\n        /* \"#utility.yul\":7792:7824   */\n      slt\n        /* \"#utility.yul\":7789:7908   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":7827:7906   */\n      tag_742\n      tag_576\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":7789:7908   */\n    tag_741:\n        /* \"#utility.yul\":7947:7948   */\n      0x00\n        /* \"#utility.yul\":7972:8025   */\n      tag_743\n        /* \"#utility.yul\":8017:8024   */\n      dup5\n        /* \"#utility.yul\":8008:8014   */\n      dup3\n        /* \"#utility.yul\":7997:8006   */\n      dup6\n        /* \"#utility.yul\":7993:8015   */\n      add\n        /* \"#utility.yul\":7972:8025   */\n      tag_591\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":7962:8025   */\n      swap2\n      pop\n        /* \"#utility.yul\":7918:8035   */\n      pop\n        /* \"#utility.yul\":7713:8042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8048:8165   */\n    tag_603:\n        /* \"#utility.yul\":8157:8158   */\n      0x00\n        /* \"#utility.yul\":8154:8155   */\n      dup1\n        /* \"#utility.yul\":8147:8159   */\n      revert\n        /* \"#utility.yul\":8171:8288   */\n    tag_604:\n        /* \"#utility.yul\":8280:8281   */\n      0x00\n        /* \"#utility.yul\":8277:8278   */\n      dup1\n        /* \"#utility.yul\":8270:8282   */\n      revert\n        /* \"#utility.yul\":8294:8474   */\n    tag_605:\n        /* \"#utility.yul\":8342:8419   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8339:8340   */\n      0x00\n        /* \"#utility.yul\":8332:8420   */\n      mstore\n        /* \"#utility.yul\":8439:8443   */\n      0x41\n        /* \"#utility.yul\":8436:8437   */\n      0x04\n        /* \"#utility.yul\":8429:8444   */\n      mstore\n        /* \"#utility.yul\":8463:8467   */\n      0x24\n        /* \"#utility.yul\":8460:8461   */\n      0x00\n        /* \"#utility.yul\":8453:8468   */\n      revert\n        /* \"#utility.yul\":8480:8761   */\n    tag_606:\n        /* \"#utility.yul\":8563:8590   */\n      tag_748\n        /* \"#utility.yul\":8585:8589   */\n      dup3\n        /* \"#utility.yul\":8563:8590   */\n      tag_586\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":8555:8561   */\n      dup2\n        /* \"#utility.yul\":8551:8591   */\n      add\n        /* \"#utility.yul\":8693:8699   */\n      dup2\n        /* \"#utility.yul\":8681:8691   */\n      dup2\n        /* \"#utility.yul\":8678:8700   */\n      lt\n        /* \"#utility.yul\":8657:8675   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8645:8655   */\n      dup3\n        /* \"#utility.yul\":8642:8676   */\n      gt\n        /* \"#utility.yul\":8639:8701   */\n      or\n        /* \"#utility.yul\":8636:8724   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":8704:8722   */\n      tag_750\n      tag_605\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":8636:8724   */\n    tag_749:\n        /* \"#utility.yul\":8744:8754   */\n      dup1\n        /* \"#utility.yul\":8740:8742   */\n      0x40\n        /* \"#utility.yul\":8733:8755   */\n      mstore\n        /* \"#utility.yul\":8523:8761   */\n      pop\n        /* \"#utility.yul\":8480:8761   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8767:8896   */\n    tag_607:\n        /* \"#utility.yul\":8801:8807   */\n      0x00\n        /* \"#utility.yul\":8828:8848   */\n      tag_752\n      tag_575\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":8818:8848   */\n      swap1\n      pop\n        /* \"#utility.yul\":8857:8890   */\n      tag_753\n        /* \"#utility.yul\":8885:8889   */\n      dup3\n        /* \"#utility.yul\":8877:8883   */\n      dup3\n        /* \"#utility.yul\":8857:8890   */\n      tag_606\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":8767:8896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8902:9209   */\n    tag_608:\n        /* \"#utility.yul\":8963:8967   */\n      0x00\n        /* \"#utility.yul\":9053:9071   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9045:9051   */\n      dup3\n        /* \"#utility.yul\":9042:9072   */\n      gt\n        /* \"#utility.yul\":9039:9095   */\n      iszero\n      tag_755\n      jumpi\n        /* \"#utility.yul\":9075:9093   */\n      tag_756\n      tag_605\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":9039:9095   */\n    tag_755:\n        /* \"#utility.yul\":9113:9142   */\n      tag_757\n        /* \"#utility.yul\":9135:9141   */\n      dup3\n        /* \"#utility.yul\":9113:9142   */\n      tag_586\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":9105:9142   */\n      swap1\n      pop\n        /* \"#utility.yul\":9197:9201   */\n      0x20\n        /* \"#utility.yul\":9191:9195   */\n      dup2\n        /* \"#utility.yul\":9187:9202   */\n      add\n        /* \"#utility.yul\":9179:9202   */\n      swap1\n      pop\n        /* \"#utility.yul\":8902:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9363   */\n    tag_609:\n        /* \"#utility.yul\":9313:9319   */\n      dup3\n        /* \"#utility.yul\":9308:9311   */\n      dup2\n        /* \"#utility.yul\":9303:9306   */\n      dup4\n        /* \"#utility.yul\":9290:9320   */\n      calldatacopy\n        /* \"#utility.yul\":9354:9355   */\n      0x00\n        /* \"#utility.yul\":9345:9351   */\n      dup4\n        /* \"#utility.yul\":9340:9343   */\n      dup4\n        /* \"#utility.yul\":9336:9352   */\n      add\n        /* \"#utility.yul\":9329:9356   */\n      mstore\n        /* \"#utility.yul\":9215:9363   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9369:9792   */\n    tag_610:\n        /* \"#utility.yul\":9446:9451   */\n      0x00\n        /* \"#utility.yul\":9471:9536   */\n      tag_760\n        /* \"#utility.yul\":9487:9535   */\n      tag_761\n        /* \"#utility.yul\":9528:9534   */\n      dup5\n        /* \"#utility.yul\":9487:9535   */\n      tag_608\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":9471:9536   */\n      tag_607\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":9462:9536   */\n      swap1\n      pop\n        /* \"#utility.yul\":9559:9565   */\n      dup3\n        /* \"#utility.yul\":9552:9557   */\n      dup2\n        /* \"#utility.yul\":9545:9566   */\n      mstore\n        /* \"#utility.yul\":9597:9601   */\n      0x20\n        /* \"#utility.yul\":9590:9595   */\n      dup2\n        /* \"#utility.yul\":9586:9602   */\n      add\n        /* \"#utility.yul\":9635:9638   */\n      dup5\n        /* \"#utility.yul\":9626:9632   */\n      dup5\n        /* \"#utility.yul\":9621:9624   */\n      dup5\n        /* \"#utility.yul\":9617:9633   */\n      add\n        /* \"#utility.yul\":9614:9639   */\n      gt\n        /* \"#utility.yul\":9611:9723   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":9642:9721   */\n      tag_763\n      tag_604\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":9611:9723   */\n    tag_762:\n        /* \"#utility.yul\":9732:9786   */\n      tag_764\n        /* \"#utility.yul\":9779:9785   */\n      dup5\n        /* \"#utility.yul\":9774:9777   */\n      dup3\n        /* \"#utility.yul\":9769:9772   */\n      dup6\n        /* \"#utility.yul\":9732:9786   */\n      tag_609\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":9452:9792   */\n      pop\n        /* \"#utility.yul\":9369:9792   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9811:10149   */\n    tag_611:\n        /* \"#utility.yul\":9866:9871   */\n      0x00\n        /* \"#utility.yul\":9915:9918   */\n      dup3\n        /* \"#utility.yul\":9908:9912   */\n      0x1f\n        /* \"#utility.yul\":9900:9906   */\n      dup4\n        /* \"#utility.yul\":9896:9913   */\n      add\n        /* \"#utility.yul\":9892:9919   */\n      slt\n        /* \"#utility.yul\":9882:10004   */\n      tag_766\n      jumpi\n        /* \"#utility.yul\":9923:10002   */\n      tag_767\n      tag_603\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":9882:10004   */\n    tag_766:\n        /* \"#utility.yul\":10040:10046   */\n      dup2\n        /* \"#utility.yul\":10027:10047   */\n      calldataload\n        /* \"#utility.yul\":10065:10143   */\n      tag_768\n        /* \"#utility.yul\":10139:10142   */\n      dup5\n        /* \"#utility.yul\":10131:10137   */\n      dup3\n        /* \"#utility.yul\":10124:10128   */\n      0x20\n        /* \"#utility.yul\":10116:10122   */\n      dup7\n        /* \"#utility.yul\":10112:10129   */\n      add\n        /* \"#utility.yul\":10065:10143   */\n      tag_610\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":10056:10143   */\n      swap2\n      pop\n        /* \"#utility.yul\":9872:10149   */\n      pop\n        /* \"#utility.yul\":9811:10149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10155:10807   */\n    tag_126:\n        /* \"#utility.yul\":10232:10238   */\n      0x00\n        /* \"#utility.yul\":10240:10246   */\n      dup1\n        /* \"#utility.yul\":10289:10291   */\n      0x40\n        /* \"#utility.yul\":10277:10286   */\n      dup4\n        /* \"#utility.yul\":10268:10275   */\n      dup6\n        /* \"#utility.yul\":10264:10287   */\n      sub\n        /* \"#utility.yul\":10260:10292   */\n      slt\n        /* \"#utility.yul\":10257:10376   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":10295:10374   */\n      tag_771\n      tag_576\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":10257:10376   */\n    tag_770:\n        /* \"#utility.yul\":10415:10416   */\n      0x00\n        /* \"#utility.yul\":10440:10493   */\n      tag_772\n        /* \"#utility.yul\":10485:10492   */\n      dup6\n        /* \"#utility.yul\":10476:10482   */\n      dup3\n        /* \"#utility.yul\":10465:10474   */\n      dup7\n        /* \"#utility.yul\":10461:10483   */\n      add\n        /* \"#utility.yul\":10440:10493   */\n      tag_591\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":10430:10493   */\n      swap3\n      pop\n        /* \"#utility.yul\":10386:10503   */\n      pop\n        /* \"#utility.yul\":10570:10572   */\n      0x20\n        /* \"#utility.yul\":10559:10568   */\n      dup4\n        /* \"#utility.yul\":10555:10573   */\n      add\n        /* \"#utility.yul\":10542:10574   */\n      calldataload\n        /* \"#utility.yul\":10601:10619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10593:10599   */\n      dup2\n        /* \"#utility.yul\":10590:10620   */\n      gt\n        /* \"#utility.yul\":10587:10704   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":10623:10702   */\n      tag_774\n      tag_577\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":10587:10704   */\n    tag_773:\n        /* \"#utility.yul\":10728:10790   */\n      tag_775\n        /* \"#utility.yul\":10782:10789   */\n      dup6\n        /* \"#utility.yul\":10773:10779   */\n      dup3\n        /* \"#utility.yul\":10762:10771   */\n      dup7\n        /* \"#utility.yul\":10758:10780   */\n      add\n        /* \"#utility.yul\":10728:10790   */\n      tag_611\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":10718:10790   */\n      swap2\n      pop\n        /* \"#utility.yul\":10513:10800   */\n      pop\n        /* \"#utility.yul\":10155:10807   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10813:11121   */\n    tag_612:\n        /* \"#utility.yul\":10875:10879   */\n      0x00\n        /* \"#utility.yul\":10965:10983   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10957:10963   */\n      dup3\n        /* \"#utility.yul\":10954:10984   */\n      gt\n        /* \"#utility.yul\":10951:11007   */\n      iszero\n      tag_777\n      jumpi\n        /* \"#utility.yul\":10987:11005   */\n      tag_778\n      tag_605\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":10951:11007   */\n    tag_777:\n        /* \"#utility.yul\":11025:11054   */\n      tag_779\n        /* \"#utility.yul\":11047:11053   */\n      dup3\n        /* \"#utility.yul\":11025:11054   */\n      tag_586\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":11017:11054   */\n      swap1\n      pop\n        /* \"#utility.yul\":11109:11113   */\n      0x20\n        /* \"#utility.yul\":11103:11107   */\n      dup2\n        /* \"#utility.yul\":11099:11114   */\n      add\n        /* \"#utility.yul\":11091:11114   */\n      swap1\n      pop\n        /* \"#utility.yul\":10813:11121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11127:11552   */\n    tag_613:\n        /* \"#utility.yul\":11205:11210   */\n      0x00\n        /* \"#utility.yul\":11230:11296   */\n      tag_781\n        /* \"#utility.yul\":11246:11295   */\n      tag_782\n        /* \"#utility.yul\":11288:11294   */\n      dup5\n        /* \"#utility.yul\":11246:11295   */\n      tag_612\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":11230:11296   */\n      tag_607\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":11221:11296   */\n      swap1\n      pop\n        /* \"#utility.yul\":11319:11325   */\n      dup3\n        /* \"#utility.yul\":11312:11317   */\n      dup2\n        /* \"#utility.yul\":11305:11326   */\n      mstore\n        /* \"#utility.yul\":11357:11361   */\n      0x20\n        /* \"#utility.yul\":11350:11355   */\n      dup2\n        /* \"#utility.yul\":11346:11362   */\n      add\n        /* \"#utility.yul\":11395:11398   */\n      dup5\n        /* \"#utility.yul\":11386:11392   */\n      dup5\n        /* \"#utility.yul\":11381:11384   */\n      dup5\n        /* \"#utility.yul\":11377:11393   */\n      add\n        /* \"#utility.yul\":11374:11399   */\n      gt\n        /* \"#utility.yul\":11371:11483   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":11402:11481   */\n      tag_784\n      tag_604\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":11371:11483   */\n    tag_783:\n        /* \"#utility.yul\":11492:11546   */\n      tag_785\n        /* \"#utility.yul\":11539:11545   */\n      dup5\n        /* \"#utility.yul\":11534:11537   */\n      dup3\n        /* \"#utility.yul\":11529:11532   */\n      dup6\n        /* \"#utility.yul\":11492:11546   */\n      tag_609\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":11211:11552   */\n      pop\n        /* \"#utility.yul\":11127:11552   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11572:11912   */\n    tag_614:\n        /* \"#utility.yul\":11628:11633   */\n      0x00\n        /* \"#utility.yul\":11677:11680   */\n      dup3\n        /* \"#utility.yul\":11670:11674   */\n      0x1f\n        /* \"#utility.yul\":11662:11668   */\n      dup4\n        /* \"#utility.yul\":11658:11675   */\n      add\n        /* \"#utility.yul\":11654:11681   */\n      slt\n        /* \"#utility.yul\":11644:11766   */\n      tag_787\n      jumpi\n        /* \"#utility.yul\":11685:11764   */\n      tag_788\n      tag_603\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":11644:11766   */\n    tag_787:\n        /* \"#utility.yul\":11802:11808   */\n      dup2\n        /* \"#utility.yul\":11789:11809   */\n      calldataload\n        /* \"#utility.yul\":11827:11906   */\n      tag_789\n        /* \"#utility.yul\":11902:11905   */\n      dup5\n        /* \"#utility.yul\":11894:11900   */\n      dup3\n        /* \"#utility.yul\":11887:11891   */\n      0x20\n        /* \"#utility.yul\":11879:11885   */\n      dup7\n        /* \"#utility.yul\":11875:11892   */\n      add\n        /* \"#utility.yul\":11827:11906   */\n      tag_613\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":11818:11906   */\n      swap2\n      pop\n        /* \"#utility.yul\":11634:11912   */\n      pop\n        /* \"#utility.yul\":11572:11912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11918:13189   */\n    tag_156:\n        /* \"#utility.yul\":12033:12039   */\n      0x00\n        /* \"#utility.yul\":12041:12047   */\n      dup1\n        /* \"#utility.yul\":12049:12055   */\n      0x00\n        /* \"#utility.yul\":12057:12063   */\n      dup1\n        /* \"#utility.yul\":12065:12071   */\n      0x00\n        /* \"#utility.yul\":12114:12117   */\n      0xa0\n        /* \"#utility.yul\":12102:12111   */\n      dup7\n        /* \"#utility.yul\":12093:12100   */\n      dup9\n        /* \"#utility.yul\":12089:12112   */\n      sub\n        /* \"#utility.yul\":12085:12118   */\n      slt\n        /* \"#utility.yul\":12082:12202   */\n      iszero\n      tag_791\n      jumpi\n        /* \"#utility.yul\":12121:12200   */\n      tag_792\n      tag_576\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":12082:12202   */\n    tag_791:\n        /* \"#utility.yul\":12269:12270   */\n      0x00\n        /* \"#utility.yul\":12258:12267   */\n      dup7\n        /* \"#utility.yul\":12254:12271   */\n      add\n        /* \"#utility.yul\":12241:12272   */\n      calldataload\n        /* \"#utility.yul\":12299:12317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12291:12297   */\n      dup2\n        /* \"#utility.yul\":12288:12318   */\n      gt\n        /* \"#utility.yul\":12285:12402   */\n      iszero\n      tag_793\n      jumpi\n        /* \"#utility.yul\":12321:12400   */\n      tag_794\n      tag_577\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":12285:12402   */\n    tag_793:\n        /* \"#utility.yul\":12426:12489   */\n      tag_795\n        /* \"#utility.yul\":12481:12488   */\n      dup9\n        /* \"#utility.yul\":12472:12478   */\n      dup3\n        /* \"#utility.yul\":12461:12470   */\n      dup10\n        /* \"#utility.yul\":12457:12479   */\n      add\n        /* \"#utility.yul\":12426:12489   */\n      tag_614\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":12416:12489   */\n      swap6\n      pop\n        /* \"#utility.yul\":12212:12499   */\n      pop\n        /* \"#utility.yul\":12566:12568   */\n      0x20\n        /* \"#utility.yul\":12555:12564   */\n      dup7\n        /* \"#utility.yul\":12551:12569   */\n      add\n        /* \"#utility.yul\":12538:12570   */\n      calldataload\n        /* \"#utility.yul\":12597:12615   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12589:12595   */\n      dup2\n        /* \"#utility.yul\":12586:12616   */\n      gt\n        /* \"#utility.yul\":12583:12700   */\n      iszero\n      tag_796\n      jumpi\n        /* \"#utility.yul\":12619:12698   */\n      tag_797\n      tag_577\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":12583:12700   */\n    tag_796:\n        /* \"#utility.yul\":12724:12787   */\n      tag_798\n        /* \"#utility.yul\":12779:12786   */\n      dup9\n        /* \"#utility.yul\":12770:12776   */\n      dup3\n        /* \"#utility.yul\":12759:12768   */\n      dup10\n        /* \"#utility.yul\":12755:12777   */\n      add\n        /* \"#utility.yul\":12724:12787   */\n      tag_614\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":12714:12787   */\n      swap5\n      pop\n        /* \"#utility.yul\":12509:12797   */\n      pop\n        /* \"#utility.yul\":12836:12838   */\n      0x40\n        /* \"#utility.yul\":12862:12915   */\n      tag_799\n        /* \"#utility.yul\":12907:12914   */\n      dup9\n        /* \"#utility.yul\":12898:12904   */\n      dup3\n        /* \"#utility.yul\":12887:12896   */\n      dup10\n        /* \"#utility.yul\":12883:12905   */\n      add\n        /* \"#utility.yul\":12862:12915   */\n      tag_594\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":12852:12915   */\n      swap4\n      pop\n        /* \"#utility.yul\":12807:12925   */\n      pop\n        /* \"#utility.yul\":12964:12966   */\n      0x60\n        /* \"#utility.yul\":12990:13043   */\n      tag_800\n        /* \"#utility.yul\":13035:13042   */\n      dup9\n        /* \"#utility.yul\":13026:13032   */\n      dup3\n        /* \"#utility.yul\":13015:13024   */\n      dup10\n        /* \"#utility.yul\":13011:13033   */\n      add\n        /* \"#utility.yul\":12990:13043   */\n      tag_591\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":12980:13043   */\n      swap3\n      pop\n        /* \"#utility.yul\":12935:13053   */\n      pop\n        /* \"#utility.yul\":13092:13095   */\n      0x80\n        /* \"#utility.yul\":13119:13172   */\n      tag_801\n        /* \"#utility.yul\":13164:13171   */\n      dup9\n        /* \"#utility.yul\":13155:13161   */\n      dup3\n        /* \"#utility.yul\":13144:13153   */\n      dup10\n        /* \"#utility.yul\":13140:13162   */\n      add\n        /* \"#utility.yul\":13119:13172   */\n      tag_591\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":13109:13172   */\n      swap2\n      pop\n        /* \"#utility.yul\":13063:13182   */\n      pop\n        /* \"#utility.yul\":11918:13189   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13195:13669   */\n    tag_214:\n        /* \"#utility.yul\":13263:13269   */\n      0x00\n        /* \"#utility.yul\":13271:13277   */\n      dup1\n        /* \"#utility.yul\":13320:13322   */\n      0x40\n        /* \"#utility.yul\":13308:13317   */\n      dup4\n        /* \"#utility.yul\":13299:13306   */\n      dup6\n        /* \"#utility.yul\":13295:13318   */\n      sub\n        /* \"#utility.yul\":13291:13323   */\n      slt\n        /* \"#utility.yul\":13288:13407   */\n      iszero\n      tag_803\n      jumpi\n        /* \"#utility.yul\":13326:13405   */\n      tag_804\n      tag_576\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":13288:13407   */\n    tag_803:\n        /* \"#utility.yul\":13446:13447   */\n      0x00\n        /* \"#utility.yul\":13471:13524   */\n      tag_805\n        /* \"#utility.yul\":13516:13523   */\n      dup6\n        /* \"#utility.yul\":13507:13513   */\n      dup3\n        /* \"#utility.yul\":13496:13505   */\n      dup7\n        /* \"#utility.yul\":13492:13514   */\n      add\n        /* \"#utility.yul\":13471:13524   */\n      tag_591\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":13461:13524   */\n      swap3\n      pop\n        /* \"#utility.yul\":13417:13534   */\n      pop\n        /* \"#utility.yul\":13573:13575   */\n      0x20\n        /* \"#utility.yul\":13599:13652   */\n      tag_806\n        /* \"#utility.yul\":13644:13651   */\n      dup6\n        /* \"#utility.yul\":13635:13641   */\n      dup3\n        /* \"#utility.yul\":13624:13633   */\n      dup7\n        /* \"#utility.yul\":13620:13642   */\n      add\n        /* \"#utility.yul\":13599:13652   */\n      tag_591\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":13589:13652   */\n      swap2\n      pop\n        /* \"#utility.yul\":13544:13662   */\n      pop\n        /* \"#utility.yul\":13195:13669   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13675:13855   */\n    tag_615:\n        /* \"#utility.yul\":13723:13800   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13720:13721   */\n      0x00\n        /* \"#utility.yul\":13713:13801   */\n      mstore\n        /* \"#utility.yul\":13820:13824   */\n      0x22\n        /* \"#utility.yul\":13817:13818   */\n      0x04\n        /* \"#utility.yul\":13810:13825   */\n      mstore\n        /* \"#utility.yul\":13844:13848   */\n      0x24\n        /* \"#utility.yul\":13841:13842   */\n      0x00\n        /* \"#utility.yul\":13834:13849   */\n      revert\n        /* \"#utility.yul\":13861:14181   */\n    tag_237:\n        /* \"#utility.yul\":13905:13911   */\n      0x00\n        /* \"#utility.yul\":13942:13943   */\n      0x02\n        /* \"#utility.yul\":13936:13940   */\n      dup3\n        /* \"#utility.yul\":13932:13944   */\n      div\n        /* \"#utility.yul\":13922:13944   */\n      swap1\n      pop\n        /* \"#utility.yul\":13989:13990   */\n      0x01\n        /* \"#utility.yul\":13983:13987   */\n      dup3\n        /* \"#utility.yul\":13979:13991   */\n      and\n        /* \"#utility.yul\":14010:14028   */\n      dup1\n        /* \"#utility.yul\":14000:14081   */\n      tag_809\n      jumpi\n        /* \"#utility.yul\":14066:14070   */\n      0x7f\n        /* \"#utility.yul\":14058:14064   */\n      dup3\n        /* \"#utility.yul\":14054:14071   */\n      and\n        /* \"#utility.yul\":14044:14071   */\n      swap2\n      pop\n        /* \"#utility.yul\":14000:14081   */\n    tag_809:\n        /* \"#utility.yul\":14128:14130   */\n      0x20\n        /* \"#utility.yul\":14120:14126   */\n      dup3\n        /* \"#utility.yul\":14117:14131   */\n      lt\n        /* \"#utility.yul\":14097:14115   */\n      dup2\n        /* \"#utility.yul\":14094:14132   */\n      sub\n        /* \"#utility.yul\":14091:14175   */\n      tag_810\n      jumpi\n        /* \"#utility.yul\":14147:14165   */\n      tag_811\n      tag_615\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":14091:14175   */\n    tag_810:\n        /* \"#utility.yul\":13912:14181   */\n      pop\n        /* \"#utility.yul\":13861:14181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14187:14367   */\n    tag_616:\n        /* \"#utility.yul\":14235:14312   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14232:14233   */\n      0x00\n        /* \"#utility.yul\":14225:14313   */\n      mstore\n        /* \"#utility.yul\":14332:14336   */\n      0x11\n        /* \"#utility.yul\":14329:14330   */\n      0x04\n        /* \"#utility.yul\":14322:14337   */\n      mstore\n        /* \"#utility.yul\":14356:14360   */\n      0x24\n        /* \"#utility.yul\":14353:14354   */\n      0x00\n        /* \"#utility.yul\":14346:14361   */\n      revert\n        /* \"#utility.yul\":14373:14567   */\n    tag_265:\n        /* \"#utility.yul\":14413:14417   */\n      0x00\n        /* \"#utility.yul\":14433:14453   */\n      tag_814\n        /* \"#utility.yul\":14451:14452   */\n      dup3\n        /* \"#utility.yul\":14433:14453   */\n      tag_592\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":14428:14453   */\n      swap2\n      pop\n        /* \"#utility.yul\":14467:14487   */\n      tag_815\n        /* \"#utility.yul\":14485:14486   */\n      dup4\n        /* \"#utility.yul\":14467:14487   */\n      tag_592\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":14462:14487   */\n      swap3\n      pop\n        /* \"#utility.yul\":14511:14512   */\n      dup3\n        /* \"#utility.yul\":14508:14509   */\n      dup3\n        /* \"#utility.yul\":14504:14513   */\n      sub\n        /* \"#utility.yul\":14496:14513   */\n      swap1\n      pop\n        /* \"#utility.yul\":14535:14536   */\n      dup2\n        /* \"#utility.yul\":14529:14533   */\n      dup2\n        /* \"#utility.yul\":14526:14537   */\n      gt\n        /* \"#utility.yul\":14523:14560   */\n      iszero\n      tag_816\n      jumpi\n        /* \"#utility.yul\":14540:14558   */\n      tag_817\n      tag_616\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":14523:14560   */\n    tag_816:\n        /* \"#utility.yul\":14373:14567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14573:14742   */\n    tag_617:\n        /* \"#utility.yul\":14713:14734   */\n      0x4e6f206665657320746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":14709:14710   */\n      0x00\n        /* \"#utility.yul\":14701:14707   */\n      dup3\n        /* \"#utility.yul\":14697:14711   */\n      add\n        /* \"#utility.yul\":14690:14735   */\n      mstore\n        /* \"#utility.yul\":14573:14742   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14748:15114   */\n    tag_618:\n        /* \"#utility.yul\":14890:14893   */\n      0x00\n        /* \"#utility.yul\":14911:14978   */\n      tag_820\n        /* \"#utility.yul\":14975:14977   */\n      0x13\n        /* \"#utility.yul\":14970:14973   */\n      dup4\n        /* \"#utility.yul\":14911:14978   */\n      tag_584\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":14904:14978   */\n      swap2\n      pop\n        /* \"#utility.yul\":14987:15080   */\n      tag_821\n        /* \"#utility.yul\":15076:15079   */\n      dup3\n        /* \"#utility.yul\":14987:15080   */\n      tag_617\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":15105:15107   */\n      0x20\n        /* \"#utility.yul\":15100:15103   */\n      dup3\n        /* \"#utility.yul\":15096:15108   */\n      add\n        /* \"#utility.yul\":15089:15108   */\n      swap1\n      pop\n        /* \"#utility.yul\":14748:15114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15120:15539   */\n    tag_293:\n        /* \"#utility.yul\":15286:15290   */\n      0x00\n        /* \"#utility.yul\":15324:15326   */\n      0x20\n        /* \"#utility.yul\":15313:15322   */\n      dup3\n        /* \"#utility.yul\":15309:15327   */\n      add\n        /* \"#utility.yul\":15301:15327   */\n      swap1\n      pop\n        /* \"#utility.yul\":15373:15382   */\n      dup2\n        /* \"#utility.yul\":15367:15371   */\n      dup2\n        /* \"#utility.yul\":15363:15383   */\n      sub\n        /* \"#utility.yul\":15359:15360   */\n      0x00\n        /* \"#utility.yul\":15348:15357   */\n      dup4\n        /* \"#utility.yul\":15344:15361   */\n      add\n        /* \"#utility.yul\":15337:15384   */\n      mstore\n        /* \"#utility.yul\":15401:15532   */\n      tag_823\n        /* \"#utility.yul\":15527:15531   */\n      dup2\n        /* \"#utility.yul\":15401:15532   */\n      tag_618\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":15393:15532   */\n      swap1\n      pop\n        /* \"#utility.yul\":15120:15539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15545:15630   */\n    tag_619:\n        /* \"#utility.yul\":15590:15597   */\n      0x00\n        /* \"#utility.yul\":15619:15624   */\n      dup2\n        /* \"#utility.yul\":15608:15624   */\n      swap1\n      pop\n        /* \"#utility.yul\":15545:15630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15636:15737   */\n    tag_620:\n        /* \"#utility.yul\":15672:15679   */\n      0x00\n        /* \"#utility.yul\":15712:15730   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15705:15710   */\n      dup3\n        /* \"#utility.yul\":15701:15731   */\n      and\n        /* \"#utility.yul\":15690:15731   */\n      swap1\n      pop\n        /* \"#utility.yul\":15636:15737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15743:15803   */\n    tag_621:\n        /* \"#utility.yul\":15771:15774   */\n      0x00\n        /* \"#utility.yul\":15792:15797   */\n      dup2\n        /* \"#utility.yul\":15785:15797   */\n      swap1\n      pop\n        /* \"#utility.yul\":15743:15803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15809:15965   */\n    tag_622:\n        /* \"#utility.yul\":15866:15875   */\n      0x00\n        /* \"#utility.yul\":15899:15959   */\n      tag_828\n        /* \"#utility.yul\":15916:15958   */\n      tag_829\n        /* \"#utility.yul\":15925:15957   */\n      tag_830\n        /* \"#utility.yul\":15951:15956   */\n      dup5\n        /* \"#utility.yul\":15925:15957   */\n      tag_619\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":15916:15958   */\n      tag_621\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":15899:15959   */\n      tag_620\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":15886:15959   */\n      swap1\n      pop\n        /* \"#utility.yul\":15809:15965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15971:16116   */\n    tag_623:\n        /* \"#utility.yul\":16065:16109   */\n      tag_832\n        /* \"#utility.yul\":16103:16108   */\n      dup2\n        /* \"#utility.yul\":16065:16109   */\n      tag_622\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":16060:16063   */\n      dup3\n        /* \"#utility.yul\":16053:16110   */\n      mstore\n        /* \"#utility.yul\":15971:16116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16122:16358   */\n    tag_339:\n        /* \"#utility.yul\":16222:16226   */\n      0x00\n        /* \"#utility.yul\":16260:16262   */\n      0x20\n        /* \"#utility.yul\":16249:16258   */\n      dup3\n        /* \"#utility.yul\":16245:16263   */\n      add\n        /* \"#utility.yul\":16237:16263   */\n      swap1\n      pop\n        /* \"#utility.yul\":16273:16351   */\n      tag_834\n        /* \"#utility.yul\":16348:16349   */\n      0x00\n        /* \"#utility.yul\":16337:16346   */\n      dup4\n        /* \"#utility.yul\":16333:16350   */\n      add\n        /* \"#utility.yul\":16324:16330   */\n      dup5\n        /* \"#utility.yul\":16273:16351   */\n      tag_623\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":16122:16358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16364:16530   */\n    tag_624:\n        /* \"#utility.yul\":16504:16522   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":16500:16501   */\n      0x00\n        /* \"#utility.yul\":16492:16498   */\n      dup3\n        /* \"#utility.yul\":16488:16502   */\n      add\n        /* \"#utility.yul\":16481:16523   */\n      mstore\n        /* \"#utility.yul\":16364:16530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16536:16902   */\n    tag_625:\n        /* \"#utility.yul\":16678:16681   */\n      0x00\n        /* \"#utility.yul\":16699:16766   */\n      tag_837\n        /* \"#utility.yul\":16763:16765   */\n      0x10\n        /* \"#utility.yul\":16758:16761   */\n      dup4\n        /* \"#utility.yul\":16699:16766   */\n      tag_584\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":16692:16766   */\n      swap2\n      pop\n        /* \"#utility.yul\":16775:16868   */\n      tag_838\n        /* \"#utility.yul\":16864:16867   */\n      dup3\n        /* \"#utility.yul\":16775:16868   */\n      tag_624\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":16893:16895   */\n      0x20\n        /* \"#utility.yul\":16888:16891   */\n      dup3\n        /* \"#utility.yul\":16884:16896   */\n      add\n        /* \"#utility.yul\":16877:16896   */\n      swap1\n      pop\n        /* \"#utility.yul\":16536:16902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16908:17327   */\n    tag_390:\n        /* \"#utility.yul\":17074:17078   */\n      0x00\n        /* \"#utility.yul\":17112:17114   */\n      0x20\n        /* \"#utility.yul\":17101:17110   */\n      dup3\n        /* \"#utility.yul\":17097:17115   */\n      add\n        /* \"#utility.yul\":17089:17115   */\n      swap1\n      pop\n        /* \"#utility.yul\":17161:17170   */\n      dup2\n        /* \"#utility.yul\":17155:17159   */\n      dup2\n        /* \"#utility.yul\":17151:17171   */\n      sub\n        /* \"#utility.yul\":17147:17148   */\n      0x00\n        /* \"#utility.yul\":17136:17145   */\n      dup4\n        /* \"#utility.yul\":17132:17149   */\n      add\n        /* \"#utility.yul\":17125:17172   */\n      mstore\n        /* \"#utility.yul\":17189:17320   */\n      tag_840\n        /* \"#utility.yul\":17315:17319   */\n      dup2\n        /* \"#utility.yul\":17189:17320   */\n      tag_625\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":17181:17320   */\n      swap1\n      pop\n        /* \"#utility.yul\":16908:17327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17333:17512   */\n    tag_626:\n        /* \"#utility.yul\":17473:17504   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":17469:17470   */\n      0x00\n        /* \"#utility.yul\":17461:17467   */\n      dup3\n        /* \"#utility.yul\":17457:17471   */\n      add\n        /* \"#utility.yul\":17450:17505   */\n      mstore\n        /* \"#utility.yul\":17333:17512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17518:17884   */\n    tag_627:\n        /* \"#utility.yul\":17660:17663   */\n      0x00\n        /* \"#utility.yul\":17681:17748   */\n      tag_843\n        /* \"#utility.yul\":17745:17747   */\n      0x1d\n        /* \"#utility.yul\":17740:17743   */\n      dup4\n        /* \"#utility.yul\":17681:17748   */\n      tag_584\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":17674:17748   */\n      swap2\n      pop\n        /* \"#utility.yul\":17757:17850   */\n      tag_844\n        /* \"#utility.yul\":17846:17849   */\n      dup3\n        /* \"#utility.yul\":17757:17850   */\n      tag_626\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":17875:17877   */\n      0x20\n        /* \"#utility.yul\":17870:17873   */\n      dup3\n        /* \"#utility.yul\":17866:17878   */\n      add\n        /* \"#utility.yul\":17859:17878   */\n      swap1\n      pop\n        /* \"#utility.yul\":17518:17884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17890:18309   */\n    tag_394:\n        /* \"#utility.yul\":18056:18060   */\n      0x00\n        /* \"#utility.yul\":18094:18096   */\n      0x20\n        /* \"#utility.yul\":18083:18092   */\n      dup3\n        /* \"#utility.yul\":18079:18097   */\n      add\n        /* \"#utility.yul\":18071:18097   */\n      swap1\n      pop\n        /* \"#utility.yul\":18143:18152   */\n      dup2\n        /* \"#utility.yul\":18137:18141   */\n      dup2\n        /* \"#utility.yul\":18133:18153   */\n      sub\n        /* \"#utility.yul\":18129:18130   */\n      0x00\n        /* \"#utility.yul\":18118:18127   */\n      dup4\n        /* \"#utility.yul\":18114:18131   */\n      add\n        /* \"#utility.yul\":18107:18154   */\n      mstore\n        /* \"#utility.yul\":18171:18302   */\n      tag_846\n        /* \"#utility.yul\":18297:18301   */\n      dup2\n        /* \"#utility.yul\":18171:18302   */\n      tag_627\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":18163:18302   */\n      swap1\n      pop\n        /* \"#utility.yul\":17890:18309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18315:18725   */\n    tag_396:\n        /* \"#utility.yul\":18355:18362   */\n      0x00\n        /* \"#utility.yul\":18378:18398   */\n      tag_848\n        /* \"#utility.yul\":18396:18397   */\n      dup3\n        /* \"#utility.yul\":18378:18398   */\n      tag_592\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":18373:18398   */\n      swap2\n      pop\n        /* \"#utility.yul\":18412:18432   */\n      tag_849\n        /* \"#utility.yul\":18430:18431   */\n      dup4\n        /* \"#utility.yul\":18412:18432   */\n      tag_592\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":18407:18432   */\n      swap3\n      pop\n        /* \"#utility.yul\":18467:18468   */\n      dup3\n        /* \"#utility.yul\":18464:18465   */\n      dup3\n        /* \"#utility.yul\":18460:18469   */\n      mul\n        /* \"#utility.yul\":18489:18519   */\n      tag_850\n        /* \"#utility.yul\":18507:18518   */\n      dup2\n        /* \"#utility.yul\":18489:18519   */\n      tag_592\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":18478:18519   */\n      swap2\n      pop\n        /* \"#utility.yul\":18668:18669   */\n      dup3\n        /* \"#utility.yul\":18659:18666   */\n      dup3\n        /* \"#utility.yul\":18655:18670   */\n      div\n        /* \"#utility.yul\":18652:18653   */\n      dup5\n        /* \"#utility.yul\":18649:18671   */\n      eq\n        /* \"#utility.yul\":18629:18630   */\n      dup4\n        /* \"#utility.yul\":18622:18631   */\n      iszero\n        /* \"#utility.yul\":18602:18685   */\n      or\n        /* \"#utility.yul\":18579:18718   */\n      tag_851\n      jumpi\n        /* \"#utility.yul\":18698:18716   */\n      tag_852\n      tag_616\n      jump\t// in\n    tag_852:\n        /* \"#utility.yul\":18579:18718   */\n    tag_851:\n        /* \"#utility.yul\":18363:18725   */\n      pop\n        /* \"#utility.yul\":18315:18725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18731:18911   */\n    tag_628:\n        /* \"#utility.yul\":18779:18856   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18776:18777   */\n      0x00\n        /* \"#utility.yul\":18769:18857   */\n      mstore\n        /* \"#utility.yul\":18876:18880   */\n      0x12\n        /* \"#utility.yul\":18873:18874   */\n      0x04\n        /* \"#utility.yul\":18866:18881   */\n      mstore\n        /* \"#utility.yul\":18900:18904   */\n      0x24\n        /* \"#utility.yul\":18897:18898   */\n      0x00\n        /* \"#utility.yul\":18890:18905   */\n      revert\n        /* \"#utility.yul\":18917:19102   */\n    tag_398:\n        /* \"#utility.yul\":18957:18958   */\n      0x00\n        /* \"#utility.yul\":18974:18994   */\n      tag_855\n        /* \"#utility.yul\":18992:18993   */\n      dup3\n        /* \"#utility.yul\":18974:18994   */\n      tag_592\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":18969:18994   */\n      swap2\n      pop\n        /* \"#utility.yul\":19008:19028   */\n      tag_856\n        /* \"#utility.yul\":19026:19027   */\n      dup4\n        /* \"#utility.yul\":19008:19028   */\n      tag_592\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":19003:19028   */\n      swap3\n      pop\n        /* \"#utility.yul\":19047:19048   */\n      dup3\n        /* \"#utility.yul\":19037:19072   */\n      tag_857\n      jumpi\n        /* \"#utility.yul\":19052:19070   */\n      tag_858\n      tag_628\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":19037:19072   */\n    tag_857:\n        /* \"#utility.yul\":19094:19095   */\n      dup3\n        /* \"#utility.yul\":19091:19092   */\n      dup3\n        /* \"#utility.yul\":19087:19096   */\n      div\n        /* \"#utility.yul\":19082:19096   */\n      swap1\n      pop\n        /* \"#utility.yul\":18917:19102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19108:19299   */\n    tag_406:\n        /* \"#utility.yul\":19148:19151   */\n      0x00\n        /* \"#utility.yul\":19167:19187   */\n      tag_860\n        /* \"#utility.yul\":19185:19186   */\n      dup3\n        /* \"#utility.yul\":19167:19187   */\n      tag_592\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":19162:19187   */\n      swap2\n      pop\n        /* \"#utility.yul\":19201:19221   */\n      tag_861\n        /* \"#utility.yul\":19219:19220   */\n      dup4\n        /* \"#utility.yul\":19201:19221   */\n      tag_592\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":19196:19221   */\n      swap3\n      pop\n        /* \"#utility.yul\":19244:19245   */\n      dup3\n        /* \"#utility.yul\":19241:19242   */\n      dup3\n        /* \"#utility.yul\":19237:19246   */\n      add\n        /* \"#utility.yul\":19230:19246   */\n      swap1\n      pop\n        /* \"#utility.yul\":19265:19268   */\n      dup1\n        /* \"#utility.yul\":19262:19263   */\n      dup3\n        /* \"#utility.yul\":19259:19269   */\n      gt\n        /* \"#utility.yul\":19256:19292   */\n      iszero\n      tag_862\n      jumpi\n        /* \"#utility.yul\":19272:19290   */\n      tag_863\n      tag_616\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":19256:19292   */\n    tag_862:\n        /* \"#utility.yul\":19108:19299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19305:19448   */\n    tag_629:\n        /* \"#utility.yul\":19362:19367   */\n      0x00\n        /* \"#utility.yul\":19393:19399   */\n      dup2\n        /* \"#utility.yul\":19387:19400   */\n      mload\n        /* \"#utility.yul\":19378:19400   */\n      swap1\n      pop\n        /* \"#utility.yul\":19409:19442   */\n      tag_865\n        /* \"#utility.yul\":19436:19441   */\n      dup2\n        /* \"#utility.yul\":19409:19442   */\n      tag_597\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":19305:19448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19454:19805   */\n    tag_448:\n        /* \"#utility.yul\":19524:19530   */\n      0x00\n        /* \"#utility.yul\":19573:19575   */\n      0x20\n        /* \"#utility.yul\":19561:19570   */\n      dup3\n        /* \"#utility.yul\":19552:19559   */\n      dup5\n        /* \"#utility.yul\":19548:19571   */\n      sub\n        /* \"#utility.yul\":19544:19576   */\n      slt\n        /* \"#utility.yul\":19541:19660   */\n      iszero\n      tag_867\n      jumpi\n        /* \"#utility.yul\":19579:19658   */\n      tag_868\n      tag_576\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":19541:19660   */\n    tag_867:\n        /* \"#utility.yul\":19699:19700   */\n      0x00\n        /* \"#utility.yul\":19724:19788   */\n      tag_869\n        /* \"#utility.yul\":19780:19787   */\n      dup5\n        /* \"#utility.yul\":19771:19777   */\n      dup3\n        /* \"#utility.yul\":19760:19769   */\n      dup6\n        /* \"#utility.yul\":19756:19778   */\n      add\n        /* \"#utility.yul\":19724:19788   */\n      tag_629\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":19714:19788   */\n      swap2\n      pop\n        /* \"#utility.yul\":19670:19798   */\n      pop\n        /* \"#utility.yul\":19454:19805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19811:20143   */\n    tag_500:\n        /* \"#utility.yul\":19932:19936   */\n      0x00\n        /* \"#utility.yul\":19970:19972   */\n      0x40\n        /* \"#utility.yul\":19959:19968   */\n      dup3\n        /* \"#utility.yul\":19955:19973   */\n      add\n        /* \"#utility.yul\":19947:19973   */\n      swap1\n      pop\n        /* \"#utility.yul\":19983:20054   */\n      tag_871\n        /* \"#utility.yul\":20051:20052   */\n      0x00\n        /* \"#utility.yul\":20040:20049   */\n      dup4\n        /* \"#utility.yul\":20036:20053   */\n      add\n        /* \"#utility.yul\":20027:20033   */\n      dup6\n        /* \"#utility.yul\":19983:20054   */\n      tag_602\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":20064:20136   */\n      tag_872\n        /* \"#utility.yul\":20132:20134   */\n      0x20\n        /* \"#utility.yul\":20121:20130   */\n      dup4\n        /* \"#utility.yul\":20117:20135   */\n      add\n        /* \"#utility.yul\":20108:20114   */\n      dup5\n        /* \"#utility.yul\":20064:20136   */\n      tag_599\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":19811:20143   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20149:20319   */\n    tag_630:\n        /* \"#utility.yul\":20289:20311   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":20285:20286   */\n      0x00\n        /* \"#utility.yul\":20277:20283   */\n      dup3\n        /* \"#utility.yul\":20273:20287   */\n      add\n        /* \"#utility.yul\":20266:20312   */\n      mstore\n        /* \"#utility.yul\":20149:20319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20325:20691   */\n    tag_631:\n        /* \"#utility.yul\":20467:20470   */\n      0x00\n        /* \"#utility.yul\":20488:20555   */\n      tag_875\n        /* \"#utility.yul\":20552:20554   */\n      0x14\n        /* \"#utility.yul\":20547:20550   */\n      dup4\n        /* \"#utility.yul\":20488:20555   */\n      tag_584\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":20481:20555   */\n      swap2\n      pop\n        /* \"#utility.yul\":20564:20657   */\n      tag_876\n        /* \"#utility.yul\":20653:20656   */\n      dup3\n        /* \"#utility.yul\":20564:20657   */\n      tag_630\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":20682:20684   */\n      0x20\n        /* \"#utility.yul\":20677:20680   */\n      dup3\n        /* \"#utility.yul\":20673:20685   */\n      add\n        /* \"#utility.yul\":20666:20685   */\n      swap1\n      pop\n        /* \"#utility.yul\":20325:20691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20697:21116   */\n    tag_509:\n        /* \"#utility.yul\":20863:20867   */\n      0x00\n        /* \"#utility.yul\":20901:20903   */\n      0x20\n        /* \"#utility.yul\":20890:20899   */\n      dup3\n        /* \"#utility.yul\":20886:20904   */\n      add\n        /* \"#utility.yul\":20878:20904   */\n      swap1\n      pop\n        /* \"#utility.yul\":20950:20959   */\n      dup2\n        /* \"#utility.yul\":20944:20948   */\n      dup2\n        /* \"#utility.yul\":20940:20960   */\n      sub\n        /* \"#utility.yul\":20936:20937   */\n      0x00\n        /* \"#utility.yul\":20925:20934   */\n      dup4\n        /* \"#utility.yul\":20921:20938   */\n      add\n        /* \"#utility.yul\":20914:20961   */\n      mstore\n        /* \"#utility.yul\":20978:21109   */\n      tag_878\n        /* \"#utility.yul\":21104:21108   */\n      dup2\n        /* \"#utility.yul\":20978:21109   */\n      tag_631\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":20970:21109   */\n      swap1\n      pop\n        /* \"#utility.yul\":20697:21116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21122:21564   */\n    tag_517:\n        /* \"#utility.yul\":21271:21275   */\n      0x00\n        /* \"#utility.yul\":21309:21311   */\n      0x60\n        /* \"#utility.yul\":21298:21307   */\n      dup3\n        /* \"#utility.yul\":21294:21312   */\n      add\n        /* \"#utility.yul\":21286:21312   */\n      swap1\n      pop\n        /* \"#utility.yul\":21322:21393   */\n      tag_880\n        /* \"#utility.yul\":21390:21391   */\n      0x00\n        /* \"#utility.yul\":21379:21388   */\n      dup4\n        /* \"#utility.yul\":21375:21392   */\n      add\n        /* \"#utility.yul\":21366:21372   */\n      dup7\n        /* \"#utility.yul\":21322:21393   */\n      tag_602\n      jump\t// in\n    tag_880:\n        /* \"#utility.yul\":21403:21475   */\n      tag_881\n        /* \"#utility.yul\":21471:21473   */\n      0x20\n        /* \"#utility.yul\":21460:21469   */\n      dup4\n        /* \"#utility.yul\":21456:21474   */\n      add\n        /* \"#utility.yul\":21447:21453   */\n      dup6\n        /* \"#utility.yul\":21403:21475   */\n      tag_595\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":21485:21557   */\n      tag_882\n        /* \"#utility.yul\":21553:21555   */\n      0x40\n        /* \"#utility.yul\":21542:21551   */\n      dup4\n        /* \"#utility.yul\":21538:21556   */\n      add\n        /* \"#utility.yul\":21529:21535   */\n      dup5\n        /* \"#utility.yul\":21485:21557   */\n      tag_595\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":21122:21564   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21570:21711   */\n    tag_632:\n        /* \"#utility.yul\":21619:21623   */\n      0x00\n        /* \"#utility.yul\":21642:21645   */\n      dup2\n        /* \"#utility.yul\":21634:21645   */\n      swap1\n      pop\n        /* \"#utility.yul\":21665:21668   */\n      dup2\n        /* \"#utility.yul\":21662:21663   */\n      0x00\n        /* \"#utility.yul\":21655:21669   */\n      mstore\n        /* \"#utility.yul\":21699:21703   */\n      0x20\n        /* \"#utility.yul\":21696:21697   */\n      0x00\n        /* \"#utility.yul\":21686:21704   */\n      keccak256\n        /* \"#utility.yul\":21678:21704   */\n      swap1\n      pop\n        /* \"#utility.yul\":21570:21711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21717:21810   */\n    tag_633:\n        /* \"#utility.yul\":21754:21760   */\n      0x00\n        /* \"#utility.yul\":21801:21803   */\n      0x20\n        /* \"#utility.yul\":21796:21798   */\n      0x1f\n        /* \"#utility.yul\":21789:21794   */\n      dup4\n        /* \"#utility.yul\":21785:21799   */\n      add\n        /* \"#utility.yul\":21781:21804   */\n      div\n        /* \"#utility.yul\":21771:21804   */\n      swap1\n      pop\n        /* \"#utility.yul\":21717:21810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21816:21923   */\n    tag_634:\n        /* \"#utility.yul\":21860:21868   */\n      0x00\n        /* \"#utility.yul\":21910:21915   */\n      dup3\n        /* \"#utility.yul\":21904:21908   */\n      dup3\n        /* \"#utility.yul\":21900:21916   */\n      shl\n        /* \"#utility.yul\":21879:21916   */\n      swap1\n      pop\n        /* \"#utility.yul\":21816:21923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21929:22322   */\n    tag_635:\n        /* \"#utility.yul\":21998:22004   */\n      0x00\n        /* \"#utility.yul\":22048:22049   */\n      0x08\n        /* \"#utility.yul\":22036:22046   */\n      dup4\n        /* \"#utility.yul\":22032:22050   */\n      mul\n        /* \"#utility.yul\":22071:22168   */\n      tag_887\n        /* \"#utility.yul\":22101:22167   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22090:22099   */\n      dup3\n        /* \"#utility.yul\":22071:22168   */\n      tag_634\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":22189:22228   */\n      tag_888\n        /* \"#utility.yul\":22219:22227   */\n      dup7\n        /* \"#utility.yul\":22208:22217   */\n      dup4\n        /* \"#utility.yul\":22189:22228   */\n      tag_634\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":22177:22228   */\n      swap6\n      pop\n        /* \"#utility.yul\":22261:22265   */\n      dup1\n        /* \"#utility.yul\":22257:22266   */\n      not\n        /* \"#utility.yul\":22250:22255   */\n      dup5\n        /* \"#utility.yul\":22246:22267   */\n      and\n        /* \"#utility.yul\":22237:22267   */\n      swap4\n      pop\n        /* \"#utility.yul\":22310:22314   */\n      dup1\n        /* \"#utility.yul\":22300:22308   */\n      dup7\n        /* \"#utility.yul\":22296:22315   */\n      and\n        /* \"#utility.yul\":22289:22294   */\n      dup5\n        /* \"#utility.yul\":22286:22316   */\n      or\n        /* \"#utility.yul\":22276:22316   */\n      swap3\n      pop\n        /* \"#utility.yul\":22005:22322   */\n      pop\n      pop\n        /* \"#utility.yul\":21929:22322   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22328:22470   */\n    tag_636:\n        /* \"#utility.yul\":22378:22387   */\n      0x00\n        /* \"#utility.yul\":22411:22464   */\n      tag_890\n        /* \"#utility.yul\":22429:22463   */\n      tag_891\n        /* \"#utility.yul\":22438:22462   */\n      tag_892\n        /* \"#utility.yul\":22456:22461   */\n      dup5\n        /* \"#utility.yul\":22438:22462   */\n      tag_592\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":22429:22463   */\n      tag_621\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":22411:22464   */\n      tag_592\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":22398:22464   */\n      swap1\n      pop\n        /* \"#utility.yul\":22328:22470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22476:22551   */\n    tag_637:\n        /* \"#utility.yul\":22519:22522   */\n      0x00\n        /* \"#utility.yul\":22540:22545   */\n      dup2\n        /* \"#utility.yul\":22533:22545   */\n      swap1\n      pop\n        /* \"#utility.yul\":22476:22551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22557:22826   */\n    tag_638:\n        /* \"#utility.yul\":22667:22706   */\n      tag_895\n        /* \"#utility.yul\":22698:22705   */\n      dup4\n        /* \"#utility.yul\":22667:22706   */\n      tag_636\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":22728:22819   */\n      tag_896\n        /* \"#utility.yul\":22777:22818   */\n      tag_897\n        /* \"#utility.yul\":22801:22817   */\n      dup3\n        /* \"#utility.yul\":22777:22818   */\n      tag_637\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":22769:22775   */\n      dup5\n        /* \"#utility.yul\":22762:22766   */\n      dup5\n        /* \"#utility.yul\":22756:22767   */\n      sload\n        /* \"#utility.yul\":22728:22819   */\n      tag_635\n      jump\t// in\n    tag_896:\n        /* \"#utility.yul\":22722:22726   */\n      dup3\n        /* \"#utility.yul\":22715:22820   */\n      sstore\n        /* \"#utility.yul\":22633:22826   */\n      pop\n        /* \"#utility.yul\":22557:22826   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22832:22905   */\n    tag_639:\n        /* \"#utility.yul\":22877:22880   */\n      0x00\n        /* \"#utility.yul\":22832:22905   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22911:23100   */\n    tag_640:\n        /* \"#utility.yul\":22988:23020   */\n      tag_900\n      tag_639\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":23029:23094   */\n      tag_901\n        /* \"#utility.yul\":23087:23093   */\n      dup2\n        /* \"#utility.yul\":23079:23085   */\n      dup5\n        /* \"#utility.yul\":23073:23077   */\n      dup5\n        /* \"#utility.yul\":23029:23094   */\n      tag_638\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":22964:23100   */\n      pop\n        /* \"#utility.yul\":22911:23100   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23106:23292   */\n    tag_641:\n        /* \"#utility.yul\":23166:23286   */\n    tag_903:\n        /* \"#utility.yul\":23183:23186   */\n      dup2\n        /* \"#utility.yul\":23176:23181   */\n      dup2\n        /* \"#utility.yul\":23173:23187   */\n      lt\n        /* \"#utility.yul\":23166:23286   */\n      iszero\n      tag_905\n      jumpi\n        /* \"#utility.yul\":23237:23276   */\n      tag_906\n        /* \"#utility.yul\":23274:23275   */\n      0x00\n        /* \"#utility.yul\":23267:23272   */\n      dup3\n        /* \"#utility.yul\":23237:23276   */\n      tag_640\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":23210:23211   */\n      0x01\n        /* \"#utility.yul\":23203:23208   */\n      dup2\n        /* \"#utility.yul\":23199:23212   */\n      add\n        /* \"#utility.yul\":23190:23212   */\n      swap1\n      pop\n        /* \"#utility.yul\":23166:23286   */\n      jump(tag_903)\n    tag_905:\n        /* \"#utility.yul\":23106:23292   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23298:23841   */\n    tag_642:\n        /* \"#utility.yul\":23399:23401   */\n      0x1f\n        /* \"#utility.yul\":23394:23397   */\n      dup3\n        /* \"#utility.yul\":23391:23402   */\n      gt\n        /* \"#utility.yul\":23388:23834   */\n      iszero\n      tag_908\n      jumpi\n        /* \"#utility.yul\":23433:23471   */\n      tag_909\n        /* \"#utility.yul\":23465:23470   */\n      dup2\n        /* \"#utility.yul\":23433:23471   */\n      tag_632\n      jump\t// in\n    tag_909:\n        /* \"#utility.yul\":23517:23546   */\n      tag_910\n        /* \"#utility.yul\":23535:23545   */\n      dup5\n        /* \"#utility.yul\":23517:23546   */\n      tag_633\n      jump\t// in\n    tag_910:\n        /* \"#utility.yul\":23507:23515   */\n      dup2\n        /* \"#utility.yul\":23503:23547   */\n      add\n        /* \"#utility.yul\":23700:23702   */\n      0x20\n        /* \"#utility.yul\":23688:23698   */\n      dup6\n        /* \"#utility.yul\":23685:23703   */\n      lt\n        /* \"#utility.yul\":23682:23731   */\n      iszero\n      tag_911\n      jumpi\n        /* \"#utility.yul\":23721:23729   */\n      dup2\n        /* \"#utility.yul\":23706:23729   */\n      swap1\n      pop\n        /* \"#utility.yul\":23682:23731   */\n    tag_911:\n        /* \"#utility.yul\":23744:23824   */\n      tag_912\n        /* \"#utility.yul\":23800:23822   */\n      tag_913\n        /* \"#utility.yul\":23818:23821   */\n      dup6\n        /* \"#utility.yul\":23800:23822   */\n      tag_633\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":23790:23798   */\n      dup4\n        /* \"#utility.yul\":23786:23823   */\n      add\n        /* \"#utility.yul\":23773:23784   */\n      dup3\n        /* \"#utility.yul\":23744:23824   */\n      tag_641\n      jump\t// in\n    tag_912:\n        /* \"#utility.yul\":23403:23834   */\n      pop\n      pop\n        /* \"#utility.yul\":23388:23834   */\n    tag_908:\n        /* \"#utility.yul\":23298:23841   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23847:23964   */\n    tag_643:\n        /* \"#utility.yul\":23901:23909   */\n      0x00\n        /* \"#utility.yul\":23951:23956   */\n      dup3\n        /* \"#utility.yul\":23945:23949   */\n      dup3\n        /* \"#utility.yul\":23941:23957   */\n      shr\n        /* \"#utility.yul\":23920:23957   */\n      swap1\n      pop\n        /* \"#utility.yul\":23847:23964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23970:24139   */\n    tag_644:\n        /* \"#utility.yul\":24014:24020   */\n      0x00\n        /* \"#utility.yul\":24047:24098   */\n      tag_916\n        /* \"#utility.yul\":24095:24096   */\n      0x00\n        /* \"#utility.yul\":24091:24097   */\n      not\n        /* \"#utility.yul\":24083:24088   */\n      dup5\n        /* \"#utility.yul\":24080:24081   */\n      0x08\n        /* \"#utility.yul\":24076:24089   */\n      mul\n        /* \"#utility.yul\":24047:24098   */\n      tag_643\n      jump\t// in\n    tag_916:\n        /* \"#utility.yul\":24043:24099   */\n      not\n        /* \"#utility.yul\":24128:24132   */\n      dup1\n        /* \"#utility.yul\":24122:24126   */\n      dup4\n        /* \"#utility.yul\":24118:24133   */\n      and\n        /* \"#utility.yul\":24108:24133   */\n      swap2\n      pop\n        /* \"#utility.yul\":24021:24139   */\n      pop\n        /* \"#utility.yul\":23970:24139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24144:24439   */\n    tag_645:\n        /* \"#utility.yul\":24220:24224   */\n      0x00\n        /* \"#utility.yul\":24366:24395   */\n      tag_918\n        /* \"#utility.yul\":24391:24394   */\n      dup4\n        /* \"#utility.yul\":24385:24389   */\n      dup4\n        /* \"#utility.yul\":24366:24395   */\n      tag_644\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":24358:24395   */\n      swap2\n      pop\n        /* \"#utility.yul\":24428:24431   */\n      dup3\n        /* \"#utility.yul\":24425:24426   */\n      0x02\n        /* \"#utility.yul\":24421:24432   */\n      mul\n        /* \"#utility.yul\":24415:24419   */\n      dup3\n        /* \"#utility.yul\":24412:24433   */\n      or\n        /* \"#utility.yul\":24404:24433   */\n      swap1\n      pop\n        /* \"#utility.yul\":24144:24439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24444:25839   */\n    tag_542:\n        /* \"#utility.yul\":24561:24598   */\n      tag_920\n        /* \"#utility.yul\":24594:24597   */\n      dup3\n        /* \"#utility.yul\":24561:24598   */\n      tag_583\n      jump\t// in\n    tag_920:\n        /* \"#utility.yul\":24663:24681   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24655:24661   */\n      dup2\n        /* \"#utility.yul\":24652:24682   */\n      gt\n        /* \"#utility.yul\":24649:24705   */\n      iszero\n      tag_921\n      jumpi\n        /* \"#utility.yul\":24685:24703   */\n      tag_922\n      tag_605\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":24649:24705   */\n    tag_921:\n        /* \"#utility.yul\":24729:24767   */\n      tag_923\n        /* \"#utility.yul\":24761:24765   */\n      dup3\n        /* \"#utility.yul\":24755:24766   */\n      sload\n        /* \"#utility.yul\":24729:24767   */\n      tag_237\n      jump\t// in\n    tag_923:\n        /* \"#utility.yul\":24814:24881   */\n      tag_924\n        /* \"#utility.yul\":24874:24880   */\n      dup3\n        /* \"#utility.yul\":24866:24872   */\n      dup3\n        /* \"#utility.yul\":24860:24864   */\n      dup6\n        /* \"#utility.yul\":24814:24881   */\n      tag_642\n      jump\t// in\n    tag_924:\n        /* \"#utility.yul\":24908:24909   */\n      0x00\n        /* \"#utility.yul\":24932:24936   */\n      0x20\n        /* \"#utility.yul\":24919:24936   */\n      swap1\n      pop\n        /* \"#utility.yul\":24964:24966   */\n      0x1f\n        /* \"#utility.yul\":24956:24962   */\n      dup4\n        /* \"#utility.yul\":24953:24967   */\n      gt\n        /* \"#utility.yul\":24981:24982   */\n      0x01\n        /* \"#utility.yul\":24976:25594   */\n      dup2\n      eq\n      tag_926\n      jumpi\n        /* \"#utility.yul\":25638:25639   */\n      0x00\n        /* \"#utility.yul\":25655:25661   */\n      dup5\n        /* \"#utility.yul\":25652:25729   */\n      iszero\n      tag_927\n      jumpi\n        /* \"#utility.yul\":25704:25713   */\n      dup3\n        /* \"#utility.yul\":25699:25702   */\n      dup8\n        /* \"#utility.yul\":25695:25714   */\n      add\n        /* \"#utility.yul\":25689:25715   */\n      mload\n        /* \"#utility.yul\":25680:25715   */\n      swap1\n      pop\n        /* \"#utility.yul\":25652:25729   */\n    tag_927:\n        /* \"#utility.yul\":25755:25822   */\n      tag_928\n        /* \"#utility.yul\":25815:25821   */\n      dup6\n        /* \"#utility.yul\":25808:25813   */\n      dup3\n        /* \"#utility.yul\":25755:25822   */\n      tag_645\n      jump\t// in\n    tag_928:\n        /* \"#utility.yul\":25749:25753   */\n      dup7\n        /* \"#utility.yul\":25742:25823   */\n      sstore\n        /* \"#utility.yul\":25611:25833   */\n      pop\n        /* \"#utility.yul\":24946:25833   */\n      jump(tag_925)\n        /* \"#utility.yul\":24976:25594   */\n    tag_926:\n        /* \"#utility.yul\":25028:25032   */\n      0x1f\n        /* \"#utility.yul\":25024:25033   */\n      not\n        /* \"#utility.yul\":25016:25022   */\n      dup5\n        /* \"#utility.yul\":25012:25034   */\n      and\n        /* \"#utility.yul\":25062:25099   */\n      tag_929\n        /* \"#utility.yul\":25094:25098   */\n      dup7\n        /* \"#utility.yul\":25062:25099   */\n      tag_632\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":25121:25122   */\n      0x00\n        /* \"#utility.yul\":25135:25343   */\n    tag_930:\n        /* \"#utility.yul\":25149:25156   */\n      dup3\n        /* \"#utility.yul\":25146:25147   */\n      dup2\n        /* \"#utility.yul\":25143:25157   */\n      lt\n        /* \"#utility.yul\":25135:25343   */\n      iszero\n      tag_932\n      jumpi\n        /* \"#utility.yul\":25228:25237   */\n      dup5\n        /* \"#utility.yul\":25223:25226   */\n      dup10\n        /* \"#utility.yul\":25219:25238   */\n      add\n        /* \"#utility.yul\":25213:25239   */\n      mload\n        /* \"#utility.yul\":25205:25211   */\n      dup3\n        /* \"#utility.yul\":25198:25240   */\n      sstore\n        /* \"#utility.yul\":25279:25280   */\n      0x01\n        /* \"#utility.yul\":25271:25277   */\n      dup3\n        /* \"#utility.yul\":25267:25281   */\n      add\n        /* \"#utility.yul\":25257:25281   */\n      swap2\n      pop\n        /* \"#utility.yul\":25326:25328   */\n      0x20\n        /* \"#utility.yul\":25315:25324   */\n      dup6\n        /* \"#utility.yul\":25311:25329   */\n      add\n        /* \"#utility.yul\":25298:25329   */\n      swap5\n      pop\n        /* \"#utility.yul\":25172:25176   */\n      0x20\n        /* \"#utility.yul\":25169:25170   */\n      dup2\n        /* \"#utility.yul\":25165:25177   */\n      add\n        /* \"#utility.yul\":25160:25177   */\n      swap1\n      pop\n        /* \"#utility.yul\":25135:25343   */\n      jump(tag_930)\n    tag_932:\n        /* \"#utility.yul\":25371:25377   */\n      dup7\n        /* \"#utility.yul\":25362:25369   */\n      dup4\n        /* \"#utility.yul\":25359:25378   */\n      lt\n        /* \"#utility.yul\":25356:25535   */\n      iszero\n      tag_933\n      jumpi\n        /* \"#utility.yul\":25429:25438   */\n      dup5\n        /* \"#utility.yul\":25424:25427   */\n      dup10\n        /* \"#utility.yul\":25420:25439   */\n      add\n        /* \"#utility.yul\":25414:25440   */\n      mload\n        /* \"#utility.yul\":25472:25520   */\n      tag_934\n        /* \"#utility.yul\":25514:25518   */\n      0x1f\n        /* \"#utility.yul\":25506:25512   */\n      dup10\n        /* \"#utility.yul\":25502:25519   */\n      and\n        /* \"#utility.yul\":25491:25500   */\n      dup3\n        /* \"#utility.yul\":25472:25520   */\n      tag_644\n      jump\t// in\n    tag_934:\n        /* \"#utility.yul\":25464:25470   */\n      dup4\n        /* \"#utility.yul\":25457:25521   */\n      sstore\n        /* \"#utility.yul\":25379:25535   */\n      pop\n        /* \"#utility.yul\":25356:25535   */\n    tag_933:\n        /* \"#utility.yul\":25581:25582   */\n      0x01\n        /* \"#utility.yul\":25577:25578   */\n      0x02\n        /* \"#utility.yul\":25569:25575   */\n      dup9\n        /* \"#utility.yul\":25565:25579   */\n      mul\n        /* \"#utility.yul\":25561:25583   */\n      add\n        /* \"#utility.yul\":25555:25559   */\n      dup9\n        /* \"#utility.yul\":25548:25584   */\n      sstore\n        /* \"#utility.yul\":24983:25594   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24946:25833   */\n    tag_925:\n      pop\n        /* \"#utility.yul\":24536:25839   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24444:25839   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25845:25943   */\n    tag_646:\n        /* \"#utility.yul\":25896:25902   */\n      0x00\n        /* \"#utility.yul\":25930:25935   */\n      dup2\n        /* \"#utility.yul\":25924:25936   */\n      mload\n        /* \"#utility.yul\":25914:25936   */\n      swap1\n      pop\n        /* \"#utility.yul\":25845:25943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25949:26096   */\n    tag_647:\n        /* \"#utility.yul\":26050:26061   */\n      0x00\n        /* \"#utility.yul\":26087:26090   */\n      dup2\n        /* \"#utility.yul\":26072:26090   */\n      swap1\n      pop\n        /* \"#utility.yul\":25949:26096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26102:26488   */\n    tag_648:\n        /* \"#utility.yul\":26206:26209   */\n      0x00\n        /* \"#utility.yul\":26234:26272   */\n      tag_938\n        /* \"#utility.yul\":26266:26271   */\n      dup3\n        /* \"#utility.yul\":26234:26272   */\n      tag_646\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":26288:26376   */\n      tag_939\n        /* \"#utility.yul\":26369:26375   */\n      dup2\n        /* \"#utility.yul\":26364:26367   */\n      dup6\n        /* \"#utility.yul\":26288:26376   */\n      tag_647\n      jump\t// in\n    tag_939:\n        /* \"#utility.yul\":26281:26376   */\n      swap4\n      pop\n        /* \"#utility.yul\":26385:26450   */\n      tag_940\n        /* \"#utility.yul\":26443:26449   */\n      dup2\n        /* \"#utility.yul\":26438:26441   */\n      dup6\n        /* \"#utility.yul\":26431:26435   */\n      0x20\n        /* \"#utility.yul\":26424:26429   */\n      dup7\n        /* \"#utility.yul\":26420:26436   */\n      add\n        /* \"#utility.yul\":26385:26450   */\n      tag_585\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":26475:26481   */\n      dup1\n        /* \"#utility.yul\":26470:26473   */\n      dup5\n        /* \"#utility.yul\":26466:26482   */\n      add\n        /* \"#utility.yul\":26459:26482   */\n      swap2\n      pop\n        /* \"#utility.yul\":26210:26488   */\n      pop\n        /* \"#utility.yul\":26102:26488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26494:26765   */\n    tag_554:\n        /* \"#utility.yul\":26624:26627   */\n      0x00\n        /* \"#utility.yul\":26646:26739   */\n      tag_942\n        /* \"#utility.yul\":26735:26738   */\n      dup3\n        /* \"#utility.yul\":26726:26732   */\n      dup5\n        /* \"#utility.yul\":26646:26739   */\n      tag_648\n      jump\t// in\n    tag_942:\n        /* \"#utility.yul\":26639:26739   */\n      swap2\n      pop\n        /* \"#utility.yul\":26756:26759   */\n      dup2\n        /* \"#utility.yul\":26749:26759   */\n      swap1\n      pop\n        /* \"#utility.yul\":26494:26765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cdc2b1a322f65cd48f2ead5b5f0dff4b49fa2e219a1b4fde36bf4a596e00420564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f80fd5b506080516135656100685f395f8181611a1e01528181611a730152611c5001526135655ff3fe60806040526004361061023a575f3560e01c80635c975abb1161012d578063ad3cb1cc116100aa578063d73792a91161006e578063d73792a914610820578063dd62ed3e1461084a578063e63ab1e914610886578063e723422d146108b0578063f72c0d8b146108d85761023a565b8063ad3cb1cc14610752578063bed998501461077c578063c60b494f146107a6578063c76af7b0146107ce578063d547741f146107f85761023a565b806391d14854116100f157806391d148541461065c57806395d89b4114610698578063a217fddf146106c2578063a9059cbb146106ec578063acb2ad6f146107285761023a565b80635c975abb1461059057806370a08231146105ba5780637e77c503146105f65780638456cb591461061e5780638f02bb5b146106345761023a565b806336568abe116101bb5780634f1ef2861161017f5780634f1ef286146104cc578063504b82bf146104e857806352d1902d1461051257806355b593f11461053c578063587f5ed7146105665761023a565b806336568abe146104265780633f4ba83a1461044e5780634690484014610464578063476343ee1461048e578063492ef538146104a45761023a565b806323b872dd1161020257806323b872dd14610332578063248a9ca31461036e5780632f2ff15d146103aa578063313ce567146103d257806332cb6b0c146103fc5761023a565b806301ffc9a71461023e57806306fdde031461027a578063095ea7b3146102a457806318160ddd146102e0578063189d165e1461030a575b5f80fd5b348015610249575f80fd5b50610264600480360381019061025f9190612783565b610902565b60405161027191906127c8565b60405180910390f35b348015610285575f80fd5b5061028e61097b565b60405161029b9190612851565b60405180910390f35b3480156102af575f80fd5b506102ca60048036038101906102c591906128fe565b610a19565b6040516102d791906127c8565b60405180910390f35b3480156102eb575f80fd5b506102f4610a3b565b604051610301919061294b565b60405180910390f35b348015610315575f80fd5b50610330600480360381019061032b9190612964565b610a52565b005b34801561033d575f80fd5b506103586004803603810190610353919061298f565b610aa0565b60405161036591906127c8565b60405180910390f35b348015610379575f80fd5b50610394600480360381019061038f9190612a12565b610af1565b6040516103a19190612a4c565b60405180910390f35b3480156103b5575f80fd5b506103d060048036038101906103cb9190612a65565b610b1b565b005b3480156103dd575f80fd5b506103e6610b3d565b6040516103f39190612abe565b60405180910390f35b348015610407575f80fd5b50610410610b45565b60405161041d919061294b565b60405180910390f35b348015610431575f80fd5b5061044c60048036038101906104479190612a65565b610b53565b005b348015610459575f80fd5b50610462610bce565b005b34801561046f575f80fd5b50610478610c03565b6040516104859190612ae6565b60405180910390f35b348015610499575f80fd5b506104a2610c28565b005b3480156104af575f80fd5b506104ca60048036038101906104c59190612aff565b610d2a565b005b6104e660048036038101906104e19190612c56565b610d7a565b005b3480156104f3575f80fd5b506104fc610d99565b6040516105099190612ae6565b60405180910390f35b34801561051d575f80fd5b50610526610dbe565b6040516105339190612a4c565b60405180910390f35b348015610547575f80fd5b50610550610def565b60405161055d9190612ae6565b60405180910390f35b348015610571575f80fd5b5061057a610e14565b604051610587919061294b565b60405180910390f35b34801561059b575f80fd5b506105a4610e1a565b6040516105b191906127c8565b60405180910390f35b3480156105c5575f80fd5b506105e060048036038101906105db9190612aff565b610e2e565b6040516105ed919061294b565b60405180910390f35b348015610601575f80fd5b5061061c60048036038101906106179190612d4e565b610e81565b005b348015610629575f80fd5b506106326110dc565b005b34801561063f575f80fd5b5061065a60048036038101906106559190612964565b611111565b005b348015610667575f80fd5b50610682600480360381019061067d9190612a65565b61115f565b60405161068f91906127c8565b60405180910390f35b3480156106a3575f80fd5b506106ac6111d0565b6040516106b99190612851565b60405180910390f35b3480156106cd575f80fd5b506106d661126e565b6040516106e39190612a4c565b60405180910390f35b3480156106f7575f80fd5b50610712600480360381019061070d91906128fe565b611274565b60405161071f91906127c8565b60405180910390f35b348015610733575f80fd5b5061073c611299565b604051610749919061294b565b60405180910390f35b34801561075d575f80fd5b5061076661129f565b6040516107739190612851565b60405180910390f35b348015610787575f80fd5b506107906112d8565b60405161079d919061294b565b60405180910390f35b3480156107b1575f80fd5b506107cc60048036038101906107c79190612aff565b6112de565b005b3480156107d9575f80fd5b506107e261132e565b6040516107ef9190612ae6565b60405180910390f35b348015610803575f80fd5b5061081e60048036038101906108199190612a65565b611353565b005b34801561082b575f80fd5b50610834611375565b604051610841919061294b565b60405180910390f35b348015610855575f80fd5b50610870600480360381019061086b9190612dfd565b61137b565b60405161087d919061294b565b60405180910390f35b348015610891575f80fd5b5061089a61140b565b6040516108a79190612a4c565b60405180910390f35b3480156108bb575f80fd5b506108d660048036038101906108d19190612aff565b61142f565b005b3480156108e3575f80fd5b506108ec61147f565b6040516108f99190612a4c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109745750610973826114a3565b5b9050919050565b60605f61098661150c565b905080600301805461099790612e68565b80601f01602080910402602001604051908101604052809291908181526020018280546109c390612e68565b8015610a0e5780601f106109e557610100808354040283529160200191610a0e565b820191905f5260205f20905b8154815290600101906020018083116109f157829003601f168201915b505050505091505090565b5f80610a23611533565b9050610a3081858561153a565b600191505092915050565b5f80610a4561150c565b9050806002015491505090565b5f801b610a5e8161154c565b816033819055507f47863b595116a31383855975a4078913dce7881e717b75a06ced2db5d534ff7882604051610a94919061294b565b60405180910390a15050565b5f610aa9611560565b610ab48484846115aa565b5f610ac685610ac1611533565b61137b565b9050610ae585610ad4611533565b8584610ae09190612ec5565b61153a565b60019150509392505050565b5f80610afb6116b5565b9050805f015f8481526020019081526020015f2060010154915050919050565b610b2482610af1565b610b2d8161154c565b610b3783836116dc565b50505050565b5f6012905090565b69d3c21bcecceda100000081565b610b5b611533565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bbf576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bc982826117d4565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610bf88161154c565b610c006118cc565b50565b60345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f801b610c348161154c565b610c3c611560565b5f60355490505f8111610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90612f42565b60405180910390fd5b5f603581905550610cb73060345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361192c565b60345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a82604051610d1e919061294b565b60405180910390a25050565b5f801b610d368161154c565b8160385f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610d82611a1c565b610d8b82611b02565b610d958282611b30565b5050565b60365f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610dc7611c4e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b60375f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60355481565b5f805f9054906101000a900460ff16905090565b5f80610e3861150c565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f610e8a611cd5565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610ed25750825b90505f60018367ffffffffffffffff16148015610f0557505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610f13575080155b15610f4a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610f97576001855f0160086101000a81548160ff0219169083151502179055505b610fa18a8a611cfc565b610fa9611d12565b610fb1611d1c565b610fb9611d26565b610fc55f801b886116dc565b50610ff07f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a886116dc565b5061101b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3886116dc565b506110268789611d38565b606460328190555060326033819055508560345f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156110d0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516110c79190612fb5565b60405180910390a15b50505050505050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6111068161154c565b61110e611db7565b50565b5f801b61111d8161154c565b816032819055507ff9f635b7cf851af6071aaf78ef8a5f752dc52f19d556fea4512b0c2ad4baea7282604051611153919061294b565b60405180910390a15050565b5f806111696116b5565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b60605f6111db61150c565b90508060040180546111ec90612e68565b80601f016020809104026020016040519081016040528092919081815260200182805461121890612e68565b80156112635780601f1061123a57610100808354040283529160200191611263565b820191905f5260205f20905b81548152906001019060200180831161124657829003601f168201915b505050505091505090565b5f801b81565b5f61127d611560565b61128f611288611533565b84846115aa565b6001905092915050565b60325481565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60335481565b5f801b6112ea8161154c565b8160365f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60385f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61135c82610af1565b6113658161154c565b61136f83836117d4565b50505050565b61271081565b5f8061138561150c565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f801b61143b8161154c565b8160375f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6115478383836001611e18565b505050565b61155d81611558611533565b611ff5565b50565b611568610e1a565b156115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90613018565b60405180910390fd5b565b5f81116115ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e390613080565b60405180910390fd5b5f612710603254836115fe919061309e565b611608919061310c565b90505f6127106033548461161c919061309e565b611626919061310c565b90505f8183856116369190612ec5565b6116409190612ec5565b90505f83111561168f576116768660345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561192c565b8260355f828254611687919061313c565b925050819055505b5f8211156116a2576116a18683612046565b5b6116ad86868361192c565b505050505050565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b5f806116e66116b5565b90506116f2848461115f565b6117c9576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611765611533565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506117ce565b5f9150505b92915050565b5f806117de6116b5565b90506117ea848461115f565b156118c1575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061185d611533565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019150506118c6565b5f9150505b92915050565b6118d46120c5565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611915611533565b6040516119229190612ae6565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361199c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119939190612ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a0c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a039190612ae6565b60405180910390fd5b611a1783838361210e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611ac957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611ab061233d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611b00576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3611b2c8161154c565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611b9857506040513d601f19601f82011682018060405250810190611b959190613183565b60015b611bd957816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611bd09190612ae6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114611c3f57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611c369190612a4c565b60405180910390fd5b611c498383612390565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611cd3576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611d04612402565b611d0e8282612442565b5050565b611d1a612402565b565b611d24612402565b565b611d2e612402565b611d3661247e565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611da8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d9f9190612ae6565b60405180910390fd5b611db35f838361210e565b5050565b611dbf611560565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e01611533565b604051611e0e9190612ae6565b60405180910390a1565b5f611e2161150c565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611e93575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611e8a9190612ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f03575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611efa9190612ae6565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611fee578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611fe5919061294b565b60405180910390a35b5050505050565b611fff828261115f565b6120425780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016120399291906131ae565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120b6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016120ad9190612ae6565b60405180910390fd5b6120c1825f8361210e565b5050565b6120cd610e1a565b61210c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121039061321f565b60405180910390fd5b565b5f61211761150c565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361216b5781816002015f82825461215f919061313c565b9250508190555061223d565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156121f6578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016121ed9392919061323d565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036122865781816002015f82825403925050819055506122d2565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161232f919061294b565b60405180910390a350505050565b5f6123697f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6124a0565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612399826124a9565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156123f5576123ef8282612572565b506123fe565b6123fd6125f2565b5b5050565b61240a61262e565b612440576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61244a612402565b5f61245361150c565b9050828160030190816124669190613406565b50818160040190816124789190613406565b50505050565b612486612402565b5f805f6101000a81548160ff021916908315150217905550565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361250457806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016124fb9190612ae6565b60405180910390fd5b806125307f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6124a0565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff168460405161259b9190613519565b5f60405180830381855af49150503d805f81146125d3576040519150601f19603f3d011682016040523d82523d5f602084013e6125d8565b606091505b50915091506125e885838361264c565b9250505092915050565b5f34111561262c576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f612637611cd5565b5f0160089054906101000a900460ff16905090565b6060826126615761265c826126d9565b6126d1565b5f825114801561268757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156126c957836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016126c09190612ae6565b60405180910390fd5b8190506126d2565b5b9392505050565b5f815111156126eb5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6127628161272e565b811461276c575f80fd5b50565b5f8135905061277d81612759565b92915050565b5f6020828403121561279857612797612726565b5b5f6127a58482850161276f565b91505092915050565b5f8115159050919050565b6127c2816127ae565b82525050565b5f6020820190506127db5f8301846127b9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612823826127e1565b61282d81856127eb565b935061283d8185602086016127fb565b61284681612809565b840191505092915050565b5f6020820190508181035f8301526128698184612819565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61289a82612871565b9050919050565b6128aa81612890565b81146128b4575f80fd5b50565b5f813590506128c5816128a1565b92915050565b5f819050919050565b6128dd816128cb565b81146128e7575f80fd5b50565b5f813590506128f8816128d4565b92915050565b5f806040838503121561291457612913612726565b5b5f612921858286016128b7565b9250506020612932858286016128ea565b9150509250929050565b612945816128cb565b82525050565b5f60208201905061295e5f83018461293c565b92915050565b5f6020828403121561297957612978612726565b5b5f612986848285016128ea565b91505092915050565b5f805f606084860312156129a6576129a5612726565b5b5f6129b3868287016128b7565b93505060206129c4868287016128b7565b92505060406129d5868287016128ea565b9150509250925092565b5f819050919050565b6129f1816129df565b81146129fb575f80fd5b50565b5f81359050612a0c816129e8565b92915050565b5f60208284031215612a2757612a26612726565b5b5f612a34848285016129fe565b91505092915050565b612a46816129df565b82525050565b5f602082019050612a5f5f830184612a3d565b92915050565b5f8060408385031215612a7b57612a7a612726565b5b5f612a88858286016129fe565b9250506020612a99858286016128b7565b9150509250929050565b5f60ff82169050919050565b612ab881612aa3565b82525050565b5f602082019050612ad15f830184612aaf565b92915050565b612ae081612890565b82525050565b5f602082019050612af95f830184612ad7565b92915050565b5f60208284031215612b1457612b13612726565b5b5f612b21848285016128b7565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612b6882612809565b810181811067ffffffffffffffff82111715612b8757612b86612b32565b5b80604052505050565b5f612b9961271d565b9050612ba58282612b5f565b919050565b5f67ffffffffffffffff821115612bc457612bc3612b32565b5b612bcd82612809565b9050602081019050919050565b828183375f83830152505050565b5f612bfa612bf584612baa565b612b90565b905082815260208101848484011115612c1657612c15612b2e565b5b612c21848285612bda565b509392505050565b5f82601f830112612c3d57612c3c612b2a565b5b8135612c4d848260208601612be8565b91505092915050565b5f8060408385031215612c6c57612c6b612726565b5b5f612c79858286016128b7565b925050602083013567ffffffffffffffff811115612c9a57612c9961272a565b5b612ca685828601612c29565b9150509250929050565b5f67ffffffffffffffff821115612cca57612cc9612b32565b5b612cd382612809565b9050602081019050919050565b5f612cf2612ced84612cb0565b612b90565b905082815260208101848484011115612d0e57612d0d612b2e565b5b612d19848285612bda565b509392505050565b5f82601f830112612d3557612d34612b2a565b5b8135612d45848260208601612ce0565b91505092915050565b5f805f805f60a08688031215612d6757612d66612726565b5b5f86013567ffffffffffffffff811115612d8457612d8361272a565b5b612d9088828901612d21565b955050602086013567ffffffffffffffff811115612db157612db061272a565b5b612dbd88828901612d21565b9450506040612dce888289016128ea565b9350506060612ddf888289016128b7565b9250506080612df0888289016128b7565b9150509295509295909350565b5f8060408385031215612e1357612e12612726565b5b5f612e20858286016128b7565b9250506020612e31858286016128b7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612e7f57607f821691505b602082108103612e9257612e91612e3b565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612ecf826128cb565b9150612eda836128cb565b9250828203905081811115612ef257612ef1612e98565b5b92915050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f612f2c6013836127eb565b9150612f3782612ef8565b602082019050919050565b5f6020820190508181035f830152612f5981612f20565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f612f9f612f9a612f9584612f60565b612f7c565b612f69565b9050919050565b612faf81612f85565b82525050565b5f602082019050612fc85f830184612fa6565b92915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6130026010836127eb565b915061300d82612fce565b602082019050919050565b5f6020820190508181035f83015261302f81612ff6565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61306a601d836127eb565b915061307582613036565b602082019050919050565b5f6020820190508181035f8301526130978161305e565b9050919050565b5f6130a8826128cb565b91506130b3836128cb565b92508282026130c1816128cb565b915082820484148315176130d8576130d7612e98565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f613116826128cb565b9150613121836128cb565b925082613131576131306130df565b5b828204905092915050565b5f613146826128cb565b9150613151836128cb565b925082820190508082111561316957613168612e98565b5b92915050565b5f8151905061317d816129e8565b92915050565b5f6020828403121561319857613197612726565b5b5f6131a58482850161316f565b91505092915050565b5f6040820190506131c15f830185612ad7565b6131ce6020830184612a3d565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6132096014836127eb565b9150613214826131d5565b602082019050919050565b5f6020820190508181035f830152613236816131fd565b9050919050565b5f6060820190506132505f830186612ad7565b61325d602083018561293c565b61326a604083018461293c565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026132ce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613293565b6132d88683613293565b95508019841693508086168417925050509392505050565b5f61330a613305613300846128cb565b612f7c565b6128cb565b9050919050565b5f819050919050565b613323836132f0565b61333761332f82613311565b84845461329f565b825550505050565b5f90565b61334b61333f565b61335681848461331a565b505050565b5b818110156133795761336e5f82613343565b60018101905061335c565b5050565b601f8211156133be5761338f81613272565b61339884613284565b810160208510156133a7578190505b6133bb6133b385613284565b83018261335b565b50505b505050565b5f82821c905092915050565b5f6133de5f19846008026133c3565b1980831691505092915050565b5f6133f683836133cf565b9150826002028217905092915050565b61340f826127e1565b67ffffffffffffffff81111561342857613427612b32565b5b6134328254612e68565b61343d82828561337d565b5f60209050601f83116001811461346e575f841561345c578287015190505b61346685826133eb565b8655506134cd565b601f19841661347c86613272565b5f5b828110156134a35784890151825560018201915060208501945060208101905061347e565b868310156134c057848901516134bc601f8916826133cf565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f6134f3826134d5565b6134fd81856134df565b935061350d8185602086016127fb565b80840191505092915050565b5f61352482846134e9565b91508190509291505056fea2646970667358221220cdc2b1a322f65cd48f2ead5b5f0dff4b49fa2e219a1b4fde36bf4a596e00420564736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x3565 PUSH2 0x68 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1A1E ADD MSTORE DUP2 DUP2 PUSH2 0x1A73 ADD MSTORE PUSH2 0x1C50 ADD MSTORE PUSH2 0x3565 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x12D JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xE723422D EQ PUSH2 0x8B0 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x8D8 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x77C JUMPI DUP1 PUSH4 0xC60B494F EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xC76AF7B0 EQ PUSH2 0x7CE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x7F8 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x698 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xACB2AD6F EQ PUSH2 0x728 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x7E77C503 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x8F02BB5B EQ PUSH2 0x634 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x504B82BF EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x55B593F1 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x587F5ED7 EQ PUSH2 0x566 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x492EF538 EQ PUSH2 0x4A4 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x202 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3FC JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x189D165E EQ PUSH2 0x30A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x298F JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x2A12 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH2 0xBCE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH2 0xC28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x2C56 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x550 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57A PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x2D4E JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x655 SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0x1111 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x682 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AC PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D6 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73C PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x766 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x790 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0x12DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E2 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x81E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x1353 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x834 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x870 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x2DFD JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89A PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0x142F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EC PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x974 JUMPI POP PUSH2 0x973 DUP3 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x986 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x997 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9C3 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA0E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA0E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA23 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP PUSH2 0xA30 DUP2 DUP6 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA45 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xA5E DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH32 0x47863B595116A31383855975A4078913DCE7881E717B75A06CED2DB5D534FF78 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA9 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0xAB4 DUP5 DUP5 DUP5 PUSH2 0x15AA JUMP JUMPDEST PUSH0 PUSH2 0xAC6 DUP6 PUSH2 0xAC1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST SWAP1 POP PUSH2 0xAE5 DUP6 PUSH2 0xAD4 PUSH2 0x1533 JUMP JUMPDEST DUP6 DUP5 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAFB PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB24 DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xB2D DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0xB37 DUP4 DUP4 PUSH2 0x16DC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH2 0xB5B PUSH2 0x1533 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC9 DUP3 DUP3 PUSH2 0x17D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xBF8 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0xC00 PUSH2 0x18CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xC34 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x1560 JUMP JUMPDEST PUSH0 PUSH1 0x35 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x35 DUP2 SWAP1 SSTORE POP PUSH2 0xCB7 ADDRESS PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xD36 DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x38 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xD82 PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0xD8B DUP3 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0xD95 DUP3 DUP3 PUSH2 0x1B30 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x36 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xDC7 PUSH2 0x1C4E JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x37 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x35 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE38 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE8A PUSH2 0x1CD5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xED2 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF05 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xF13 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xF4A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xF97 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xFA1 DUP11 DUP11 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0xFA9 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0xFB1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0xFC5 PUSH0 DUP1 SHL DUP9 PUSH2 0x16DC JUMP JUMPDEST POP PUSH2 0xFF0 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP9 PUSH2 0x16DC JUMP JUMPDEST POP PUSH2 0x101B PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP9 PUSH2 0x16DC JUMP JUMPDEST POP PUSH2 0x1026 DUP8 DUP10 PUSH2 0x1D38 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x32 DUP2 SWAP1 SSTORE POP PUSH1 0x32 PUSH1 0x33 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x34 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x10D0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1106 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x110E PUSH2 0x1DB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x111D DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x32 DUP2 SWAP1 SSTORE POP PUSH32 0xF9F635B7CF851AF6071AAF78EF8A5F752DC52F19D556FEA4512B0C2AD4BAEA72 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1169 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x11DB PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x11EC SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1218 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1263 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x123A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1263 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1246 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x127D PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x128F PUSH2 0x1288 PUSH2 0x1533 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x12EA DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x36 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x38 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x135C DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x136F DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1385 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x143B DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x37 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1547 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x1558 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x1FF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1568 PUSH2 0xE1A JUMP JUMPDEST ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E3 SWAP1 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x32 SLOAD DUP4 PUSH2 0x15FE SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x33 SLOAD DUP5 PUSH2 0x161C SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 PUSH2 0x1636 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x1640 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 GT ISZERO PUSH2 0x168F JUMPI PUSH2 0x1676 DUP7 PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x192C JUMP JUMPDEST DUP3 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1687 SWAP2 SWAP1 PUSH2 0x313C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 DUP7 DUP4 PUSH2 0x2046 JUMP JUMPDEST JUMPDEST PUSH2 0x16AD DUP7 DUP7 DUP4 PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x16E6 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x16F2 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x17C9 JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1765 PUSH2 0x1533 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x17CE JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17DE PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x17EA DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST ISZERO PUSH2 0x18C1 JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x185D PUSH2 0x1533 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x18C6 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D4 PUSH2 0x20C5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1915 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1922 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x199C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1993 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A17 DUP4 DUP4 DUP4 PUSH2 0x210E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AC9 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB0 PUSH2 0x233D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x1B2C DUP2 PUSH2 0x154C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B98 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B95 SWAP2 SWAP1 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BD9 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD0 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1C3F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C36 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C49 DUP4 DUP4 PUSH2 0x2390 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D04 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x2442 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D24 PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D2E PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1D36 PUSH2 0x247E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9F SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB3 PUSH0 DUP4 DUP4 PUSH2 0x210E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DBF PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E01 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH2 0x1E21 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8A SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1FEE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1FE5 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FFF DUP3 DUP3 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x2042 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2039 SWAP3 SWAP2 SWAP1 PUSH2 0x31AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AD SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20C1 DUP3 PUSH0 DUP4 PUSH2 0x210E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x20CD PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x210C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2103 SWAP1 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2117 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x216B JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x215F SWAP2 SWAP1 PUSH2 0x313C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x223D JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x21F6 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x323D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2286 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x22D2 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x232F SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2369 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x24A0 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2399 DUP3 PUSH2 0x24A9 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x23F5 JUMPI PUSH2 0x23EF DUP3 DUP3 PUSH2 0x2572 JUMP JUMPDEST POP PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x23FD PUSH2 0x25F2 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x240A PUSH2 0x262E JUMP JUMPDEST PUSH2 0x2440 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x244A PUSH2 0x2402 JUMP JUMPDEST PUSH0 PUSH2 0x2453 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2466 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2478 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2486 PUSH2 0x2402 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2504 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24FB SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2530 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x24A0 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x259B SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x25D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x25E8 DUP6 DUP4 DUP4 PUSH2 0x264C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x262C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2637 PUSH2 0x1CD5 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2661 JUMPI PUSH2 0x265C DUP3 PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x26D1 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2687 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x26C9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C0 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x26D2 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x26EB JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2762 DUP2 PUSH2 0x272E JUMP JUMPDEST DUP2 EQ PUSH2 0x276C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x277D DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2798 JUMPI PUSH2 0x2797 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27A5 DUP5 DUP3 DUP6 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x27AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27DB PUSH0 DUP4 ADD DUP5 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2823 DUP3 PUSH2 0x27E1 JUMP JUMPDEST PUSH2 0x282D DUP2 DUP6 PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP PUSH2 0x283D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x2846 DUP2 PUSH2 0x2809 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2869 DUP2 DUP5 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x289A DUP3 PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AA DUP2 PUSH2 0x2890 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C5 DUP2 PUSH2 0x28A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28DD DUP2 PUSH2 0x28CB JUMP JUMPDEST DUP2 EQ PUSH2 0x28E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F8 DUP2 PUSH2 0x28D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2914 JUMPI PUSH2 0x2913 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2921 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2932 DUP6 DUP3 DUP7 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2945 DUP2 PUSH2 0x28CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295E PUSH0 DUP4 ADD DUP5 PUSH2 0x293C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2979 JUMPI PUSH2 0x2978 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2986 DUP5 DUP3 DUP6 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH2 0x29A5 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B3 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29C4 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29D5 DUP7 DUP3 DUP8 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F1 DUP2 PUSH2 0x29DF JUMP JUMPDEST DUP2 EQ PUSH2 0x29FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0C DUP2 PUSH2 0x29E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A34 DUP5 DUP3 DUP6 ADD PUSH2 0x29FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A46 DUP2 PUSH2 0x29DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A5F PUSH0 DUP4 ADD DUP5 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A7B JUMPI PUSH2 0x2A7A PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A88 DUP6 DUP3 DUP7 ADD PUSH2 0x29FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A99 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB8 DUP2 PUSH2 0x2AA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AE0 DUP2 PUSH2 0x2890 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B13 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B21 DUP5 DUP3 DUP6 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2B68 DUP3 PUSH2 0x2809 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B99 PUSH2 0x271D JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA5 DUP3 DUP3 PUSH2 0x2B5F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC4 JUMPI PUSH2 0x2BC3 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST PUSH2 0x2BCD DUP3 PUSH2 0x2809 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFA PUSH2 0x2BF5 DUP5 PUSH2 0x2BAA JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C16 JUMPI PUSH2 0x2C15 PUSH2 0x2B2E JUMP JUMPDEST JUMPDEST PUSH2 0x2C21 DUP5 DUP3 DUP6 PUSH2 0x2BDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C3D JUMPI PUSH2 0x2C3C PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C4D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C6C JUMPI PUSH2 0x2C6B PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C79 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C9A JUMPI PUSH2 0x2C99 PUSH2 0x272A JUMP JUMPDEST JUMPDEST PUSH2 0x2CA6 DUP6 DUP3 DUP7 ADD PUSH2 0x2C29 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CCA JUMPI PUSH2 0x2CC9 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST PUSH2 0x2CD3 DUP3 PUSH2 0x2809 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF2 PUSH2 0x2CED DUP5 PUSH2 0x2CB0 JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x2B2E JUMP JUMPDEST JUMPDEST PUSH2 0x2D19 DUP5 DUP3 DUP6 PUSH2 0x2BDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D35 JUMPI PUSH2 0x2D34 PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D45 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2D67 JUMPI PUSH2 0x2D66 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D83 PUSH2 0x272A JUMP JUMPDEST JUMPDEST PUSH2 0x2D90 DUP9 DUP3 DUP10 ADD PUSH2 0x2D21 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DB1 JUMPI PUSH2 0x2DB0 PUSH2 0x272A JUMP JUMPDEST JUMPDEST PUSH2 0x2DBD DUP9 DUP3 DUP10 ADD PUSH2 0x2D21 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2DCE DUP9 DUP3 DUP10 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2DDF DUP9 DUP3 DUP10 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2DF0 DUP9 DUP3 DUP10 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E13 JUMPI PUSH2 0x2E12 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E20 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E31 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E7F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E92 JUMPI PUSH2 0x2E91 PUSH2 0x2E3B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2ECF DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDA DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EF2 JUMPI PUSH2 0x2EF1 PUSH2 0x2E98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206665657320746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F2C PUSH1 0x13 DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2F37 DUP3 PUSH2 0x2EF8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F59 DUP2 PUSH2 0x2F20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F9F PUSH2 0x2F9A PUSH2 0x2F95 DUP5 PUSH2 0x2F60 JUMP JUMPDEST PUSH2 0x2F7C JUMP JUMPDEST PUSH2 0x2F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FAF DUP2 PUSH2 0x2F85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FC8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2FA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3002 PUSH1 0x10 DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x300D DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x302F DUP2 PUSH2 0x2FF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x306A PUSH1 0x1D DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3075 DUP3 PUSH2 0x3036 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3097 DUP2 PUSH2 0x305E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30A8 DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x30B3 DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x30C1 DUP2 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x30D8 JUMPI PUSH2 0x30D7 PUSH2 0x2E98 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3116 DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x3121 DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3131 JUMPI PUSH2 0x3130 PUSH2 0x30DF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3146 DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x3151 DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3169 JUMPI PUSH2 0x3168 PUSH2 0x2E98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x317D DUP2 PUSH2 0x29E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3198 JUMPI PUSH2 0x3197 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x31A5 DUP5 DUP3 DUP6 ADD PUSH2 0x316F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31C1 PUSH0 DUP4 ADD DUP6 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x31CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3209 PUSH1 0x14 DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3214 DUP3 PUSH2 0x31D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3236 DUP2 PUSH2 0x31FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3250 PUSH0 DUP4 ADD DUP7 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x325D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x326A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x293C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x32CE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3293 JUMP JUMPDEST PUSH2 0x32D8 DUP7 DUP4 PUSH2 0x3293 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x330A PUSH2 0x3305 PUSH2 0x3300 DUP5 PUSH2 0x28CB JUMP JUMPDEST PUSH2 0x2F7C JUMP JUMPDEST PUSH2 0x28CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3323 DUP4 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0x3337 PUSH2 0x332F DUP3 PUSH2 0x3311 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x329F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x334B PUSH2 0x333F JUMP JUMPDEST PUSH2 0x3356 DUP2 DUP5 DUP5 PUSH2 0x331A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3379 JUMPI PUSH2 0x336E PUSH0 DUP3 PUSH2 0x3343 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x335C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x33BE JUMPI PUSH2 0x338F DUP2 PUSH2 0x3272 JUMP JUMPDEST PUSH2 0x3398 DUP5 PUSH2 0x3284 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x33A7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x33BB PUSH2 0x33B3 DUP6 PUSH2 0x3284 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x335B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33DE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x33C3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33F6 DUP4 DUP4 PUSH2 0x33CF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x340F DUP3 PUSH2 0x27E1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3428 JUMPI PUSH2 0x3427 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST PUSH2 0x3432 DUP3 SLOAD PUSH2 0x2E68 JUMP JUMPDEST PUSH2 0x343D DUP3 DUP3 DUP6 PUSH2 0x337D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x346E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x345C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3466 DUP6 DUP3 PUSH2 0x33EB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x34CD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x347C DUP7 PUSH2 0x3272 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x34A3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x347E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x34C0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x34BC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x33CF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x34F3 DUP3 PUSH2 0x34D5 JUMP JUMPDEST PUSH2 0x34FD DUP2 DUP6 PUSH2 0x34DF JUMP JUMPDEST SWAP4 POP PUSH2 0x350D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27FB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3524 DUP3 DUP5 PUSH2 0x34E9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC2 0xB1 LOG3 0x22 0xF6 TLOAD 0xD4 DUP16 0x2E 0xAD JUMPDEST PUSH0 0xD SELFDESTRUCT 0x4B BLOBHASH STATICCALL 0x2E 0x21 SWAP11 SHL 0x4F 0xDE CALLDATASIZE 0xBF BLOBBASEFEE MSIZE PUSH15 0x420564736F6C634300081A003300 ",
							"sourceMap": "377:3837:19:-:0;;;1171:4:2;1128:48;;;;;;;;;377:3837:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": 4718,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FEE_DENOMINATOR_2743": {
									"entryPoint": 4981,
									"id": 2743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_2748": {
									"entryPoint": 2885,
									"id": 2748,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_2727": {
									"entryPoint": 5131,
									"id": 2727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2732": {
									"entryPoint": 5247,
									"id": 2732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": 4767,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 7442,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_994": {
									"entryPoint": 7420,
									"id": 994,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_1022": {
									"entryPoint": 9282,
									"id": 1022,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Pausable_init_830": {
									"entryPoint": 7462,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_840": {
									"entryPoint": 9342,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": 7452,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1426": {
									"entryPoint": 5434,
									"id": 1426,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1494": {
									"entryPoint": 7704,
									"id": 1494,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3111": {
									"entryPoint": 6914,
									"id": 3111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1408": {
									"entryPoint": 8262,
									"id": 1408,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 9218,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2173": {
									"entryPoint": 9714,
									"id": 2173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 7246,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 6684,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 5452,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 8181,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_customTransfer_3009": {
									"entryPoint": 5546,
									"id": 3009,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": 5813,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getERC20Storage_978": {
									"entryPoint": 5388,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": 7381,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 5852,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": 9774,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1375": {
									"entryPoint": 7480,
									"id": 1375,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1571": {
									"entryPoint": 5427,
									"id": 1571,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_904": {
									"entryPoint": 7607,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_877": {
									"entryPoint": 5472,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_888": {
									"entryPoint": 8389,
									"id": 888,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2547": {
									"entryPoint": 9945,
									"id": 2547,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 6100,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1953": {
									"entryPoint": 9385,
									"id": 1953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1250": {
									"entryPoint": 6444,
									"id": 1250,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_920": {
									"entryPoint": 6348,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1342": {
									"entryPoint": 8462,
									"id": 1342,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 6960,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@accumulatedFees_2740": {
									"entryPoint": 3604,
									"id": 2740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_1147": {
									"entryPoint": 4987,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1171": {
									"entryPoint": 2585,
									"id": 1171,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1099": {
									"entryPoint": 3630,
									"id": 1099,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnRate_2736": {
									"entryPoint": 4824,
									"id": 2736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1063": {
									"entryPoint": 2877,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feeRecipient_2738": {
									"entryPoint": 3075,
									"id": 2738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_2465": {
									"entryPoint": 9586,
									"id": 2465,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2605": {
									"entryPoint": 9376,
									"id": 2605,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1926": {
									"entryPoint": 9021,
									"id": 1926,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 2801,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 2843,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 4447,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2830": {
									"entryPoint": 3713,
									"id": 2830,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@name_1038": {
									"entryPoint": 2427,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftStakingModule_2752": {
									"entryPoint": 3567,
									"id": 2752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_3091": {
									"entryPoint": 4316,
									"id": 3091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_865": {
									"entryPoint": 3610,
									"id": 865,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_688": {
									"entryPoint": 3518,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_232": {
									"entryPoint": 2899,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 4947,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBurnRate_3081": {
									"entryPoint": 2642,
									"id": 3081,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNFTStakingModule_2856": {
									"entryPoint": 5167,
									"id": 2856,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStakingModule_2843": {
									"entryPoint": 4830,
									"id": 2843,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTransferFee_3064": {
									"entryPoint": 4369,
									"id": 3064,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVestingModule_2869": {
									"entryPoint": 3370,
									"id": 2869,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingModule_2750": {
									"entryPoint": 3481,
									"id": 2750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1628": {
									"entryPoint": 5283,
									"id": 1628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 2306,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1054": {
									"entryPoint": 4560,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1079": {
									"entryPoint": 2619,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFee_2734": {
									"entryPoint": 4761,
									"id": 2734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_2931": {
									"entryPoint": 2720,
									"id": 2931,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2891": {
									"entryPoint": 4724,
									"id": 2891,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_3101": {
									"entryPoint": 3022,
									"id": 3101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1989": {
									"entryPoint": 9104,
									"id": 1989,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 3450,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2505": {
									"entryPoint": 9804,
									"id": 2505,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestingModule_2754": {
									"entryPoint": 4910,
									"id": 2754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFees_3047": {
									"entryPoint": 3112,
									"id": 3047,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 11240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 10750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 12655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 11305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 11553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 10770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 12675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 10853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 10115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address": {
									"entryPoint": 11598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 10813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 12198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 12718,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12861,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 10828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 12213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 11178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 12914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 13181,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 12128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 12137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 13147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 12165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 13040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 13318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10235,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 12932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 13291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 11103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 12156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 13263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 13073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 12947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 13251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 13123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 12757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 12342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c": {
									"entryPoint": 12024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 12238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 12959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 13082,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 10728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 13119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26768:20",
										"nodeType": "YulBlock",
										"src": "0:26768:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:20",
													"nodeType": "YulBlock",
													"src": "47:35:20",
													"statements": [
														{
															"nativeSrc": "57:19:20",
															"nodeType": "YulAssignment",
															"src": "57:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:20",
																		"nodeType": "YulLiteral",
																		"src": "73:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:20"
																},
																"nativeSrc": "67:9:20",
																"nodeType": "YulFunctionCall",
																"src": "67:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:20",
														"nodeType": "YulTypedName",
														"src": "40:6:20",
														"type": ""
													}
												],
												"src": "7:75:20"
											},
											{
												"body": {
													"nativeSrc": "177:28:20",
													"nodeType": "YulBlock",
													"src": "177:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:20",
																		"nodeType": "YulLiteral",
																		"src": "194:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:20",
																		"nodeType": "YulLiteral",
																		"src": "197:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:20"
																},
																"nativeSrc": "187:12:20",
																"nodeType": "YulFunctionCall",
																"src": "187:12:20"
															},
															"nativeSrc": "187:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:20"
											},
											{
												"body": {
													"nativeSrc": "300:28:20",
													"nodeType": "YulBlock",
													"src": "300:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:20",
																		"nodeType": "YulLiteral",
																		"src": "317:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:20",
																		"nodeType": "YulLiteral",
																		"src": "320:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:20"
																},
																"nativeSrc": "310:12:20",
																"nodeType": "YulFunctionCall",
																"src": "310:12:20"
															},
															"nativeSrc": "310:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:20"
											},
											{
												"body": {
													"nativeSrc": "378:105:20",
													"nodeType": "YulBlock",
													"src": "378:105:20",
													"statements": [
														{
															"nativeSrc": "388:89:20",
															"nodeType": "YulAssignment",
															"src": "388:89:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:20",
																		"nodeType": "YulLiteral",
																		"src": "410:66:20",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:20"
																},
																"nativeSrc": "399:78:20",
																"nodeType": "YulFunctionCall",
																"src": "399:78:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:20",
														"nodeType": "YulTypedName",
														"src": "360:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:20",
														"nodeType": "YulTypedName",
														"src": "370:7:20",
														"type": ""
													}
												],
												"src": "334:149:20"
											},
											{
												"body": {
													"nativeSrc": "531:78:20",
													"nodeType": "YulBlock",
													"src": "531:78:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:20",
																"nodeType": "YulBlock",
																"src": "587:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:20",
																					"nodeType": "YulLiteral",
																					"src": "596:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:20",
																					"nodeType": "YulLiteral",
																					"src": "599:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:20"
																			},
																			"nativeSrc": "589:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:20"
																		},
																		"nativeSrc": "589:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:20",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:20"
																				},
																				"nativeSrc": "561:23:20",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:20"
																		},
																		"nativeSrc": "551:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:20"
																},
																"nativeSrc": "544:42:20",
																"nodeType": "YulFunctionCall",
																"src": "544:42:20"
															},
															"nativeSrc": "541:62:20",
															"nodeType": "YulIf",
															"src": "541:62:20"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:20",
														"nodeType": "YulTypedName",
														"src": "524:5:20",
														"type": ""
													}
												],
												"src": "489:120:20"
											},
											{
												"body": {
													"nativeSrc": "666:86:20",
													"nodeType": "YulBlock",
													"src": "666:86:20",
													"statements": [
														{
															"nativeSrc": "676:29:20",
															"nodeType": "YulAssignment",
															"src": "676:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:20"
																},
																"nativeSrc": "685:20:20",
																"nodeType": "YulFunctionCall",
																"src": "685:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:20"
																},
																"nativeSrc": "714:32:20",
																"nodeType": "YulFunctionCall",
																"src": "714:32:20"
															},
															"nativeSrc": "714:32:20",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:20"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:20",
														"nodeType": "YulTypedName",
														"src": "644:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:20",
														"nodeType": "YulTypedName",
														"src": "652:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:20",
														"nodeType": "YulTypedName",
														"src": "660:5:20",
														"type": ""
													}
												],
												"src": "615:137:20"
											},
											{
												"body": {
													"nativeSrc": "823:262:20",
													"nodeType": "YulBlock",
													"src": "823:262:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:20",
																"nodeType": "YulBlock",
																"src": "869:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:20"
																			},
																			"nativeSrc": "871:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:20"
																		},
																		"nativeSrc": "871:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:20"
																		},
																		"nativeSrc": "840:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:20",
																		"nodeType": "YulLiteral",
																		"src": "865:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:20"
																},
																"nativeSrc": "836:32:20",
																"nodeType": "YulFunctionCall",
																"src": "836:32:20"
															},
															"nativeSrc": "833:119:20",
															"nodeType": "YulIf",
															"src": "833:119:20"
														},
														{
															"nativeSrc": "962:116:20",
															"nodeType": "YulBlock",
															"src": "962:116:20",
															"statements": [
																{
																	"nativeSrc": "977:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:20",
																		"nodeType": "YulLiteral",
																		"src": "991:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:20",
																			"nodeType": "YulTypedName",
																			"src": "981:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:20",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:20"
																				},
																				"nativeSrc": "1036:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:20",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:20"
																		},
																		"nativeSrc": "1016:52:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:20",
														"nodeType": "YulTypedName",
														"src": "793:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:20",
														"nodeType": "YulTypedName",
														"src": "804:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:20",
														"nodeType": "YulTypedName",
														"src": "816:6:20",
														"type": ""
													}
												],
												"src": "758:327:20"
											},
											{
												"body": {
													"nativeSrc": "1133:48:20",
													"nodeType": "YulBlock",
													"src": "1133:48:20",
													"statements": [
														{
															"nativeSrc": "1143:32:20",
															"nodeType": "YulAssignment",
															"src": "1143:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:20"
																		},
																		"nativeSrc": "1161:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:20"
																},
																"nativeSrc": "1154:21:20",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:20",
														"nodeType": "YulTypedName",
														"src": "1115:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:20",
														"nodeType": "YulTypedName",
														"src": "1125:7:20",
														"type": ""
													}
												],
												"src": "1091:90:20"
											},
											{
												"body": {
													"nativeSrc": "1246:50:20",
													"nodeType": "YulBlock",
													"src": "1246:50:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:20",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:20"
																		},
																		"nativeSrc": "1268:21:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:20"
																},
																"nativeSrc": "1256:34:20",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:20"
															},
															"nativeSrc": "1256:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:20"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:20",
														"nodeType": "YulTypedName",
														"src": "1234:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:20",
														"nodeType": "YulTypedName",
														"src": "1241:3:20",
														"type": ""
													}
												],
												"src": "1187:109:20"
											},
											{
												"body": {
													"nativeSrc": "1394:118:20",
													"nodeType": "YulBlock",
													"src": "1394:118:20",
													"statements": [
														{
															"nativeSrc": "1404:26:20",
															"nodeType": "YulAssignment",
															"src": "1404:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:20"
																},
																"nativeSrc": "1412:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:20"
																		},
																		"nativeSrc": "1487:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:20"
																},
																"nativeSrc": "1440:65:20",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:20"
															},
															"nativeSrc": "1440:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:20",
														"nodeType": "YulTypedName",
														"src": "1366:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:20",
														"nodeType": "YulTypedName",
														"src": "1378:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:20",
														"nodeType": "YulTypedName",
														"src": "1389:4:20",
														"type": ""
													}
												],
												"src": "1302:210:20"
											},
											{
												"body": {
													"nativeSrc": "1577:40:20",
													"nodeType": "YulBlock",
													"src": "1577:40:20",
													"statements": [
														{
															"nativeSrc": "1588:22:20",
															"nodeType": "YulAssignment",
															"src": "1588:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:20"
																},
																"nativeSrc": "1598:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:20",
														"nodeType": "YulTypedName",
														"src": "1560:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:20",
														"nodeType": "YulTypedName",
														"src": "1570:6:20",
														"type": ""
													}
												],
												"src": "1518:99:20"
											},
											{
												"body": {
													"nativeSrc": "1719:73:20",
													"nodeType": "YulBlock",
													"src": "1719:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:20"
																},
																"nativeSrc": "1729:19:20",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:20"
															},
															"nativeSrc": "1729:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:20"
														},
														{
															"nativeSrc": "1757:29:20",
															"nodeType": "YulAssignment",
															"src": "1757:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:20",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:20"
																},
																"nativeSrc": "1772:14:20",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:20",
														"nodeType": "YulTypedName",
														"src": "1691:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:20",
														"nodeType": "YulTypedName",
														"src": "1696:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:20",
														"nodeType": "YulTypedName",
														"src": "1707:11:20",
														"type": ""
													}
												],
												"src": "1623:169:20"
											},
											{
												"body": {
													"nativeSrc": "1860:77:20",
													"nodeType": "YulBlock",
													"src": "1860:77:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:20"
																},
																"nativeSrc": "1871:23:20",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:20"
															},
															"nativeSrc": "1871:23:20",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:20"
																		},
																		"nativeSrc": "1910:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:20"
																},
																"nativeSrc": "1903:27:20",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:20"
															},
															"nativeSrc": "1903:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:20",
														"nodeType": "YulTypedName",
														"src": "1842:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:20",
														"nodeType": "YulTypedName",
														"src": "1847:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:20",
														"nodeType": "YulTypedName",
														"src": "1852:6:20",
														"type": ""
													}
												],
												"src": "1798:139:20"
											},
											{
												"body": {
													"nativeSrc": "1991:54:20",
													"nodeType": "YulBlock",
													"src": "1991:54:20",
													"statements": [
														{
															"nativeSrc": "2001:38:20",
															"nodeType": "YulAssignment",
															"src": "2001:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:20"
																		},
																		"nativeSrc": "2015:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:20"
																		},
																		"nativeSrc": "2031:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:20"
																},
																"nativeSrc": "2011:28:20",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:20",
														"nodeType": "YulTypedName",
														"src": "1974:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:20",
														"nodeType": "YulTypedName",
														"src": "1984:6:20",
														"type": ""
													}
												],
												"src": "1943:102:20"
											},
											{
												"body": {
													"nativeSrc": "2143:285:20",
													"nodeType": "YulBlock",
													"src": "2143:285:20",
													"statements": [
														{
															"nativeSrc": "2153:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:20"
																},
																"nativeSrc": "2167:39:20",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:20",
															"nodeType": "YulAssignment",
															"src": "2215:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:20"
																},
																"nativeSrc": "2222:71:20",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:20",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:20"
																		},
																		"nativeSrc": "2337:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:20"
																},
																"nativeSrc": "2302:65:20",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:20"
															},
															"nativeSrc": "2302:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:20"
														},
														{
															"nativeSrc": "2376:46:20",
															"nodeType": "YulAssignment",
															"src": "2376:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:20"
																		},
																		"nativeSrc": "2392:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:20"
																},
																"nativeSrc": "2383:39:20",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:20",
														"nodeType": "YulTypedName",
														"src": "2124:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:20",
														"nodeType": "YulTypedName",
														"src": "2131:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:20",
														"nodeType": "YulTypedName",
														"src": "2139:3:20",
														"type": ""
													}
												],
												"src": "2051:377:20"
											},
											{
												"body": {
													"nativeSrc": "2552:195:20",
													"nodeType": "YulBlock",
													"src": "2552:195:20",
													"statements": [
														{
															"nativeSrc": "2562:26:20",
															"nodeType": "YulAssignment",
															"src": "2562:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:20"
																},
																"nativeSrc": "2570:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:20",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:20"
																		},
																		"nativeSrc": "2605:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:20"
																		},
																		"nativeSrc": "2624:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:20"
																},
																"nativeSrc": "2598:47:20",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:20"
															},
															"nativeSrc": "2598:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:20"
														},
														{
															"nativeSrc": "2654:86:20",
															"nodeType": "YulAssignment",
															"src": "2654:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:20"
																},
																"nativeSrc": "2662:78:20",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:20",
														"nodeType": "YulTypedName",
														"src": "2524:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:20",
														"nodeType": "YulTypedName",
														"src": "2536:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:20",
														"nodeType": "YulTypedName",
														"src": "2547:4:20",
														"type": ""
													}
												],
												"src": "2434:313:20"
											},
											{
												"body": {
													"nativeSrc": "2798:81:20",
													"nodeType": "YulBlock",
													"src": "2798:81:20",
													"statements": [
														{
															"nativeSrc": "2808:65:20",
															"nodeType": "YulAssignment",
															"src": "2808:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:20",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:20"
																},
																"nativeSrc": "2819:54:20",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:20",
														"nodeType": "YulTypedName",
														"src": "2780:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:20",
														"nodeType": "YulTypedName",
														"src": "2790:7:20",
														"type": ""
													}
												],
												"src": "2753:126:20"
											},
											{
												"body": {
													"nativeSrc": "2930:51:20",
													"nodeType": "YulBlock",
													"src": "2930:51:20",
													"statements": [
														{
															"nativeSrc": "2940:35:20",
															"nodeType": "YulAssignment",
															"src": "2940:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:20"
																},
																"nativeSrc": "2951:24:20",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:20",
														"nodeType": "YulTypedName",
														"src": "2912:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:20",
														"nodeType": "YulTypedName",
														"src": "2922:7:20",
														"type": ""
													}
												],
												"src": "2885:96:20"
											},
											{
												"body": {
													"nativeSrc": "3030:79:20",
													"nodeType": "YulBlock",
													"src": "3030:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:20",
																"nodeType": "YulBlock",
																"src": "3087:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:20"
																			},
																			"nativeSrc": "3089:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:20"
																		},
																		"nativeSrc": "3089:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:20"
																				},
																				"nativeSrc": "3060:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:20"
																		},
																		"nativeSrc": "3050:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:20"
																},
																"nativeSrc": "3043:43:20",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:20"
															},
															"nativeSrc": "3040:63:20",
															"nodeType": "YulIf",
															"src": "3040:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:20",
														"nodeType": "YulTypedName",
														"src": "3023:5:20",
														"type": ""
													}
												],
												"src": "2987:122:20"
											},
											{
												"body": {
													"nativeSrc": "3167:87:20",
													"nodeType": "YulBlock",
													"src": "3167:87:20",
													"statements": [
														{
															"nativeSrc": "3177:29:20",
															"nodeType": "YulAssignment",
															"src": "3177:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:20"
																},
																"nativeSrc": "3186:20:20",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:20"
																},
																"nativeSrc": "3215:33:20",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:20"
															},
															"nativeSrc": "3215:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:20",
														"nodeType": "YulTypedName",
														"src": "3145:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:20",
														"nodeType": "YulTypedName",
														"src": "3153:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:20",
														"nodeType": "YulTypedName",
														"src": "3161:5:20",
														"type": ""
													}
												],
												"src": "3115:139:20"
											},
											{
												"body": {
													"nativeSrc": "3305:32:20",
													"nodeType": "YulBlock",
													"src": "3305:32:20",
													"statements": [
														{
															"nativeSrc": "3315:16:20",
															"nodeType": "YulAssignment",
															"src": "3315:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:20",
																"nodeType": "YulIdentifier",
																"src": "3326:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:20",
														"nodeType": "YulTypedName",
														"src": "3287:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:20",
														"nodeType": "YulTypedName",
														"src": "3297:7:20",
														"type": ""
													}
												],
												"src": "3260:77:20"
											},
											{
												"body": {
													"nativeSrc": "3386:79:20",
													"nodeType": "YulBlock",
													"src": "3386:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:20",
																"nodeType": "YulBlock",
																"src": "3443:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:20"
																			},
																			"nativeSrc": "3445:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:20"
																		},
																		"nativeSrc": "3445:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:20"
																				},
																				"nativeSrc": "3416:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:20"
																		},
																		"nativeSrc": "3406:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:20"
																},
																"nativeSrc": "3399:43:20",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:20"
															},
															"nativeSrc": "3396:63:20",
															"nodeType": "YulIf",
															"src": "3396:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:20",
														"nodeType": "YulTypedName",
														"src": "3379:5:20",
														"type": ""
													}
												],
												"src": "3343:122:20"
											},
											{
												"body": {
													"nativeSrc": "3523:87:20",
													"nodeType": "YulBlock",
													"src": "3523:87:20",
													"statements": [
														{
															"nativeSrc": "3533:29:20",
															"nodeType": "YulAssignment",
															"src": "3533:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:20"
																},
																"nativeSrc": "3542:20:20",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:20"
																},
																"nativeSrc": "3571:33:20",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:20"
															},
															"nativeSrc": "3571:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:20",
														"nodeType": "YulTypedName",
														"src": "3501:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:20",
														"nodeType": "YulTypedName",
														"src": "3509:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:20",
														"nodeType": "YulTypedName",
														"src": "3517:5:20",
														"type": ""
													}
												],
												"src": "3471:139:20"
											},
											{
												"body": {
													"nativeSrc": "3699:391:20",
													"nodeType": "YulBlock",
													"src": "3699:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:20",
																"nodeType": "YulBlock",
																"src": "3745:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:20"
																			},
																			"nativeSrc": "3747:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:20"
																		},
																		"nativeSrc": "3747:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:20"
																		},
																		"nativeSrc": "3716:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:20"
																},
																"nativeSrc": "3712:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:20"
															},
															"nativeSrc": "3709:119:20",
															"nodeType": "YulIf",
															"src": "3709:119:20"
														},
														{
															"nativeSrc": "3838:117:20",
															"nodeType": "YulBlock",
															"src": "3838:117:20",
															"statements": [
																{
																	"nativeSrc": "3853:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:20"
																				},
																				"nativeSrc": "3913:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:20"
																		},
																		"nativeSrc": "3892:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:20",
															"nodeType": "YulBlock",
															"src": "3965:118:20",
															"statements": [
																{
																	"nativeSrc": "3980:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:20"
																				},
																				"nativeSrc": "4041:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:20"
																		},
																		"nativeSrc": "4020:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:20",
														"nodeType": "YulTypedName",
														"src": "3661:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:20",
														"nodeType": "YulTypedName",
														"src": "3672:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:20",
														"nodeType": "YulTypedName",
														"src": "3684:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:20",
														"nodeType": "YulTypedName",
														"src": "3692:6:20",
														"type": ""
													}
												],
												"src": "3616:474:20"
											},
											{
												"body": {
													"nativeSrc": "4161:53:20",
													"nodeType": "YulBlock",
													"src": "4161:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:20"
																		},
																		"nativeSrc": "4183:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:20"
																},
																"nativeSrc": "4171:37:20",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:20"
															},
															"nativeSrc": "4171:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:20",
														"nodeType": "YulTypedName",
														"src": "4149:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:20",
														"nodeType": "YulTypedName",
														"src": "4156:3:20",
														"type": ""
													}
												],
												"src": "4096:118:20"
											},
											{
												"body": {
													"nativeSrc": "4318:124:20",
													"nodeType": "YulBlock",
													"src": "4318:124:20",
													"statements": [
														{
															"nativeSrc": "4328:26:20",
															"nodeType": "YulAssignment",
															"src": "4328:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:20"
																},
																"nativeSrc": "4336:18:20",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:20",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:20"
																		},
																		"nativeSrc": "4417:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:20"
																},
																"nativeSrc": "4364:71:20",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:20"
															},
															"nativeSrc": "4364:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:20",
														"nodeType": "YulTypedName",
														"src": "4290:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:20",
														"nodeType": "YulTypedName",
														"src": "4302:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:20",
														"nodeType": "YulTypedName",
														"src": "4313:4:20",
														"type": ""
													}
												],
												"src": "4220:222:20"
											},
											{
												"body": {
													"nativeSrc": "4514:263:20",
													"nodeType": "YulBlock",
													"src": "4514:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4560:83:20",
																"nodeType": "YulBlock",
																"src": "4560:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4562:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "4562:77:20"
																			},
																			"nativeSrc": "4562:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4562:79:20"
																		},
																		"nativeSrc": "4562:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4562:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4535:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4535:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4544:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4531:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:20"
																		},
																		"nativeSrc": "4531:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4531:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4556:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4527:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:20"
																},
																"nativeSrc": "4527:32:20",
																"nodeType": "YulFunctionCall",
																"src": "4527:32:20"
															},
															"nativeSrc": "4524:119:20",
															"nodeType": "YulIf",
															"src": "4524:119:20"
														},
														{
															"nativeSrc": "4653:117:20",
															"nodeType": "YulBlock",
															"src": "4653:117:20",
															"statements": [
																{
																	"nativeSrc": "4668:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4668:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4682:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4682:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4672:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4672:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:20"
																				},
																				"nativeSrc": "4728:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:20"
																		},
																		"nativeSrc": "4707:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4697:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4448:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4484:9:20",
														"nodeType": "YulTypedName",
														"src": "4484:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4495:7:20",
														"nodeType": "YulTypedName",
														"src": "4495:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4507:6:20",
														"nodeType": "YulTypedName",
														"src": "4507:6:20",
														"type": ""
													}
												],
												"src": "4448:329:20"
											},
											{
												"body": {
													"nativeSrc": "4883:519:20",
													"nodeType": "YulBlock",
													"src": "4883:519:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:20",
																"nodeType": "YulBlock",
																"src": "4929:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:20"
																			},
																			"nativeSrc": "4931:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:20"
																		},
																		"nativeSrc": "4931:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:20"
																		},
																		"nativeSrc": "4900:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:20"
																},
																"nativeSrc": "4896:32:20",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:20"
															},
															"nativeSrc": "4893:119:20",
															"nodeType": "YulIf",
															"src": "4893:119:20"
														},
														{
															"nativeSrc": "5022:117:20",
															"nodeType": "YulBlock",
															"src": "5022:117:20",
															"statements": [
																{
																	"nativeSrc": "5037:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:20",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:20",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:20"
																				},
																				"nativeSrc": "5097:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:20"
																		},
																		"nativeSrc": "5076:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:20",
															"nodeType": "YulBlock",
															"src": "5149:118:20",
															"statements": [
																{
																	"nativeSrc": "5164:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:20",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:20",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:20"
																				},
																				"nativeSrc": "5225:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:20"
																		},
																		"nativeSrc": "5204:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:20",
															"nodeType": "YulBlock",
															"src": "5277:118:20",
															"statements": [
																{
																	"nativeSrc": "5292:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:20",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:20",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:20"
																				},
																				"nativeSrc": "5353:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:20"
																		},
																		"nativeSrc": "5332:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:20",
														"nodeType": "YulTypedName",
														"src": "4837:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:20",
														"nodeType": "YulTypedName",
														"src": "4848:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:20",
														"nodeType": "YulTypedName",
														"src": "4860:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:20",
														"nodeType": "YulTypedName",
														"src": "4868:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:20",
														"nodeType": "YulTypedName",
														"src": "4876:6:20",
														"type": ""
													}
												],
												"src": "4783:619:20"
											},
											{
												"body": {
													"nativeSrc": "5453:32:20",
													"nodeType": "YulBlock",
													"src": "5453:32:20",
													"statements": [
														{
															"nativeSrc": "5463:16:20",
															"nodeType": "YulAssignment",
															"src": "5463:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:20",
																"nodeType": "YulIdentifier",
																"src": "5474:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:20",
														"nodeType": "YulTypedName",
														"src": "5435:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:20",
														"nodeType": "YulTypedName",
														"src": "5445:7:20",
														"type": ""
													}
												],
												"src": "5408:77:20"
											},
											{
												"body": {
													"nativeSrc": "5534:79:20",
													"nodeType": "YulBlock",
													"src": "5534:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:20",
																"nodeType": "YulBlock",
																"src": "5591:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:20"
																			},
																			"nativeSrc": "5593:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:20"
																		},
																		"nativeSrc": "5593:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:20"
																				},
																				"nativeSrc": "5564:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:20"
																		},
																		"nativeSrc": "5554:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:20"
																},
																"nativeSrc": "5547:43:20",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:20"
															},
															"nativeSrc": "5544:63:20",
															"nodeType": "YulIf",
															"src": "5544:63:20"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:20",
														"nodeType": "YulTypedName",
														"src": "5527:5:20",
														"type": ""
													}
												],
												"src": "5491:122:20"
											},
											{
												"body": {
													"nativeSrc": "5671:87:20",
													"nodeType": "YulBlock",
													"src": "5671:87:20",
													"statements": [
														{
															"nativeSrc": "5681:29:20",
															"nodeType": "YulAssignment",
															"src": "5681:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:20"
																},
																"nativeSrc": "5690:20:20",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:20"
																},
																"nativeSrc": "5719:33:20",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:20"
															},
															"nativeSrc": "5719:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:20",
														"nodeType": "YulTypedName",
														"src": "5649:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:20",
														"nodeType": "YulTypedName",
														"src": "5657:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:20",
														"nodeType": "YulTypedName",
														"src": "5665:5:20",
														"type": ""
													}
												],
												"src": "5619:139:20"
											},
											{
												"body": {
													"nativeSrc": "5830:263:20",
													"nodeType": "YulBlock",
													"src": "5830:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "5876:83:20",
																"nodeType": "YulBlock",
																"src": "5876:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5878:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "5878:77:20"
																			},
																			"nativeSrc": "5878:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5878:79:20"
																		},
																		"nativeSrc": "5878:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5860:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5847:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:20"
																		},
																		"nativeSrc": "5847:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5843:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:20"
																},
																"nativeSrc": "5843:32:20",
																"nodeType": "YulFunctionCall",
																"src": "5843:32:20"
															},
															"nativeSrc": "5840:119:20",
															"nodeType": "YulIf",
															"src": "5840:119:20"
														},
														{
															"nativeSrc": "5969:117:20",
															"nodeType": "YulBlock",
															"src": "5969:117:20",
															"statements": [
																{
																	"nativeSrc": "5984:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:20",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6013:63:20",
																	"nodeType": "YulAssignment",
																	"src": "6013:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6048:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6048:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6059:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6059:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6044:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:20"
																				},
																				"nativeSrc": "6044:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6068:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6023:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "6023:20:20"
																		},
																		"nativeSrc": "6023:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6013:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "6013:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5764:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5800:9:20",
														"nodeType": "YulTypedName",
														"src": "5800:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5811:7:20",
														"nodeType": "YulTypedName",
														"src": "5811:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5823:6:20",
														"nodeType": "YulTypedName",
														"src": "5823:6:20",
														"type": ""
													}
												],
												"src": "5764:329:20"
											},
											{
												"body": {
													"nativeSrc": "6164:53:20",
													"nodeType": "YulBlock",
													"src": "6164:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6181:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6204:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6204:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6186:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "6186:17:20"
																		},
																		"nativeSrc": "6186:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:20"
																},
																"nativeSrc": "6174:37:20",
																"nodeType": "YulFunctionCall",
																"src": "6174:37:20"
															},
															"nativeSrc": "6174:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "6174:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6099:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:20",
														"nodeType": "YulTypedName",
														"src": "6152:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6159:3:20",
														"nodeType": "YulTypedName",
														"src": "6159:3:20",
														"type": ""
													}
												],
												"src": "6099:118:20"
											},
											{
												"body": {
													"nativeSrc": "6321:124:20",
													"nodeType": "YulBlock",
													"src": "6321:124:20",
													"statements": [
														{
															"nativeSrc": "6331:26:20",
															"nodeType": "YulAssignment",
															"src": "6331:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6339:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:20"
																},
																"nativeSrc": "6339:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6339:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6331:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6411:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:20",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:20"
																		},
																		"nativeSrc": "6420:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6367:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "6367:43:20"
																},
																"nativeSrc": "6367:71:20",
																"nodeType": "YulFunctionCall",
																"src": "6367:71:20"
															},
															"nativeSrc": "6367:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "6367:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6223:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:20",
														"nodeType": "YulTypedName",
														"src": "6293:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6305:6:20",
														"nodeType": "YulTypedName",
														"src": "6305:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6316:4:20",
														"nodeType": "YulTypedName",
														"src": "6316:4:20",
														"type": ""
													}
												],
												"src": "6223:222:20"
											},
											{
												"body": {
													"nativeSrc": "6534:391:20",
													"nodeType": "YulBlock",
													"src": "6534:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:20",
																"nodeType": "YulBlock",
																"src": "6580:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:20"
																			},
																			"nativeSrc": "6582:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:20"
																		},
																		"nativeSrc": "6582:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:20"
																		},
																		"nativeSrc": "6551:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:20"
																},
																"nativeSrc": "6547:32:20",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:20"
															},
															"nativeSrc": "6544:119:20",
															"nodeType": "YulIf",
															"src": "6544:119:20"
														},
														{
															"nativeSrc": "6673:117:20",
															"nodeType": "YulBlock",
															"src": "6673:117:20",
															"statements": [
																{
																	"nativeSrc": "6688:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:20",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:20",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:20"
																				},
																				"nativeSrc": "6748:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:20"
																		},
																		"nativeSrc": "6727:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:20",
															"nodeType": "YulBlock",
															"src": "6800:118:20",
															"statements": [
																{
																	"nativeSrc": "6815:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:20",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:20",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:20"
																				},
																				"nativeSrc": "6876:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:20"
																		},
																		"nativeSrc": "6855:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:20",
														"nodeType": "YulTypedName",
														"src": "6496:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:20",
														"nodeType": "YulTypedName",
														"src": "6507:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:20",
														"nodeType": "YulTypedName",
														"src": "6519:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:20",
														"nodeType": "YulTypedName",
														"src": "6527:6:20",
														"type": ""
													}
												],
												"src": "6451:474:20"
											},
											{
												"body": {
													"nativeSrc": "6974:43:20",
													"nodeType": "YulBlock",
													"src": "6974:43:20",
													"statements": [
														{
															"nativeSrc": "6984:27:20",
															"nodeType": "YulAssignment",
															"src": "6984:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:20"
																},
																"nativeSrc": "6995:16:20",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:20",
														"nodeType": "YulTypedName",
														"src": "6956:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:20",
														"nodeType": "YulTypedName",
														"src": "6966:7:20",
														"type": ""
													}
												],
												"src": "6931:86:20"
											},
											{
												"body": {
													"nativeSrc": "7084:51:20",
													"nodeType": "YulBlock",
													"src": "7084:51:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:20",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:20"
																		},
																		"nativeSrc": "7106:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:20"
																},
																"nativeSrc": "7094:35:20",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:20"
															},
															"nativeSrc": "7094:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:20"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:20",
														"nodeType": "YulTypedName",
														"src": "7072:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:20",
														"nodeType": "YulTypedName",
														"src": "7079:3:20",
														"type": ""
													}
												],
												"src": "7023:112:20"
											},
											{
												"body": {
													"nativeSrc": "7235:120:20",
													"nodeType": "YulBlock",
													"src": "7235:120:20",
													"statements": [
														{
															"nativeSrc": "7245:26:20",
															"nodeType": "YulAssignment",
															"src": "7245:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:20"
																},
																"nativeSrc": "7253:18:20",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:20",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:20"
																		},
																		"nativeSrc": "7330:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:20"
																},
																"nativeSrc": "7281:67:20",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:20"
															},
															"nativeSrc": "7281:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:20",
														"nodeType": "YulTypedName",
														"src": "7207:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:20",
														"nodeType": "YulTypedName",
														"src": "7219:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:20",
														"nodeType": "YulTypedName",
														"src": "7230:4:20",
														"type": ""
													}
												],
												"src": "7141:214:20"
											},
											{
												"body": {
													"nativeSrc": "7426:53:20",
													"nodeType": "YulBlock",
													"src": "7426:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7443:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7443:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7466:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7466:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7448:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "7448:17:20"
																		},
																		"nativeSrc": "7448:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7448:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:20"
																},
																"nativeSrc": "7436:37:20",
																"nodeType": "YulFunctionCall",
																"src": "7436:37:20"
															},
															"nativeSrc": "7436:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "7436:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7361:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7414:5:20",
														"nodeType": "YulTypedName",
														"src": "7414:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7421:3:20",
														"nodeType": "YulTypedName",
														"src": "7421:3:20",
														"type": ""
													}
												],
												"src": "7361:118:20"
											},
											{
												"body": {
													"nativeSrc": "7583:124:20",
													"nodeType": "YulBlock",
													"src": "7583:124:20",
													"statements": [
														{
															"nativeSrc": "7593:26:20",
															"nodeType": "YulAssignment",
															"src": "7593:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7605:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7605:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7616:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7616:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7601:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7601:3:20"
																},
																"nativeSrc": "7601:18:20",
																"nodeType": "YulFunctionCall",
																"src": "7601:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7593:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7593:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7673:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7673:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7686:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7697:1:20",
																				"nodeType": "YulLiteral",
																				"src": "7697:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7682:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:20"
																		},
																		"nativeSrc": "7682:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7682:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7629:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "7629:43:20"
																},
																"nativeSrc": "7629:71:20",
																"nodeType": "YulFunctionCall",
																"src": "7629:71:20"
															},
															"nativeSrc": "7629:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "7629:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7485:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7555:9:20",
														"nodeType": "YulTypedName",
														"src": "7555:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7567:6:20",
														"nodeType": "YulTypedName",
														"src": "7567:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7578:4:20",
														"nodeType": "YulTypedName",
														"src": "7578:4:20",
														"type": ""
													}
												],
												"src": "7485:222:20"
											},
											{
												"body": {
													"nativeSrc": "7779:263:20",
													"nodeType": "YulBlock",
													"src": "7779:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "7825:83:20",
																"nodeType": "YulBlock",
																"src": "7825:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7827:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "7827:77:20"
																			},
																			"nativeSrc": "7827:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7827:79:20"
																		},
																		"nativeSrc": "7827:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7827:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7800:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "7800:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7809:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7809:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7796:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:20"
																		},
																		"nativeSrc": "7796:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7796:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7821:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7821:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7792:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7792:3:20"
																},
																"nativeSrc": "7792:32:20",
																"nodeType": "YulFunctionCall",
																"src": "7792:32:20"
															},
															"nativeSrc": "7789:119:20",
															"nodeType": "YulIf",
															"src": "7789:119:20"
														},
														{
															"nativeSrc": "7918:117:20",
															"nodeType": "YulBlock",
															"src": "7918:117:20",
															"statements": [
																{
																	"nativeSrc": "7933:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7933:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7947:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7947:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7937:6:20",
																			"nodeType": "YulTypedName",
																			"src": "7937:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7962:63:20",
																	"nodeType": "YulAssignment",
																	"src": "7962:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7997:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "7997:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8008:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "8008:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7993:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7993:3:20"
																				},
																				"nativeSrc": "7993:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7993:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8017:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "8017:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7972:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "7972:20:20"
																		},
																		"nativeSrc": "7972:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7972:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7962:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "7962:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7713:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7749:9:20",
														"nodeType": "YulTypedName",
														"src": "7749:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7760:7:20",
														"nodeType": "YulTypedName",
														"src": "7760:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7772:6:20",
														"nodeType": "YulTypedName",
														"src": "7772:6:20",
														"type": ""
													}
												],
												"src": "7713:329:20"
											},
											{
												"body": {
													"nativeSrc": "8137:28:20",
													"nodeType": "YulBlock",
													"src": "8137:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8154:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8154:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8157:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8157:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8147:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8147:6:20"
																},
																"nativeSrc": "8147:12:20",
																"nodeType": "YulFunctionCall",
																"src": "8147:12:20"
															},
															"nativeSrc": "8147:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "8147:12:20"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8048:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "8048:117:20"
											},
											{
												"body": {
													"nativeSrc": "8260:28:20",
													"nodeType": "YulBlock",
													"src": "8260:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8277:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8277:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8280:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8280:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8270:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:20"
																},
																"nativeSrc": "8270:12:20",
																"nodeType": "YulFunctionCall",
																"src": "8270:12:20"
															},
															"nativeSrc": "8270:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "8270:12:20"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8171:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "8171:117:20"
											},
											{
												"body": {
													"nativeSrc": "8322:152:20",
													"nodeType": "YulBlock",
													"src": "8322:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8339:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8339:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8342:77:20",
																		"nodeType": "YulLiteral",
																		"src": "8342:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8332:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8332:6:20"
																},
																"nativeSrc": "8332:88:20",
																"nodeType": "YulFunctionCall",
																"src": "8332:88:20"
															},
															"nativeSrc": "8332:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "8332:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8436:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8436:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8439:4:20",
																		"nodeType": "YulLiteral",
																		"src": "8439:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8429:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8429:6:20"
																},
																"nativeSrc": "8429:15:20",
																"nodeType": "YulFunctionCall",
																"src": "8429:15:20"
															},
															"nativeSrc": "8429:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "8429:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8460:1:20",
																		"nodeType": "YulLiteral",
																		"src": "8460:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8463:4:20",
																		"nodeType": "YulLiteral",
																		"src": "8463:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8453:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:20"
																},
																"nativeSrc": "8453:15:20",
																"nodeType": "YulFunctionCall",
																"src": "8453:15:20"
															},
															"nativeSrc": "8453:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "8453:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8294:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "8294:180:20"
											},
											{
												"body": {
													"nativeSrc": "8523:238:20",
													"nodeType": "YulBlock",
													"src": "8523:238:20",
													"statements": [
														{
															"nativeSrc": "8533:58:20",
															"nodeType": "YulVariableDeclaration",
															"src": "8533:58:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8555:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8555:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8585:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8585:4:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8563:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "8563:21:20"
																		},
																		"nativeSrc": "8563:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8563:27:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8551:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8551:3:20"
																},
																"nativeSrc": "8551:40:20",
																"nodeType": "YulFunctionCall",
																"src": "8551:40:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8537:10:20",
																	"nodeType": "YulTypedName",
																	"src": "8537:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8702:22:20",
																"nodeType": "YulBlock",
																"src": "8702:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8704:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "8704:16:20"
																			},
																			"nativeSrc": "8704:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8704:18:20"
																		},
																		"nativeSrc": "8704:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8704:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8645:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "8645:10:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8657:18:20",
																				"nodeType": "YulLiteral",
																				"src": "8657:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8642:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "8642:2:20"
																		},
																		"nativeSrc": "8642:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8642:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8681:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "8681:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8693:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8693:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8678:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "8678:2:20"
																		},
																		"nativeSrc": "8678:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8678:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8639:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "8639:2:20"
																},
																"nativeSrc": "8639:62:20",
																"nodeType": "YulFunctionCall",
																"src": "8639:62:20"
															},
															"nativeSrc": "8636:88:20",
															"nodeType": "YulIf",
															"src": "8636:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8740:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8740:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8744:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "8744:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8733:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:20"
																},
																"nativeSrc": "8733:22:20",
																"nodeType": "YulFunctionCall",
																"src": "8733:22:20"
															},
															"nativeSrc": "8733:22:20",
															"nodeType": "YulExpressionStatement",
															"src": "8733:22:20"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8480:281:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8509:6:20",
														"nodeType": "YulTypedName",
														"src": "8509:6:20",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8517:4:20",
														"nodeType": "YulTypedName",
														"src": "8517:4:20",
														"type": ""
													}
												],
												"src": "8480:281:20"
											},
											{
												"body": {
													"nativeSrc": "8808:88:20",
													"nodeType": "YulBlock",
													"src": "8808:88:20",
													"statements": [
														{
															"nativeSrc": "8818:30:20",
															"nodeType": "YulAssignment",
															"src": "8818:30:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8828:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "8828:18:20"
																},
																"nativeSrc": "8828:20:20",
																"nodeType": "YulFunctionCall",
																"src": "8828:20:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8818:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8877:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8877:6:20"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8885:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8885:4:20"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8857:19:20",
																	"nodeType": "YulIdentifier",
																	"src": "8857:19:20"
																},
																"nativeSrc": "8857:33:20",
																"nodeType": "YulFunctionCall",
																"src": "8857:33:20"
															},
															"nativeSrc": "8857:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "8857:33:20"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8767:129:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8792:4:20",
														"nodeType": "YulTypedName",
														"src": "8792:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8801:6:20",
														"nodeType": "YulTypedName",
														"src": "8801:6:20",
														"type": ""
													}
												],
												"src": "8767:129:20"
											},
											{
												"body": {
													"nativeSrc": "8968:241:20",
													"nodeType": "YulBlock",
													"src": "8968:241:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9073:22:20",
																"nodeType": "YulBlock",
																"src": "9073:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9075:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "9075:16:20"
																			},
																			"nativeSrc": "9075:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9075:18:20"
																		},
																		"nativeSrc": "9075:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9075:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9045:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9045:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9053:18:20",
																		"nodeType": "YulLiteral",
																		"src": "9053:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9042:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "9042:2:20"
																},
																"nativeSrc": "9042:30:20",
																"nodeType": "YulFunctionCall",
																"src": "9042:30:20"
															},
															"nativeSrc": "9039:56:20",
															"nodeType": "YulIf",
															"src": "9039:56:20"
														},
														{
															"nativeSrc": "9105:37:20",
															"nodeType": "YulAssignment",
															"src": "9105:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9135:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9135:6:20"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9113:21:20",
																	"nodeType": "YulIdentifier",
																	"src": "9113:21:20"
																},
																"nativeSrc": "9113:29:20",
																"nodeType": "YulFunctionCall",
																"src": "9113:29:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9105:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9105:4:20"
																}
															]
														},
														{
															"nativeSrc": "9179:23:20",
															"nodeType": "YulAssignment",
															"src": "9179:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9191:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "9191:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9197:4:20",
																		"nodeType": "YulLiteral",
																		"src": "9197:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9187:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:20"
																},
																"nativeSrc": "9187:15:20",
																"nodeType": "YulFunctionCall",
																"src": "9187:15:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9179:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9179:4:20"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8902:307:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8952:6:20",
														"nodeType": "YulTypedName",
														"src": "8952:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8963:4:20",
														"nodeType": "YulTypedName",
														"src": "8963:4:20",
														"type": ""
													}
												],
												"src": "8902:307:20"
											},
											{
												"body": {
													"nativeSrc": "9279:84:20",
													"nodeType": "YulBlock",
													"src": "9279:84:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9303:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9303:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9308:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9308:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9313:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9313:6:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9290:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9290:12:20"
																},
																"nativeSrc": "9290:30:20",
																"nodeType": "YulFunctionCall",
																"src": "9290:30:20"
															},
															"nativeSrc": "9290:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "9290:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9340:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "9340:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9345:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9345:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9336:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:20"
																		},
																		"nativeSrc": "9336:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9354:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9354:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9329:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9329:6:20"
																},
																"nativeSrc": "9329:27:20",
																"nodeType": "YulFunctionCall",
																"src": "9329:27:20"
															},
															"nativeSrc": "9329:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "9329:27:20"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9215:148:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9261:3:20",
														"nodeType": "YulTypedName",
														"src": "9261:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9266:3:20",
														"nodeType": "YulTypedName",
														"src": "9266:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9271:6:20",
														"nodeType": "YulTypedName",
														"src": "9271:6:20",
														"type": ""
													}
												],
												"src": "9215:148:20"
											},
											{
												"body": {
													"nativeSrc": "9452:340:20",
													"nodeType": "YulBlock",
													"src": "9452:340:20",
													"statements": [
														{
															"nativeSrc": "9462:74:20",
															"nodeType": "YulAssignment",
															"src": "9462:74:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9528:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9528:6:20"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9487:40:20",
																			"nodeType": "YulIdentifier",
																			"src": "9487:40:20"
																		},
																		"nativeSrc": "9487:48:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9487:48:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9471:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "9471:15:20"
																},
																"nativeSrc": "9471:65:20",
																"nodeType": "YulFunctionCall",
																"src": "9471:65:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9462:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9462:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9552:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9552:5:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9559:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9559:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9545:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:20"
																},
																"nativeSrc": "9545:21:20",
																"nodeType": "YulFunctionCall",
																"src": "9545:21:20"
															},
															"nativeSrc": "9545:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "9545:21:20"
														},
														{
															"nativeSrc": "9575:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "9575:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9590:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9590:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9597:4:20",
																		"nodeType": "YulLiteral",
																		"src": "9597:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9586:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:20"
																},
																"nativeSrc": "9586:16:20",
																"nodeType": "YulFunctionCall",
																"src": "9586:16:20"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9579:3:20",
																	"nodeType": "YulTypedName",
																	"src": "9579:3:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9640:83:20",
																"nodeType": "YulBlock",
																"src": "9640:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9642:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "9642:77:20"
																			},
																			"nativeSrc": "9642:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9642:79:20"
																		},
																		"nativeSrc": "9642:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9642:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9621:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "9621:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9626:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9626:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9617:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9617:3:20"
																		},
																		"nativeSrc": "9617:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9617:16:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9635:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9635:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9614:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "9614:2:20"
																},
																"nativeSrc": "9614:25:20",
																"nodeType": "YulFunctionCall",
																"src": "9614:25:20"
															},
															"nativeSrc": "9611:112:20",
															"nodeType": "YulIf",
															"src": "9611:112:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9769:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9769:3:20"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9774:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9774:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9779:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9779:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9732:36:20",
																	"nodeType": "YulIdentifier",
																	"src": "9732:36:20"
																},
																"nativeSrc": "9732:54:20",
																"nodeType": "YulFunctionCall",
																"src": "9732:54:20"
															},
															"nativeSrc": "9732:54:20",
															"nodeType": "YulExpressionStatement",
															"src": "9732:54:20"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9369:423:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9425:3:20",
														"nodeType": "YulTypedName",
														"src": "9425:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9430:6:20",
														"nodeType": "YulTypedName",
														"src": "9430:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9438:3:20",
														"nodeType": "YulTypedName",
														"src": "9438:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9446:5:20",
														"nodeType": "YulTypedName",
														"src": "9446:5:20",
														"type": ""
													}
												],
												"src": "9369:423:20"
											},
											{
												"body": {
													"nativeSrc": "9872:277:20",
													"nodeType": "YulBlock",
													"src": "9872:277:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9921:83:20",
																"nodeType": "YulBlock",
																"src": "9921:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9923:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "9923:77:20"
																			},
																			"nativeSrc": "9923:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9923:79:20"
																		},
																		"nativeSrc": "9923:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9923:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9900:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9900:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9908:4:20",
																						"nodeType": "YulLiteral",
																						"src": "9908:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9896:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9896:3:20"
																				},
																				"nativeSrc": "9896:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9896:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9915:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "9915:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9892:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:20"
																		},
																		"nativeSrc": "9892:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9885:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:20"
																},
																"nativeSrc": "9885:35:20",
																"nodeType": "YulFunctionCall",
																"src": "9885:35:20"
															},
															"nativeSrc": "9882:122:20",
															"nodeType": "YulIf",
															"src": "9882:122:20"
														},
														{
															"nativeSrc": "10013:34:20",
															"nodeType": "YulVariableDeclaration",
															"src": "10013:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10040:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10040:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10027:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "10027:12:20"
																},
																"nativeSrc": "10027:20:20",
																"nodeType": "YulFunctionCall",
																"src": "10027:20:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10017:6:20",
																	"nodeType": "YulTypedName",
																	"src": "10017:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10056:87:20",
															"nodeType": "YulAssignment",
															"src": "10056:87:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10116:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10116:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10124:4:20",
																				"nodeType": "YulLiteral",
																				"src": "10124:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10112:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10112:3:20"
																		},
																		"nativeSrc": "10112:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10112:17:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10131:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10131:6:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10139:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10139:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10065:46:20",
																	"nodeType": "YulIdentifier",
																	"src": "10065:46:20"
																},
																"nativeSrc": "10065:78:20",
																"nodeType": "YulFunctionCall",
																"src": "10065:78:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10056:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "10056:5:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9811:338:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9850:6:20",
														"nodeType": "YulTypedName",
														"src": "9850:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9858:3:20",
														"nodeType": "YulTypedName",
														"src": "9858:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9866:5:20",
														"nodeType": "YulTypedName",
														"src": "9866:5:20",
														"type": ""
													}
												],
												"src": "9811:338:20"
											},
											{
												"body": {
													"nativeSrc": "10247:560:20",
													"nodeType": "YulBlock",
													"src": "10247:560:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10293:83:20",
																"nodeType": "YulBlock",
																"src": "10293:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10295:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10295:77:20"
																			},
																			"nativeSrc": "10295:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10295:79:20"
																		},
																		"nativeSrc": "10295:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10295:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10268:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10268:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10277:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10277:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10264:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10264:3:20"
																		},
																		"nativeSrc": "10264:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10264:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10289:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10289:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10260:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10260:3:20"
																},
																"nativeSrc": "10260:32:20",
																"nodeType": "YulFunctionCall",
																"src": "10260:32:20"
															},
															"nativeSrc": "10257:119:20",
															"nodeType": "YulIf",
															"src": "10257:119:20"
														},
														{
															"nativeSrc": "10386:117:20",
															"nodeType": "YulBlock",
															"src": "10386:117:20",
															"statements": [
																{
																	"nativeSrc": "10401:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10401:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10415:1:20",
																		"nodeType": "YulLiteral",
																		"src": "10415:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10405:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10405:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10430:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10430:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10465:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10465:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10476:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10476:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10461:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10461:3:20"
																				},
																				"nativeSrc": "10461:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10461:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10485:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10485:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10440:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10440:20:20"
																		},
																		"nativeSrc": "10440:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10440:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10430:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10430:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10513:287:20",
															"nodeType": "YulBlock",
															"src": "10513:287:20",
															"statements": [
																{
																	"nativeSrc": "10528:46:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10528:46:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10559:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10559:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10570:2:20",
																						"nodeType": "YulLiteral",
																						"src": "10570:2:20",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10555:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10555:3:20"
																				},
																				"nativeSrc": "10555:18:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10555:18:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10542:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "10542:12:20"
																		},
																		"nativeSrc": "10542:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10542:32:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10532:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10532:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10621:83:20",
																		"nodeType": "YulBlock",
																		"src": "10621:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10623:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "10623:77:20"
																					},
																					"nativeSrc": "10623:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "10623:79:20"
																				},
																				"nativeSrc": "10623:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "10623:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10593:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10593:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10601:18:20",
																				"nodeType": "YulLiteral",
																				"src": "10601:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10590:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "10590:2:20"
																		},
																		"nativeSrc": "10590:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10590:30:20"
																	},
																	"nativeSrc": "10587:117:20",
																	"nodeType": "YulIf",
																	"src": "10587:117:20"
																},
																{
																	"nativeSrc": "10718:72:20",
																	"nodeType": "YulAssignment",
																	"src": "10718:72:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10762:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10762:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10773:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10773:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10758:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10758:3:20"
																				},
																				"nativeSrc": "10758:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10758:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10782:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10782:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10728:29:20",
																			"nodeType": "YulIdentifier",
																			"src": "10728:29:20"
																		},
																		"nativeSrc": "10728:62:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10728:62:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10718:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10718:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "10155:652:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10209:9:20",
														"nodeType": "YulTypedName",
														"src": "10209:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10220:7:20",
														"nodeType": "YulTypedName",
														"src": "10220:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10232:6:20",
														"nodeType": "YulTypedName",
														"src": "10232:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10240:6:20",
														"nodeType": "YulTypedName",
														"src": "10240:6:20",
														"type": ""
													}
												],
												"src": "10155:652:20"
											},
											{
												"body": {
													"nativeSrc": "10880:241:20",
													"nodeType": "YulBlock",
													"src": "10880:241:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10985:22:20",
																"nodeType": "YulBlock",
																"src": "10985:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10987:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "10987:16:20"
																			},
																			"nativeSrc": "10987:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10987:18:20"
																		},
																		"nativeSrc": "10987:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10987:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10957:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10965:18:20",
																		"nodeType": "YulLiteral",
																		"src": "10965:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10954:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "10954:2:20"
																},
																"nativeSrc": "10954:30:20",
																"nodeType": "YulFunctionCall",
																"src": "10954:30:20"
															},
															"nativeSrc": "10951:56:20",
															"nodeType": "YulIf",
															"src": "10951:56:20"
														},
														{
															"nativeSrc": "11017:37:20",
															"nodeType": "YulAssignment",
															"src": "11017:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11047:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11047:6:20"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11025:21:20",
																	"nodeType": "YulIdentifier",
																	"src": "11025:21:20"
																},
																"nativeSrc": "11025:29:20",
																"nodeType": "YulFunctionCall",
																"src": "11025:29:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11017:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11017:4:20"
																}
															]
														},
														{
															"nativeSrc": "11091:23:20",
															"nodeType": "YulAssignment",
															"src": "11091:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11103:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11103:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11109:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11109:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11099:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11099:3:20"
																},
																"nativeSrc": "11099:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11099:15:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11091:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11091:4:20"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10813:308:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10864:6:20",
														"nodeType": "YulTypedName",
														"src": "10864:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10875:4:20",
														"nodeType": "YulTypedName",
														"src": "10875:4:20",
														"type": ""
													}
												],
												"src": "10813:308:20"
											},
											{
												"body": {
													"nativeSrc": "11211:341:20",
													"nodeType": "YulBlock",
													"src": "11211:341:20",
													"statements": [
														{
															"nativeSrc": "11221:75:20",
															"nodeType": "YulAssignment",
															"src": "11221:75:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11288:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11288:6:20"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "11246:41:20",
																			"nodeType": "YulIdentifier",
																			"src": "11246:41:20"
																		},
																		"nativeSrc": "11246:49:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11246:49:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11230:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "11230:15:20"
																},
																"nativeSrc": "11230:66:20",
																"nodeType": "YulFunctionCall",
																"src": "11230:66:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11221:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "11221:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11312:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11312:5:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11319:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11319:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11305:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:20"
																},
																"nativeSrc": "11305:21:20",
																"nodeType": "YulFunctionCall",
																"src": "11305:21:20"
															},
															"nativeSrc": "11305:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "11305:21:20"
														},
														{
															"nativeSrc": "11335:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11335:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11350:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11350:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11357:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11357:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11346:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11346:3:20"
																},
																"nativeSrc": "11346:16:20",
																"nodeType": "YulFunctionCall",
																"src": "11346:16:20"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11339:3:20",
																	"nodeType": "YulTypedName",
																	"src": "11339:3:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11400:83:20",
																"nodeType": "YulBlock",
																"src": "11400:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11402:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "11402:77:20"
																			},
																			"nativeSrc": "11402:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11402:79:20"
																		},
																		"nativeSrc": "11402:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "11402:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11381:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11381:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11386:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11386:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11377:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11377:3:20"
																		},
																		"nativeSrc": "11377:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11377:16:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11395:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11395:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11374:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "11374:2:20"
																},
																"nativeSrc": "11374:25:20",
																"nodeType": "YulFunctionCall",
																"src": "11374:25:20"
															},
															"nativeSrc": "11371:112:20",
															"nodeType": "YulIf",
															"src": "11371:112:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11529:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11529:3:20"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11534:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11534:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11539:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11539:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11492:36:20",
																	"nodeType": "YulIdentifier",
																	"src": "11492:36:20"
																},
																"nativeSrc": "11492:54:20",
																"nodeType": "YulFunctionCall",
																"src": "11492:54:20"
															},
															"nativeSrc": "11492:54:20",
															"nodeType": "YulExpressionStatement",
															"src": "11492:54:20"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "11127:425:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11184:3:20",
														"nodeType": "YulTypedName",
														"src": "11184:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11189:6:20",
														"nodeType": "YulTypedName",
														"src": "11189:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11197:3:20",
														"nodeType": "YulTypedName",
														"src": "11197:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11205:5:20",
														"nodeType": "YulTypedName",
														"src": "11205:5:20",
														"type": ""
													}
												],
												"src": "11127:425:20"
											},
											{
												"body": {
													"nativeSrc": "11634:278:20",
													"nodeType": "YulBlock",
													"src": "11634:278:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "11683:83:20",
																"nodeType": "YulBlock",
																"src": "11683:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11685:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "11685:77:20"
																			},
																			"nativeSrc": "11685:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11685:79:20"
																		},
																		"nativeSrc": "11685:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "11685:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11662:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11662:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11670:4:20",
																						"nodeType": "YulLiteral",
																						"src": "11670:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11658:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11658:3:20"
																				},
																				"nativeSrc": "11658:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11658:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11677:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11677:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11654:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11654:3:20"
																		},
																		"nativeSrc": "11654:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11654:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11647:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11647:6:20"
																},
																"nativeSrc": "11647:35:20",
																"nodeType": "YulFunctionCall",
																"src": "11647:35:20"
															},
															"nativeSrc": "11644:122:20",
															"nodeType": "YulIf",
															"src": "11644:122:20"
														},
														{
															"nativeSrc": "11775:34:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11775:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11802:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11802:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11789:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "11789:12:20"
																},
																"nativeSrc": "11789:20:20",
																"nodeType": "YulFunctionCall",
																"src": "11789:20:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11779:6:20",
																	"nodeType": "YulTypedName",
																	"src": "11779:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11818:88:20",
															"nodeType": "YulAssignment",
															"src": "11818:88:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11879:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11879:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11887:4:20",
																				"nodeType": "YulLiteral",
																				"src": "11887:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11875:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11875:3:20"
																		},
																		"nativeSrc": "11875:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11875:17:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11894:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11894:6:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11902:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11902:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11827:47:20",
																	"nodeType": "YulIdentifier",
																	"src": "11827:47:20"
																},
																"nativeSrc": "11827:79:20",
																"nodeType": "YulFunctionCall",
																"src": "11827:79:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11818:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "11818:5:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11572:340:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11612:6:20",
														"nodeType": "YulTypedName",
														"src": "11612:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11620:3:20",
														"nodeType": "YulTypedName",
														"src": "11620:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11628:5:20",
														"nodeType": "YulTypedName",
														"src": "11628:5:20",
														"type": ""
													}
												],
												"src": "11572:340:20"
											},
											{
												"body": {
													"nativeSrc": "12072:1117:20",
													"nodeType": "YulBlock",
													"src": "12072:1117:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "12119:83:20",
																"nodeType": "YulBlock",
																"src": "12119:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12121:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "12121:77:20"
																			},
																			"nativeSrc": "12121:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12121:79:20"
																		},
																		"nativeSrc": "12121:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12121:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12093:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "12093:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12102:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12102:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12089:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12089:3:20"
																		},
																		"nativeSrc": "12089:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12114:3:20",
																		"nodeType": "YulLiteral",
																		"src": "12114:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12085:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12085:3:20"
																},
																"nativeSrc": "12085:33:20",
																"nodeType": "YulFunctionCall",
																"src": "12085:33:20"
															},
															"nativeSrc": "12082:120:20",
															"nodeType": "YulIf",
															"src": "12082:120:20"
														},
														{
															"nativeSrc": "12212:287:20",
															"nodeType": "YulBlock",
															"src": "12212:287:20",
															"statements": [
																{
																	"nativeSrc": "12227:45:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12227:45:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12258:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "12258:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12269:1:20",
																						"nodeType": "YulLiteral",
																						"src": "12269:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12254:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "12254:3:20"
																				},
																				"nativeSrc": "12254:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12254:17:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12241:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "12241:12:20"
																		},
																		"nativeSrc": "12241:31:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12241:31:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12231:6:20",
																			"nodeType": "YulTypedName",
																			"src": "12231:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12319:83:20",
																		"nodeType": "YulBlock",
																		"src": "12319:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12321:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "12321:77:20"
																					},
																					"nativeSrc": "12321:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "12321:79:20"
																				},
																				"nativeSrc": "12321:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "12321:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12291:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12291:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12299:18:20",
																				"nodeType": "YulLiteral",
																				"src": "12299:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12288:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "12288:2:20"
																		},
																		"nativeSrc": "12288:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12288:30:20"
																	},
																	"nativeSrc": "12285:117:20",
																	"nodeType": "YulIf",
																	"src": "12285:117:20"
																},
																{
																	"nativeSrc": "12416:73:20",
																	"nodeType": "YulAssignment",
																	"src": "12416:73:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12461:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "12461:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12472:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "12472:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12457:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "12457:3:20"
																				},
																				"nativeSrc": "12457:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12457:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12481:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "12481:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "12426:30:20",
																			"nodeType": "YulIdentifier",
																			"src": "12426:30:20"
																		},
																		"nativeSrc": "12426:63:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12426:63:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12416:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "12416:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12509:288:20",
															"nodeType": "YulBlock",
															"src": "12509:288:20",
															"statements": [
																{
																	"nativeSrc": "12524:46:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12524:46:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12555:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "12555:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12566:2:20",
																						"nodeType": "YulLiteral",
																						"src": "12566:2:20",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12551:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "12551:3:20"
																				},
																				"nativeSrc": "12551:18:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12551:18:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12538:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "12538:12:20"
																		},
																		"nativeSrc": "12538:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12538:32:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12528:6:20",
																			"nodeType": "YulTypedName",
																			"src": "12528:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12617:83:20",
																		"nodeType": "YulBlock",
																		"src": "12617:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12619:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "12619:77:20"
																					},
																					"nativeSrc": "12619:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "12619:79:20"
																				},
																				"nativeSrc": "12619:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "12619:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12589:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12589:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12597:18:20",
																				"nodeType": "YulLiteral",
																				"src": "12597:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12586:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "12586:2:20"
																		},
																		"nativeSrc": "12586:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12586:30:20"
																	},
																	"nativeSrc": "12583:117:20",
																	"nodeType": "YulIf",
																	"src": "12583:117:20"
																},
																{
																	"nativeSrc": "12714:73:20",
																	"nodeType": "YulAssignment",
																	"src": "12714:73:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12759:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "12759:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12770:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "12770:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12755:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "12755:3:20"
																				},
																				"nativeSrc": "12755:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12755:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12779:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "12779:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "12724:30:20",
																			"nodeType": "YulIdentifier",
																			"src": "12724:30:20"
																		},
																		"nativeSrc": "12724:63:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12724:63:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12714:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "12714:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12807:118:20",
															"nodeType": "YulBlock",
															"src": "12807:118:20",
															"statements": [
																{
																	"nativeSrc": "12822:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12822:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12836:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12826:6:20",
																			"nodeType": "YulTypedName",
																			"src": "12826:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12852:63:20",
																	"nodeType": "YulAssignment",
																	"src": "12852:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12887:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "12887:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12898:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "12898:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12883:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "12883:3:20"
																				},
																				"nativeSrc": "12883:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12883:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12907:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "12907:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12862:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "12862:20:20"
																		},
																		"nativeSrc": "12862:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12862:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12852:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "12852:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12935:118:20",
															"nodeType": "YulBlock",
															"src": "12935:118:20",
															"statements": [
																{
																	"nativeSrc": "12950:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12950:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12964:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12964:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12954:6:20",
																			"nodeType": "YulTypedName",
																			"src": "12954:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12980:63:20",
																	"nodeType": "YulAssignment",
																	"src": "12980:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13015:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "13015:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13026:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "13026:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13011:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "13011:3:20"
																				},
																				"nativeSrc": "13011:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "13011:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13035:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13035:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12990:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "12990:20:20"
																		},
																		"nativeSrc": "12990:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12990:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12980:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "12980:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13063:119:20",
															"nodeType": "YulBlock",
															"src": "13063:119:20",
															"statements": [
																{
																	"nativeSrc": "13078:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13078:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13092:3:20",
																		"nodeType": "YulLiteral",
																		"src": "13092:3:20",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13082:6:20",
																			"nodeType": "YulTypedName",
																			"src": "13082:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13109:63:20",
																	"nodeType": "YulAssignment",
																	"src": "13109:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13144:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "13144:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13155:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "13155:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13140:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "13140:3:20"
																				},
																				"nativeSrc": "13140:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "13140:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13164:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13164:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13119:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "13119:20:20"
																		},
																		"nativeSrc": "13119:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13119:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13109:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "13109:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address",
												"nativeSrc": "11918:1271:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12010:9:20",
														"nodeType": "YulTypedName",
														"src": "12010:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12021:7:20",
														"nodeType": "YulTypedName",
														"src": "12021:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12033:6:20",
														"nodeType": "YulTypedName",
														"src": "12033:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12041:6:20",
														"nodeType": "YulTypedName",
														"src": "12041:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12049:6:20",
														"nodeType": "YulTypedName",
														"src": "12049:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12057:6:20",
														"nodeType": "YulTypedName",
														"src": "12057:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12065:6:20",
														"nodeType": "YulTypedName",
														"src": "12065:6:20",
														"type": ""
													}
												],
												"src": "11918:1271:20"
											},
											{
												"body": {
													"nativeSrc": "13278:391:20",
													"nodeType": "YulBlock",
													"src": "13278:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "13324:83:20",
																"nodeType": "YulBlock",
																"src": "13324:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13326:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "13326:77:20"
																			},
																			"nativeSrc": "13326:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "13326:79:20"
																		},
																		"nativeSrc": "13326:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "13326:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13299:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13299:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13308:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13308:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13295:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13295:3:20"
																		},
																		"nativeSrc": "13295:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13295:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13320:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13320:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13291:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13291:3:20"
																},
																"nativeSrc": "13291:32:20",
																"nodeType": "YulFunctionCall",
																"src": "13291:32:20"
															},
															"nativeSrc": "13288:119:20",
															"nodeType": "YulIf",
															"src": "13288:119:20"
														},
														{
															"nativeSrc": "13417:117:20",
															"nodeType": "YulBlock",
															"src": "13417:117:20",
															"statements": [
																{
																	"nativeSrc": "13432:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13432:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13446:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13446:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13436:6:20",
																			"nodeType": "YulTypedName",
																			"src": "13436:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13461:63:20",
																	"nodeType": "YulAssignment",
																	"src": "13461:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13496:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "13496:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13507:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "13507:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13492:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "13492:3:20"
																				},
																				"nativeSrc": "13492:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "13492:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13516:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13516:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13471:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "13471:20:20"
																		},
																		"nativeSrc": "13471:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13471:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13461:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "13461:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13544:118:20",
															"nodeType": "YulBlock",
															"src": "13544:118:20",
															"statements": [
																{
																	"nativeSrc": "13559:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13559:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13573:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13573:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13563:6:20",
																			"nodeType": "YulTypedName",
																			"src": "13563:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13589:63:20",
																	"nodeType": "YulAssignment",
																	"src": "13589:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13624:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "13624:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13635:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "13635:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13620:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "13620:3:20"
																				},
																				"nativeSrc": "13620:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "13620:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13644:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13644:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13599:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "13599:20:20"
																		},
																		"nativeSrc": "13599:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13599:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13589:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "13589:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13195:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13240:9:20",
														"nodeType": "YulTypedName",
														"src": "13240:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13251:7:20",
														"nodeType": "YulTypedName",
														"src": "13251:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13263:6:20",
														"nodeType": "YulTypedName",
														"src": "13263:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13271:6:20",
														"nodeType": "YulTypedName",
														"src": "13271:6:20",
														"type": ""
													}
												],
												"src": "13195:474:20"
											},
											{
												"body": {
													"nativeSrc": "13703:152:20",
													"nodeType": "YulBlock",
													"src": "13703:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13720:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13720:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13723:77:20",
																		"nodeType": "YulLiteral",
																		"src": "13723:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13713:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13713:6:20"
																},
																"nativeSrc": "13713:88:20",
																"nodeType": "YulFunctionCall",
																"src": "13713:88:20"
															},
															"nativeSrc": "13713:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "13713:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13817:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13817:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13820:4:20",
																		"nodeType": "YulLiteral",
																		"src": "13820:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13810:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13810:6:20"
																},
																"nativeSrc": "13810:15:20",
																"nodeType": "YulFunctionCall",
																"src": "13810:15:20"
															},
															"nativeSrc": "13810:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "13810:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13841:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13841:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13844:4:20",
																		"nodeType": "YulLiteral",
																		"src": "13844:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13834:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13834:6:20"
																},
																"nativeSrc": "13834:15:20",
																"nodeType": "YulFunctionCall",
																"src": "13834:15:20"
															},
															"nativeSrc": "13834:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "13834:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13675:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "13675:180:20"
											},
											{
												"body": {
													"nativeSrc": "13912:269:20",
													"nodeType": "YulBlock",
													"src": "13912:269:20",
													"statements": [
														{
															"nativeSrc": "13922:22:20",
															"nodeType": "YulAssignment",
															"src": "13922:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13936:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "13936:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13942:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13942:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13932:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13932:3:20"
																},
																"nativeSrc": "13932:12:20",
																"nodeType": "YulFunctionCall",
																"src": "13932:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13922:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13922:6:20"
																}
															]
														},
														{
															"nativeSrc": "13953:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "13953:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13983:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "13983:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13989:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13989:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13979:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13979:3:20"
																},
																"nativeSrc": "13979:12:20",
																"nodeType": "YulFunctionCall",
																"src": "13979:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13957:18:20",
																	"nodeType": "YulTypedName",
																	"src": "13957:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14030:51:20",
																"nodeType": "YulBlock",
																"src": "14030:51:20",
																"statements": [
																	{
																		"nativeSrc": "14044:27:20",
																		"nodeType": "YulAssignment",
																		"src": "14044:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14058:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "14058:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14066:4:20",
																					"nodeType": "YulLiteral",
																					"src": "14066:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14054:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "14054:3:20"
																			},
																			"nativeSrc": "14054:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14054:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14044:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14044:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14010:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "14010:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14003:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:20"
																},
																"nativeSrc": "14003:26:20",
																"nodeType": "YulFunctionCall",
																"src": "14003:26:20"
															},
															"nativeSrc": "14000:81:20",
															"nodeType": "YulIf",
															"src": "14000:81:20"
														},
														{
															"body": {
																"nativeSrc": "14133:42:20",
																"nodeType": "YulBlock",
																"src": "14133:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14147:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "14147:16:20"
																			},
																			"nativeSrc": "14147:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14147:18:20"
																		},
																		"nativeSrc": "14147:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "14147:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14097:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "14097:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14120:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14120:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14128:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14128:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14117:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "14117:2:20"
																		},
																		"nativeSrc": "14117:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14117:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14094:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "14094:2:20"
																},
																"nativeSrc": "14094:38:20",
																"nodeType": "YulFunctionCall",
																"src": "14094:38:20"
															},
															"nativeSrc": "14091:84:20",
															"nodeType": "YulIf",
															"src": "14091:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13861:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13896:4:20",
														"nodeType": "YulTypedName",
														"src": "13896:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13905:6:20",
														"nodeType": "YulTypedName",
														"src": "13905:6:20",
														"type": ""
													}
												],
												"src": "13861:320:20"
											},
											{
												"body": {
													"nativeSrc": "14215:152:20",
													"nodeType": "YulBlock",
													"src": "14215:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14232:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14232:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14235:77:20",
																		"nodeType": "YulLiteral",
																		"src": "14235:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14225:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14225:6:20"
																},
																"nativeSrc": "14225:88:20",
																"nodeType": "YulFunctionCall",
																"src": "14225:88:20"
															},
															"nativeSrc": "14225:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "14225:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14329:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14329:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14332:4:20",
																		"nodeType": "YulLiteral",
																		"src": "14332:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14322:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14322:6:20"
																},
																"nativeSrc": "14322:15:20",
																"nodeType": "YulFunctionCall",
																"src": "14322:15:20"
															},
															"nativeSrc": "14322:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "14322:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14353:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14353:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14356:4:20",
																		"nodeType": "YulLiteral",
																		"src": "14356:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14346:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:20"
																},
																"nativeSrc": "14346:15:20",
																"nodeType": "YulFunctionCall",
																"src": "14346:15:20"
															},
															"nativeSrc": "14346:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "14346:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14187:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "14187:180:20"
											},
											{
												"body": {
													"nativeSrc": "14418:149:20",
													"nodeType": "YulBlock",
													"src": "14418:149:20",
													"statements": [
														{
															"nativeSrc": "14428:25:20",
															"nodeType": "YulAssignment",
															"src": "14428:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14451:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14451:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14433:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "14433:17:20"
																},
																"nativeSrc": "14433:20:20",
																"nodeType": "YulFunctionCall",
																"src": "14433:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14428:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "14428:1:20"
																}
															]
														},
														{
															"nativeSrc": "14462:25:20",
															"nodeType": "YulAssignment",
															"src": "14462:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14485:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14485:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14467:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "14467:17:20"
																},
																"nativeSrc": "14467:20:20",
																"nodeType": "YulFunctionCall",
																"src": "14467:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14462:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "14462:1:20"
																}
															]
														},
														{
															"nativeSrc": "14496:17:20",
															"nodeType": "YulAssignment",
															"src": "14496:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14508:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14508:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14511:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14511:1:20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14504:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14504:3:20"
																},
																"nativeSrc": "14504:9:20",
																"nodeType": "YulFunctionCall",
																"src": "14504:9:20"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14496:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14496:4:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14538:22:20",
																"nodeType": "YulBlock",
																"src": "14538:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14540:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "14540:16:20"
																			},
																			"nativeSrc": "14540:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14540:18:20"
																		},
																		"nativeSrc": "14540:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "14540:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14529:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "14529:4:20"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14535:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14535:1:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14526:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "14526:2:20"
																},
																"nativeSrc": "14526:11:20",
																"nodeType": "YulFunctionCall",
																"src": "14526:11:20"
															},
															"nativeSrc": "14523:37:20",
															"nodeType": "YulIf",
															"src": "14523:37:20"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14373:194:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14404:1:20",
														"nodeType": "YulTypedName",
														"src": "14404:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14407:1:20",
														"nodeType": "YulTypedName",
														"src": "14407:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14413:4:20",
														"nodeType": "YulTypedName",
														"src": "14413:4:20",
														"type": ""
													}
												],
												"src": "14373:194:20"
											},
											{
												"body": {
													"nativeSrc": "14679:63:20",
													"nodeType": "YulBlock",
													"src": "14679:63:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14701:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14701:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14709:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14709:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14697:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14697:3:20"
																		},
																		"nativeSrc": "14697:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14697:14:20"
																	},
																	{
																		"hexValue": "4e6f206665657320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "14713:21:20",
																		"nodeType": "YulLiteral",
																		"src": "14713:21:20",
																		"type": "",
																		"value": "No fees to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14690:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14690:6:20"
																},
																"nativeSrc": "14690:45:20",
																"nodeType": "YulFunctionCall",
																"src": "14690:45:20"
															},
															"nativeSrc": "14690:45:20",
															"nodeType": "YulExpressionStatement",
															"src": "14690:45:20"
														}
													]
												},
												"name": "store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
												"nativeSrc": "14573:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14671:6:20",
														"nodeType": "YulTypedName",
														"src": "14671:6:20",
														"type": ""
													}
												],
												"src": "14573:169:20"
											},
											{
												"body": {
													"nativeSrc": "14894:220:20",
													"nodeType": "YulBlock",
													"src": "14894:220:20",
													"statements": [
														{
															"nativeSrc": "14904:74:20",
															"nodeType": "YulAssignment",
															"src": "14904:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14970:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "14970:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14975:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14975:2:20",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14911:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "14911:58:20"
																},
																"nativeSrc": "14911:67:20",
																"nodeType": "YulFunctionCall",
																"src": "14911:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14904:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14904:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15076:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15076:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																	"nativeSrc": "14987:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "14987:88:20"
																},
																"nativeSrc": "14987:93:20",
																"nodeType": "YulFunctionCall",
																"src": "14987:93:20"
															},
															"nativeSrc": "14987:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "14987:93:20"
														},
														{
															"nativeSrc": "15089:19:20",
															"nodeType": "YulAssignment",
															"src": "15089:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15100:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15100:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15105:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15105:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15096:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15096:3:20"
																},
																"nativeSrc": "15096:12:20",
																"nodeType": "YulFunctionCall",
																"src": "15096:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15089:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15089:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14748:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14882:3:20",
														"nodeType": "YulTypedName",
														"src": "14882:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14890:3:20",
														"nodeType": "YulTypedName",
														"src": "14890:3:20",
														"type": ""
													}
												],
												"src": "14748:366:20"
											},
											{
												"body": {
													"nativeSrc": "15291:248:20",
													"nodeType": "YulBlock",
													"src": "15291:248:20",
													"statements": [
														{
															"nativeSrc": "15301:26:20",
															"nodeType": "YulAssignment",
															"src": "15301:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15313:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "15313:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15324:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15324:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15309:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15309:3:20"
																},
																"nativeSrc": "15309:18:20",
																"nodeType": "YulFunctionCall",
																"src": "15309:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15301:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15301:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15348:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15348:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15359:1:20",
																				"nodeType": "YulLiteral",
																				"src": "15359:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15344:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15344:3:20"
																		},
																		"nativeSrc": "15344:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15344:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15367:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "15367:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15373:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15373:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15363:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15363:3:20"
																		},
																		"nativeSrc": "15363:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15363:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15337:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "15337:6:20"
																},
																"nativeSrc": "15337:47:20",
																"nodeType": "YulFunctionCall",
																"src": "15337:47:20"
															},
															"nativeSrc": "15337:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "15337:47:20"
														},
														{
															"nativeSrc": "15393:139:20",
															"nodeType": "YulAssignment",
															"src": "15393:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15527:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "15527:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15401:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "15401:124:20"
																},
																"nativeSrc": "15401:131:20",
																"nodeType": "YulFunctionCall",
																"src": "15401:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15393:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15393:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15120:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15271:9:20",
														"nodeType": "YulTypedName",
														"src": "15271:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15286:4:20",
														"nodeType": "YulTypedName",
														"src": "15286:4:20",
														"type": ""
													}
												],
												"src": "15120:419:20"
											},
											{
												"body": {
													"nativeSrc": "15598:32:20",
													"nodeType": "YulBlock",
													"src": "15598:32:20",
													"statements": [
														{
															"nativeSrc": "15608:16:20",
															"nodeType": "YulAssignment",
															"src": "15608:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "15619:5:20",
																"nodeType": "YulIdentifier",
																"src": "15619:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15608:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "15608:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "15545:85:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15580:5:20",
														"nodeType": "YulTypedName",
														"src": "15580:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15590:7:20",
														"nodeType": "YulTypedName",
														"src": "15590:7:20",
														"type": ""
													}
												],
												"src": "15545:85:20"
											},
											{
												"body": {
													"nativeSrc": "15680:57:20",
													"nodeType": "YulBlock",
													"src": "15680:57:20",
													"statements": [
														{
															"nativeSrc": "15690:41:20",
															"nodeType": "YulAssignment",
															"src": "15690:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15705:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "15705:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15712:18:20",
																		"nodeType": "YulLiteral",
																		"src": "15712:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15701:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15701:3:20"
																},
																"nativeSrc": "15701:30:20",
																"nodeType": "YulFunctionCall",
																"src": "15701:30:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15690:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "15690:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "15636:101:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15662:5:20",
														"nodeType": "YulTypedName",
														"src": "15662:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15672:7:20",
														"nodeType": "YulTypedName",
														"src": "15672:7:20",
														"type": ""
													}
												],
												"src": "15636:101:20"
											},
											{
												"body": {
													"nativeSrc": "15775:28:20",
													"nodeType": "YulBlock",
													"src": "15775:28:20",
													"statements": [
														{
															"nativeSrc": "15785:12:20",
															"nodeType": "YulAssignment",
															"src": "15785:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "15792:5:20",
																"nodeType": "YulIdentifier",
																"src": "15792:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15785:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15785:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15743:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15761:5:20",
														"nodeType": "YulTypedName",
														"src": "15761:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15771:3:20",
														"nodeType": "YulTypedName",
														"src": "15771:3:20",
														"type": ""
													}
												],
												"src": "15743:60:20"
											},
											{
												"body": {
													"nativeSrc": "15876:89:20",
													"nodeType": "YulBlock",
													"src": "15876:89:20",
													"statements": [
														{
															"nativeSrc": "15886:73:20",
															"nodeType": "YulAssignment",
															"src": "15886:73:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15951:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "15951:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "15925:25:20",
																					"nodeType": "YulIdentifier",
																					"src": "15925:25:20"
																				},
																				"nativeSrc": "15925:32:20",
																				"nodeType": "YulFunctionCall",
																				"src": "15925:32:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15916:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "15916:8:20"
																		},
																		"nativeSrc": "15916:42:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15916:42:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "15899:16:20",
																	"nodeType": "YulIdentifier",
																	"src": "15899:16:20"
																},
																"nativeSrc": "15899:60:20",
																"nodeType": "YulFunctionCall",
																"src": "15899:60:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15886:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "15886:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "15809:156:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15856:5:20",
														"nodeType": "YulTypedName",
														"src": "15856:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15866:9:20",
														"nodeType": "YulTypedName",
														"src": "15866:9:20",
														"type": ""
													}
												],
												"src": "15809:156:20"
											},
											{
												"body": {
													"nativeSrc": "16043:73:20",
													"nodeType": "YulBlock",
													"src": "16043:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16060:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16060:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16103:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "16103:5:20"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "16065:37:20",
																			"nodeType": "YulIdentifier",
																			"src": "16065:37:20"
																		},
																		"nativeSrc": "16065:44:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16065:44:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16053:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16053:6:20"
																},
																"nativeSrc": "16053:57:20",
																"nodeType": "YulFunctionCall",
																"src": "16053:57:20"
															},
															"nativeSrc": "16053:57:20",
															"nodeType": "YulExpressionStatement",
															"src": "16053:57:20"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "15971:145:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16031:5:20",
														"nodeType": "YulTypedName",
														"src": "16031:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16038:3:20",
														"nodeType": "YulTypedName",
														"src": "16038:3:20",
														"type": ""
													}
												],
												"src": "15971:145:20"
											},
											{
												"body": {
													"nativeSrc": "16227:131:20",
													"nodeType": "YulBlock",
													"src": "16227:131:20",
													"statements": [
														{
															"nativeSrc": "16237:26:20",
															"nodeType": "YulAssignment",
															"src": "16237:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16249:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "16249:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16260:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16260:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16245:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16245:3:20"
																},
																"nativeSrc": "16245:18:20",
																"nodeType": "YulFunctionCall",
																"src": "16245:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16237:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "16237:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16324:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "16324:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16337:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "16337:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16348:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16348:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16333:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16333:3:20"
																		},
																		"nativeSrc": "16333:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16333:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "16273:50:20",
																	"nodeType": "YulIdentifier",
																	"src": "16273:50:20"
																},
																"nativeSrc": "16273:78:20",
																"nodeType": "YulFunctionCall",
																"src": "16273:78:20"
															},
															"nativeSrc": "16273:78:20",
															"nodeType": "YulExpressionStatement",
															"src": "16273:78:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "16122:236:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16199:9:20",
														"nodeType": "YulTypedName",
														"src": "16199:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16211:6:20",
														"nodeType": "YulTypedName",
														"src": "16211:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16222:4:20",
														"nodeType": "YulTypedName",
														"src": "16222:4:20",
														"type": ""
													}
												],
												"src": "16122:236:20"
											},
											{
												"body": {
													"nativeSrc": "16470:60:20",
													"nodeType": "YulBlock",
													"src": "16470:60:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16492:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "16492:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16500:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16500:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16488:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16488:3:20"
																		},
																		"nativeSrc": "16488:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16488:14:20"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "16504:18:20",
																		"nodeType": "YulLiteral",
																		"src": "16504:18:20",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16481:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16481:6:20"
																},
																"nativeSrc": "16481:42:20",
																"nodeType": "YulFunctionCall",
																"src": "16481:42:20"
															},
															"nativeSrc": "16481:42:20",
															"nodeType": "YulExpressionStatement",
															"src": "16481:42:20"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "16364:166:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16462:6:20",
														"nodeType": "YulTypedName",
														"src": "16462:6:20",
														"type": ""
													}
												],
												"src": "16364:166:20"
											},
											{
												"body": {
													"nativeSrc": "16682:220:20",
													"nodeType": "YulBlock",
													"src": "16682:220:20",
													"statements": [
														{
															"nativeSrc": "16692:74:20",
															"nodeType": "YulAssignment",
															"src": "16692:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16758:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16758:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16763:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16763:2:20",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16699:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "16699:58:20"
																},
																"nativeSrc": "16699:67:20",
																"nodeType": "YulFunctionCall",
																"src": "16699:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16692:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16864:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16864:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "16775:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "16775:88:20"
																},
																"nativeSrc": "16775:93:20",
																"nodeType": "YulFunctionCall",
																"src": "16775:93:20"
															},
															"nativeSrc": "16775:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "16775:93:20"
														},
														{
															"nativeSrc": "16877:19:20",
															"nodeType": "YulAssignment",
															"src": "16877:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16888:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16888:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16893:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16893:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16884:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16884:3:20"
																},
																"nativeSrc": "16884:12:20",
																"nodeType": "YulFunctionCall",
																"src": "16884:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16877:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16877:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16536:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16670:3:20",
														"nodeType": "YulTypedName",
														"src": "16670:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16678:3:20",
														"nodeType": "YulTypedName",
														"src": "16678:3:20",
														"type": ""
													}
												],
												"src": "16536:366:20"
											},
											{
												"body": {
													"nativeSrc": "17079:248:20",
													"nodeType": "YulBlock",
													"src": "17079:248:20",
													"statements": [
														{
															"nativeSrc": "17089:26:20",
															"nodeType": "YulAssignment",
															"src": "17089:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17101:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "17101:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17112:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17112:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17097:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17097:3:20"
																},
																"nativeSrc": "17097:18:20",
																"nodeType": "YulFunctionCall",
																"src": "17097:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17089:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17089:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17136:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17136:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17147:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17147:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17132:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17132:3:20"
																		},
																		"nativeSrc": "17132:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17132:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17155:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "17155:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17161:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17161:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17151:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17151:3:20"
																		},
																		"nativeSrc": "17151:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17151:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17125:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17125:6:20"
																},
																"nativeSrc": "17125:47:20",
																"nodeType": "YulFunctionCall",
																"src": "17125:47:20"
															},
															"nativeSrc": "17125:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "17125:47:20"
														},
														{
															"nativeSrc": "17181:139:20",
															"nodeType": "YulAssignment",
															"src": "17181:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17315:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "17315:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17189:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "17189:124:20"
																},
																"nativeSrc": "17189:131:20",
																"nodeType": "YulFunctionCall",
																"src": "17189:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17181:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17181:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16908:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17059:9:20",
														"nodeType": "YulTypedName",
														"src": "17059:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17074:4:20",
														"nodeType": "YulTypedName",
														"src": "17074:4:20",
														"type": ""
													}
												],
												"src": "16908:419:20"
											},
											{
												"body": {
													"nativeSrc": "17439:73:20",
													"nodeType": "YulBlock",
													"src": "17439:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17461:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "17461:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17469:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17469:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17457:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17457:3:20"
																		},
																		"nativeSrc": "17457:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17457:14:20"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "17473:31:20",
																		"nodeType": "YulLiteral",
																		"src": "17473:31:20",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17450:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17450:6:20"
																},
																"nativeSrc": "17450:55:20",
																"nodeType": "YulFunctionCall",
																"src": "17450:55:20"
															},
															"nativeSrc": "17450:55:20",
															"nodeType": "YulExpressionStatement",
															"src": "17450:55:20"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "17333:179:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17431:6:20",
														"nodeType": "YulTypedName",
														"src": "17431:6:20",
														"type": ""
													}
												],
												"src": "17333:179:20"
											},
											{
												"body": {
													"nativeSrc": "17664:220:20",
													"nodeType": "YulBlock",
													"src": "17664:220:20",
													"statements": [
														{
															"nativeSrc": "17674:74:20",
															"nodeType": "YulAssignment",
															"src": "17674:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17740:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17740:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17745:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17745:2:20",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17681:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "17681:58:20"
																},
																"nativeSrc": "17681:67:20",
																"nodeType": "YulFunctionCall",
																"src": "17681:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17674:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17674:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17846:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17846:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "17757:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "17757:88:20"
																},
																"nativeSrc": "17757:93:20",
																"nodeType": "YulFunctionCall",
																"src": "17757:93:20"
															},
															"nativeSrc": "17757:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "17757:93:20"
														},
														{
															"nativeSrc": "17859:19:20",
															"nodeType": "YulAssignment",
															"src": "17859:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17870:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17870:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17875:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17875:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17866:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17866:3:20"
																},
																"nativeSrc": "17866:12:20",
																"nodeType": "YulFunctionCall",
																"src": "17866:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17859:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17859:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17518:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17652:3:20",
														"nodeType": "YulTypedName",
														"src": "17652:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17660:3:20",
														"nodeType": "YulTypedName",
														"src": "17660:3:20",
														"type": ""
													}
												],
												"src": "17518:366:20"
											},
											{
												"body": {
													"nativeSrc": "18061:248:20",
													"nodeType": "YulBlock",
													"src": "18061:248:20",
													"statements": [
														{
															"nativeSrc": "18071:26:20",
															"nodeType": "YulAssignment",
															"src": "18071:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18083:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "18083:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18094:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18094:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18079:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18079:3:20"
																},
																"nativeSrc": "18079:18:20",
																"nodeType": "YulFunctionCall",
																"src": "18079:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18071:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18071:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18118:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18118:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18129:1:20",
																				"nodeType": "YulLiteral",
																				"src": "18129:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18114:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18114:3:20"
																		},
																		"nativeSrc": "18114:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18114:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18137:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "18137:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18143:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18143:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18133:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18133:3:20"
																		},
																		"nativeSrc": "18133:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18133:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18107:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18107:6:20"
																},
																"nativeSrc": "18107:47:20",
																"nodeType": "YulFunctionCall",
																"src": "18107:47:20"
															},
															"nativeSrc": "18107:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "18107:47:20"
														},
														{
															"nativeSrc": "18163:139:20",
															"nodeType": "YulAssignment",
															"src": "18163:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18297:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "18297:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18171:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "18171:124:20"
																},
																"nativeSrc": "18171:131:20",
																"nodeType": "YulFunctionCall",
																"src": "18171:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18163:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18163:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17890:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18041:9:20",
														"nodeType": "YulTypedName",
														"src": "18041:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18056:4:20",
														"nodeType": "YulTypedName",
														"src": "18056:4:20",
														"type": ""
													}
												],
												"src": "17890:419:20"
											},
											{
												"body": {
													"nativeSrc": "18363:362:20",
													"nodeType": "YulBlock",
													"src": "18363:362:20",
													"statements": [
														{
															"nativeSrc": "18373:25:20",
															"nodeType": "YulAssignment",
															"src": "18373:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18396:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "18396:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18378:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "18378:17:20"
																},
																"nativeSrc": "18378:20:20",
																"nodeType": "YulFunctionCall",
																"src": "18378:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18373:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "18373:1:20"
																}
															]
														},
														{
															"nativeSrc": "18407:25:20",
															"nodeType": "YulAssignment",
															"src": "18407:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18430:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "18430:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18412:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "18412:17:20"
																},
																"nativeSrc": "18412:20:20",
																"nodeType": "YulFunctionCall",
																"src": "18412:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18407:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "18407:1:20"
																}
															]
														},
														{
															"nativeSrc": "18441:28:20",
															"nodeType": "YulVariableDeclaration",
															"src": "18441:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18464:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "18464:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18467:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "18467:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18460:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18460:3:20"
																},
																"nativeSrc": "18460:9:20",
																"nodeType": "YulFunctionCall",
																"src": "18460:9:20"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18445:11:20",
																	"nodeType": "YulTypedName",
																	"src": "18445:11:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18478:41:20",
															"nodeType": "YulAssignment",
															"src": "18478:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18507:11:20",
																		"nodeType": "YulIdentifier",
																		"src": "18507:11:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18489:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "18489:17:20"
																},
																"nativeSrc": "18489:30:20",
																"nodeType": "YulFunctionCall",
																"src": "18489:30:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18478:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "18478:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18696:22:20",
																"nodeType": "YulBlock",
																"src": "18696:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18698:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "18698:16:20"
																			},
																			"nativeSrc": "18698:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "18698:18:20"
																		},
																		"nativeSrc": "18698:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "18698:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18629:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "18629:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18622:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "18622:6:20"
																				},
																				"nativeSrc": "18622:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "18622:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18652:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "18652:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18659:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "18659:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18668:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "18668:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18655:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "18655:3:20"
																						},
																						"nativeSrc": "18655:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "18655:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18649:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "18649:2:20"
																				},
																				"nativeSrc": "18649:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "18649:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18602:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "18602:2:20"
																		},
																		"nativeSrc": "18602:83:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18602:83:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18582:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18582:6:20"
																},
																"nativeSrc": "18582:113:20",
																"nodeType": "YulFunctionCall",
																"src": "18582:113:20"
															},
															"nativeSrc": "18579:139:20",
															"nodeType": "YulIf",
															"src": "18579:139:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18315:410:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18346:1:20",
														"nodeType": "YulTypedName",
														"src": "18346:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18349:1:20",
														"nodeType": "YulTypedName",
														"src": "18349:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18355:7:20",
														"nodeType": "YulTypedName",
														"src": "18355:7:20",
														"type": ""
													}
												],
												"src": "18315:410:20"
											},
											{
												"body": {
													"nativeSrc": "18759:152:20",
													"nodeType": "YulBlock",
													"src": "18759:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18776:1:20",
																		"nodeType": "YulLiteral",
																		"src": "18776:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18779:77:20",
																		"nodeType": "YulLiteral",
																		"src": "18779:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18769:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18769:6:20"
																},
																"nativeSrc": "18769:88:20",
																"nodeType": "YulFunctionCall",
																"src": "18769:88:20"
															},
															"nativeSrc": "18769:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "18769:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18873:1:20",
																		"nodeType": "YulLiteral",
																		"src": "18873:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18876:4:20",
																		"nodeType": "YulLiteral",
																		"src": "18876:4:20",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18866:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18866:6:20"
																},
																"nativeSrc": "18866:15:20",
																"nodeType": "YulFunctionCall",
																"src": "18866:15:20"
															},
															"nativeSrc": "18866:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "18866:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18897:1:20",
																		"nodeType": "YulLiteral",
																		"src": "18897:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18900:4:20",
																		"nodeType": "YulLiteral",
																		"src": "18900:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18890:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18890:6:20"
																},
																"nativeSrc": "18890:15:20",
																"nodeType": "YulFunctionCall",
																"src": "18890:15:20"
															},
															"nativeSrc": "18890:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "18890:15:20"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "18731:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "18731:180:20"
											},
											{
												"body": {
													"nativeSrc": "18959:143:20",
													"nodeType": "YulBlock",
													"src": "18959:143:20",
													"statements": [
														{
															"nativeSrc": "18969:25:20",
															"nodeType": "YulAssignment",
															"src": "18969:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18992:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "18992:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18974:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "18974:17:20"
																},
																"nativeSrc": "18974:20:20",
																"nodeType": "YulFunctionCall",
																"src": "18974:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18969:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "18969:1:20"
																}
															]
														},
														{
															"nativeSrc": "19003:25:20",
															"nodeType": "YulAssignment",
															"src": "19003:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19026:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19026:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19008:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "19008:17:20"
																},
																"nativeSrc": "19008:20:20",
																"nodeType": "YulFunctionCall",
																"src": "19008:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19003:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "19003:1:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19050:22:20",
																"nodeType": "YulBlock",
																"src": "19050:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "19052:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "19052:16:20"
																			},
																			"nativeSrc": "19052:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "19052:18:20"
																		},
																		"nativeSrc": "19052:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "19052:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19047:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19047:1:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19040:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "19040:6:20"
																},
																"nativeSrc": "19040:9:20",
																"nodeType": "YulFunctionCall",
																"src": "19040:9:20"
															},
															"nativeSrc": "19037:35:20",
															"nodeType": "YulIf",
															"src": "19037:35:20"
														},
														{
															"nativeSrc": "19082:14:20",
															"nodeType": "YulAssignment",
															"src": "19082:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19091:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19091:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19094:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19094:1:20"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19087:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19087:3:20"
																},
																"nativeSrc": "19087:9:20",
																"nodeType": "YulFunctionCall",
																"src": "19087:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "19082:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "19082:1:20"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18917:185:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18948:1:20",
														"nodeType": "YulTypedName",
														"src": "18948:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18951:1:20",
														"nodeType": "YulTypedName",
														"src": "18951:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18957:1:20",
														"nodeType": "YulTypedName",
														"src": "18957:1:20",
														"type": ""
													}
												],
												"src": "18917:185:20"
											},
											{
												"body": {
													"nativeSrc": "19152:147:20",
													"nodeType": "YulBlock",
													"src": "19152:147:20",
													"statements": [
														{
															"nativeSrc": "19162:25:20",
															"nodeType": "YulAssignment",
															"src": "19162:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19185:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19185:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19167:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "19167:17:20"
																},
																"nativeSrc": "19167:20:20",
																"nodeType": "YulFunctionCall",
																"src": "19167:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19162:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "19162:1:20"
																}
															]
														},
														{
															"nativeSrc": "19196:25:20",
															"nodeType": "YulAssignment",
															"src": "19196:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19219:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19219:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19201:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "19201:17:20"
																},
																"nativeSrc": "19201:20:20",
																"nodeType": "YulFunctionCall",
																"src": "19201:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19196:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "19196:1:20"
																}
															]
														},
														{
															"nativeSrc": "19230:16:20",
															"nodeType": "YulAssignment",
															"src": "19230:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19241:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19241:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19244:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19244:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19237:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19237:3:20"
																},
																"nativeSrc": "19237:9:20",
																"nodeType": "YulFunctionCall",
																"src": "19237:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19230:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19230:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19270:22:20",
																"nodeType": "YulBlock",
																"src": "19270:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19272:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "19272:16:20"
																			},
																			"nativeSrc": "19272:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "19272:18:20"
																		},
																		"nativeSrc": "19272:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "19272:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19262:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19262:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19265:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19265:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19259:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "19259:2:20"
																},
																"nativeSrc": "19259:10:20",
																"nodeType": "YulFunctionCall",
																"src": "19259:10:20"
															},
															"nativeSrc": "19256:36:20",
															"nodeType": "YulIf",
															"src": "19256:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19108:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19139:1:20",
														"nodeType": "YulTypedName",
														"src": "19139:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19142:1:20",
														"nodeType": "YulTypedName",
														"src": "19142:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19148:3:20",
														"nodeType": "YulTypedName",
														"src": "19148:3:20",
														"type": ""
													}
												],
												"src": "19108:191:20"
											},
											{
												"body": {
													"nativeSrc": "19368:80:20",
													"nodeType": "YulBlock",
													"src": "19368:80:20",
													"statements": [
														{
															"nativeSrc": "19378:22:20",
															"nodeType": "YulAssignment",
															"src": "19378:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19393:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19393:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19387:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "19387:5:20"
																},
																"nativeSrc": "19387:13:20",
																"nodeType": "YulFunctionCall",
																"src": "19387:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19378:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "19378:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19436:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "19436:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "19409:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "19409:26:20"
																},
																"nativeSrc": "19409:33:20",
																"nodeType": "YulFunctionCall",
																"src": "19409:33:20"
															},
															"nativeSrc": "19409:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "19409:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "19305:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19346:6:20",
														"nodeType": "YulTypedName",
														"src": "19346:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19354:3:20",
														"nodeType": "YulTypedName",
														"src": "19354:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19362:5:20",
														"nodeType": "YulTypedName",
														"src": "19362:5:20",
														"type": ""
													}
												],
												"src": "19305:143:20"
											},
											{
												"body": {
													"nativeSrc": "19531:274:20",
													"nodeType": "YulBlock",
													"src": "19531:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "19577:83:20",
																"nodeType": "YulBlock",
																"src": "19577:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19579:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "19579:77:20"
																			},
																			"nativeSrc": "19579:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "19579:79:20"
																		},
																		"nativeSrc": "19579:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "19579:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19552:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "19552:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19561:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19561:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19548:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19548:3:20"
																		},
																		"nativeSrc": "19548:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19548:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19573:2:20",
																		"nodeType": "YulLiteral",
																		"src": "19573:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19544:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19544:3:20"
																},
																"nativeSrc": "19544:32:20",
																"nodeType": "YulFunctionCall",
																"src": "19544:32:20"
															},
															"nativeSrc": "19541:119:20",
															"nodeType": "YulIf",
															"src": "19541:119:20"
														},
														{
															"nativeSrc": "19670:128:20",
															"nodeType": "YulBlock",
															"src": "19670:128:20",
															"statements": [
																{
																	"nativeSrc": "19685:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19685:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19699:1:20",
																		"nodeType": "YulLiteral",
																		"src": "19699:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19689:6:20",
																			"nodeType": "YulTypedName",
																			"src": "19689:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19714:74:20",
																	"nodeType": "YulAssignment",
																	"src": "19714:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19760:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "19760:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19771:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "19771:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19756:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "19756:3:20"
																				},
																				"nativeSrc": "19756:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "19756:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19780:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "19780:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "19724:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "19724:31:20"
																		},
																		"nativeSrc": "19724:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19724:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19714:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "19714:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "19454:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19501:9:20",
														"nodeType": "YulTypedName",
														"src": "19501:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19512:7:20",
														"nodeType": "YulTypedName",
														"src": "19512:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19524:6:20",
														"nodeType": "YulTypedName",
														"src": "19524:6:20",
														"type": ""
													}
												],
												"src": "19454:351:20"
											},
											{
												"body": {
													"nativeSrc": "19937:206:20",
													"nodeType": "YulBlock",
													"src": "19937:206:20",
													"statements": [
														{
															"nativeSrc": "19947:26:20",
															"nodeType": "YulAssignment",
															"src": "19947:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19959:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "19959:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19970:2:20",
																		"nodeType": "YulLiteral",
																		"src": "19970:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19955:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19955:3:20"
																},
																"nativeSrc": "19955:18:20",
																"nodeType": "YulFunctionCall",
																"src": "19955:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19947:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "19947:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20027:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20027:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20040:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20040:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20051:1:20",
																				"nodeType": "YulLiteral",
																				"src": "20051:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20036:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20036:3:20"
																		},
																		"nativeSrc": "20036:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20036:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19983:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19983:43:20"
																},
																"nativeSrc": "19983:71:20",
																"nodeType": "YulFunctionCall",
																"src": "19983:71:20"
															},
															"nativeSrc": "19983:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "19983:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20108:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20108:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20121:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20121:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20132:2:20",
																				"nodeType": "YulLiteral",
																				"src": "20132:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20117:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20117:3:20"
																		},
																		"nativeSrc": "20117:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20117:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20064:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "20064:43:20"
																},
																"nativeSrc": "20064:72:20",
																"nodeType": "YulFunctionCall",
																"src": "20064:72:20"
															},
															"nativeSrc": "20064:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "20064:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "19811:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19901:9:20",
														"nodeType": "YulTypedName",
														"src": "19901:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19913:6:20",
														"nodeType": "YulTypedName",
														"src": "19913:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19921:6:20",
														"nodeType": "YulTypedName",
														"src": "19921:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19932:4:20",
														"nodeType": "YulTypedName",
														"src": "19932:4:20",
														"type": ""
													}
												],
												"src": "19811:332:20"
											},
											{
												"body": {
													"nativeSrc": "20255:64:20",
													"nodeType": "YulBlock",
													"src": "20255:64:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20277:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "20277:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20285:1:20",
																				"nodeType": "YulLiteral",
																				"src": "20285:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20273:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20273:3:20"
																		},
																		"nativeSrc": "20273:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20273:14:20"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "20289:22:20",
																		"nodeType": "YulLiteral",
																		"src": "20289:22:20",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20266:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20266:6:20"
																},
																"nativeSrc": "20266:46:20",
																"nodeType": "YulFunctionCall",
																"src": "20266:46:20"
															},
															"nativeSrc": "20266:46:20",
															"nodeType": "YulExpressionStatement",
															"src": "20266:46:20"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "20149:170:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20247:6:20",
														"nodeType": "YulTypedName",
														"src": "20247:6:20",
														"type": ""
													}
												],
												"src": "20149:170:20"
											},
											{
												"body": {
													"nativeSrc": "20471:220:20",
													"nodeType": "YulBlock",
													"src": "20471:220:20",
													"statements": [
														{
															"nativeSrc": "20481:74:20",
															"nodeType": "YulAssignment",
															"src": "20481:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20547:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20547:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20552:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20552:2:20",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20488:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "20488:58:20"
																},
																"nativeSrc": "20488:67:20",
																"nodeType": "YulFunctionCall",
																"src": "20488:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20481:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20481:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20653:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20653:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "20564:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "20564:88:20"
																},
																"nativeSrc": "20564:93:20",
																"nodeType": "YulFunctionCall",
																"src": "20564:93:20"
															},
															"nativeSrc": "20564:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "20564:93:20"
														},
														{
															"nativeSrc": "20666:19:20",
															"nodeType": "YulAssignment",
															"src": "20666:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20677:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20677:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20682:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20682:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20673:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20673:3:20"
																},
																"nativeSrc": "20673:12:20",
																"nodeType": "YulFunctionCall",
																"src": "20673:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20666:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20666:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20325:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20459:3:20",
														"nodeType": "YulTypedName",
														"src": "20459:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20467:3:20",
														"nodeType": "YulTypedName",
														"src": "20467:3:20",
														"type": ""
													}
												],
												"src": "20325:366:20"
											},
											{
												"body": {
													"nativeSrc": "20868:248:20",
													"nodeType": "YulBlock",
													"src": "20868:248:20",
													"statements": [
														{
															"nativeSrc": "20878:26:20",
															"nodeType": "YulAssignment",
															"src": "20878:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20890:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "20890:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20901:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20901:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20886:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20886:3:20"
																},
																"nativeSrc": "20886:18:20",
																"nodeType": "YulFunctionCall",
																"src": "20886:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20878:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "20878:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20925:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20925:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20936:1:20",
																				"nodeType": "YulLiteral",
																				"src": "20936:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20921:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20921:3:20"
																		},
																		"nativeSrc": "20921:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20921:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20944:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "20944:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20950:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20950:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20940:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20940:3:20"
																		},
																		"nativeSrc": "20940:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20940:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20914:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20914:6:20"
																},
																"nativeSrc": "20914:47:20",
																"nodeType": "YulFunctionCall",
																"src": "20914:47:20"
															},
															"nativeSrc": "20914:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "20914:47:20"
														},
														{
															"nativeSrc": "20970:139:20",
															"nodeType": "YulAssignment",
															"src": "20970:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21104:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "21104:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20978:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "20978:124:20"
																},
																"nativeSrc": "20978:131:20",
																"nodeType": "YulFunctionCall",
																"src": "20978:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20970:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "20970:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20697:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20848:9:20",
														"nodeType": "YulTypedName",
														"src": "20848:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20863:4:20",
														"nodeType": "YulTypedName",
														"src": "20863:4:20",
														"type": ""
													}
												],
												"src": "20697:419:20"
											},
											{
												"body": {
													"nativeSrc": "21276:288:20",
													"nodeType": "YulBlock",
													"src": "21276:288:20",
													"statements": [
														{
															"nativeSrc": "21286:26:20",
															"nodeType": "YulAssignment",
															"src": "21286:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21298:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "21298:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21309:2:20",
																		"nodeType": "YulLiteral",
																		"src": "21309:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21294:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21294:3:20"
																},
																"nativeSrc": "21294:18:20",
																"nodeType": "YulFunctionCall",
																"src": "21294:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21286:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "21286:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21366:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21366:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21379:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "21379:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21390:1:20",
																				"nodeType": "YulLiteral",
																				"src": "21390:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21375:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21375:3:20"
																		},
																		"nativeSrc": "21375:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21375:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21322:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "21322:43:20"
																},
																"nativeSrc": "21322:71:20",
																"nodeType": "YulFunctionCall",
																"src": "21322:71:20"
															},
															"nativeSrc": "21322:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "21322:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21447:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21447:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21460:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "21460:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21471:2:20",
																				"nodeType": "YulLiteral",
																				"src": "21471:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21456:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21456:3:20"
																		},
																		"nativeSrc": "21456:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21456:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21403:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "21403:43:20"
																},
																"nativeSrc": "21403:72:20",
																"nodeType": "YulFunctionCall",
																"src": "21403:72:20"
															},
															"nativeSrc": "21403:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "21403:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21529:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21529:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21542:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "21542:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21553:2:20",
																				"nodeType": "YulLiteral",
																				"src": "21553:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21538:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21538:3:20"
																		},
																		"nativeSrc": "21538:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21538:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21485:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "21485:43:20"
																},
																"nativeSrc": "21485:72:20",
																"nodeType": "YulFunctionCall",
																"src": "21485:72:20"
															},
															"nativeSrc": "21485:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "21485:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21122:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21232:9:20",
														"nodeType": "YulTypedName",
														"src": "21232:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21244:6:20",
														"nodeType": "YulTypedName",
														"src": "21244:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21252:6:20",
														"nodeType": "YulTypedName",
														"src": "21252:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21260:6:20",
														"nodeType": "YulTypedName",
														"src": "21260:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21271:4:20",
														"nodeType": "YulTypedName",
														"src": "21271:4:20",
														"type": ""
													}
												],
												"src": "21122:442:20"
											},
											{
												"body": {
													"nativeSrc": "21624:87:20",
													"nodeType": "YulBlock",
													"src": "21624:87:20",
													"statements": [
														{
															"nativeSrc": "21634:11:20",
															"nodeType": "YulAssignment",
															"src": "21634:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "21642:3:20",
																"nodeType": "YulIdentifier",
																"src": "21642:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21634:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "21634:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21662:1:20",
																		"nodeType": "YulLiteral",
																		"src": "21662:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21665:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "21665:3:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21655:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21655:6:20"
																},
																"nativeSrc": "21655:14:20",
																"nodeType": "YulFunctionCall",
																"src": "21655:14:20"
															},
															"nativeSrc": "21655:14:20",
															"nodeType": "YulExpressionStatement",
															"src": "21655:14:20"
														},
														{
															"nativeSrc": "21678:26:20",
															"nodeType": "YulAssignment",
															"src": "21678:26:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21696:1:20",
																		"nodeType": "YulLiteral",
																		"src": "21696:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21699:4:20",
																		"nodeType": "YulLiteral",
																		"src": "21699:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "21686:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "21686:9:20"
																},
																"nativeSrc": "21686:18:20",
																"nodeType": "YulFunctionCall",
																"src": "21686:18:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21678:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "21678:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "21570:141:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21611:3:20",
														"nodeType": "YulTypedName",
														"src": "21611:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21619:4:20",
														"nodeType": "YulTypedName",
														"src": "21619:4:20",
														"type": ""
													}
												],
												"src": "21570:141:20"
											},
											{
												"body": {
													"nativeSrc": "21761:49:20",
													"nodeType": "YulBlock",
													"src": "21761:49:20",
													"statements": [
														{
															"nativeSrc": "21771:33:20",
															"nodeType": "YulAssignment",
															"src": "21771:33:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21789:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "21789:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21796:2:20",
																				"nodeType": "YulLiteral",
																				"src": "21796:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21785:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21785:3:20"
																		},
																		"nativeSrc": "21785:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21785:14:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21801:2:20",
																		"nodeType": "YulLiteral",
																		"src": "21801:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21781:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21781:3:20"
																},
																"nativeSrc": "21781:23:20",
																"nodeType": "YulFunctionCall",
																"src": "21781:23:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21771:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21771:6:20"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "21717:93:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21744:5:20",
														"nodeType": "YulTypedName",
														"src": "21744:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21754:6:20",
														"nodeType": "YulTypedName",
														"src": "21754:6:20",
														"type": ""
													}
												],
												"src": "21717:93:20"
											},
											{
												"body": {
													"nativeSrc": "21869:54:20",
													"nodeType": "YulBlock",
													"src": "21869:54:20",
													"statements": [
														{
															"nativeSrc": "21879:37:20",
															"nodeType": "YulAssignment",
															"src": "21879:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21904:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "21904:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21910:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "21910:5:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21900:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21900:3:20"
																},
																"nativeSrc": "21900:16:20",
																"nodeType": "YulFunctionCall",
																"src": "21900:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21879:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "21879:8:20"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "21816:107:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21844:4:20",
														"nodeType": "YulTypedName",
														"src": "21844:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21850:5:20",
														"nodeType": "YulTypedName",
														"src": "21850:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21860:8:20",
														"nodeType": "YulTypedName",
														"src": "21860:8:20",
														"type": ""
													}
												],
												"src": "21816:107:20"
											},
											{
												"body": {
													"nativeSrc": "22005:317:20",
													"nodeType": "YulBlock",
													"src": "22005:317:20",
													"statements": [
														{
															"nativeSrc": "22015:35:20",
															"nodeType": "YulVariableDeclaration",
															"src": "22015:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22036:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "22036:10:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22048:1:20",
																		"nodeType": "YulLiteral",
																		"src": "22048:1:20",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22032:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22032:3:20"
																},
																"nativeSrc": "22032:18:20",
																"nodeType": "YulFunctionCall",
																"src": "22032:18:20"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22019:9:20",
																	"nodeType": "YulTypedName",
																	"src": "22019:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22059:109:20",
															"nodeType": "YulVariableDeclaration",
															"src": "22059:109:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22090:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "22090:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22101:66:20",
																		"nodeType": "YulLiteral",
																		"src": "22101:66:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22071:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "22071:18:20"
																},
																"nativeSrc": "22071:97:20",
																"nodeType": "YulFunctionCall",
																"src": "22071:97:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22063:4:20",
																	"nodeType": "YulTypedName",
																	"src": "22063:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22177:51:20",
															"nodeType": "YulAssignment",
															"src": "22177:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22208:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "22208:9:20"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22219:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "22219:8:20"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22189:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "22189:18:20"
																},
																"nativeSrc": "22189:39:20",
																"nodeType": "YulFunctionCall",
																"src": "22189:39:20"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22177:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "22177:8:20"
																}
															]
														},
														{
															"nativeSrc": "22237:30:20",
															"nodeType": "YulAssignment",
															"src": "22237:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22250:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "22250:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22261:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "22261:4:20"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22257:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22257:3:20"
																		},
																		"nativeSrc": "22257:9:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22257:9:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22246:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22246:3:20"
																},
																"nativeSrc": "22246:21:20",
																"nodeType": "YulFunctionCall",
																"src": "22246:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22237:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "22237:5:20"
																}
															]
														},
														{
															"nativeSrc": "22276:40:20",
															"nodeType": "YulAssignment",
															"src": "22276:40:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22289:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "22289:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "22300:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "22300:8:20"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "22310:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "22310:4:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22296:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22296:3:20"
																		},
																		"nativeSrc": "22296:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22296:19:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22286:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "22286:2:20"
																},
																"nativeSrc": "22286:30:20",
																"nodeType": "YulFunctionCall",
																"src": "22286:30:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22276:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22276:6:20"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "21929:393:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21966:5:20",
														"nodeType": "YulTypedName",
														"src": "21966:5:20",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "21973:10:20",
														"nodeType": "YulTypedName",
														"src": "21973:10:20",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "21985:8:20",
														"nodeType": "YulTypedName",
														"src": "21985:8:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21998:6:20",
														"nodeType": "YulTypedName",
														"src": "21998:6:20",
														"type": ""
													}
												],
												"src": "21929:393:20"
											},
											{
												"body": {
													"nativeSrc": "22388:82:20",
													"nodeType": "YulBlock",
													"src": "22388:82:20",
													"statements": [
														{
															"nativeSrc": "22398:66:20",
															"nodeType": "YulAssignment",
															"src": "22398:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22456:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "22456:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22438:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "22438:17:20"
																				},
																				"nativeSrc": "22438:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "22438:24:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22429:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "22429:8:20"
																		},
																		"nativeSrc": "22429:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22429:34:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22411:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "22411:17:20"
																},
																"nativeSrc": "22411:53:20",
																"nodeType": "YulFunctionCall",
																"src": "22411:53:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22398:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "22398:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "22328:142:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22368:5:20",
														"nodeType": "YulTypedName",
														"src": "22368:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "22378:9:20",
														"nodeType": "YulTypedName",
														"src": "22378:9:20",
														"type": ""
													}
												],
												"src": "22328:142:20"
											},
											{
												"body": {
													"nativeSrc": "22523:28:20",
													"nodeType": "YulBlock",
													"src": "22523:28:20",
													"statements": [
														{
															"nativeSrc": "22533:12:20",
															"nodeType": "YulAssignment",
															"src": "22533:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "22540:5:20",
																"nodeType": "YulIdentifier",
																"src": "22540:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22533:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22533:3:20"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22476:75:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22509:5:20",
														"nodeType": "YulTypedName",
														"src": "22509:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22519:3:20",
														"nodeType": "YulTypedName",
														"src": "22519:3:20",
														"type": ""
													}
												],
												"src": "22476:75:20"
											},
											{
												"body": {
													"nativeSrc": "22633:193:20",
													"nodeType": "YulBlock",
													"src": "22633:193:20",
													"statements": [
														{
															"nativeSrc": "22643:63:20",
															"nodeType": "YulVariableDeclaration",
															"src": "22643:63:20",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "22698:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "22698:7:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "22667:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "22667:30:20"
																},
																"nativeSrc": "22667:39:20",
																"nodeType": "YulFunctionCall",
																"src": "22667:39:20"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "22647:16:20",
																	"nodeType": "YulTypedName",
																	"src": "22647:16:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22722:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "22722:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "22762:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "22762:4:20"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "22756:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "22756:5:20"
																				},
																				"nativeSrc": "22756:11:20",
																				"nodeType": "YulFunctionCall",
																				"src": "22756:11:20"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "22769:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "22769:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "22801:16:20",
																						"nodeType": "YulIdentifier",
																						"src": "22801:16:20"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "22777:23:20",
																					"nodeType": "YulIdentifier",
																					"src": "22777:23:20"
																				},
																				"nativeSrc": "22777:41:20",
																				"nodeType": "YulFunctionCall",
																				"src": "22777:41:20"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "22728:27:20",
																			"nodeType": "YulIdentifier",
																			"src": "22728:27:20"
																		},
																		"nativeSrc": "22728:91:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22728:91:20"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "22715:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22715:6:20"
																},
																"nativeSrc": "22715:105:20",
																"nodeType": "YulFunctionCall",
																"src": "22715:105:20"
															},
															"nativeSrc": "22715:105:20",
															"nodeType": "YulExpressionStatement",
															"src": "22715:105:20"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "22557:269:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22610:4:20",
														"nodeType": "YulTypedName",
														"src": "22610:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22616:6:20",
														"nodeType": "YulTypedName",
														"src": "22616:6:20",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "22624:7:20",
														"nodeType": "YulTypedName",
														"src": "22624:7:20",
														"type": ""
													}
												],
												"src": "22557:269:20"
											},
											{
												"body": {
													"nativeSrc": "22881:24:20",
													"nodeType": "YulBlock",
													"src": "22881:24:20",
													"statements": [
														{
															"nativeSrc": "22891:8:20",
															"nodeType": "YulAssignment",
															"src": "22891:8:20",
															"value": {
																"kind": "number",
																"nativeSrc": "22898:1:20",
																"nodeType": "YulLiteral",
																"src": "22898:1:20",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22891:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22891:3:20"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "22832:73:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22877:3:20",
														"nodeType": "YulTypedName",
														"src": "22877:3:20",
														"type": ""
													}
												],
												"src": "22832:73:20"
											},
											{
												"body": {
													"nativeSrc": "22964:136:20",
													"nodeType": "YulBlock",
													"src": "22964:136:20",
													"statements": [
														{
															"nativeSrc": "22974:46:20",
															"nodeType": "YulVariableDeclaration",
															"src": "22974:46:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "22988:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "22988:30:20"
																},
																"nativeSrc": "22988:32:20",
																"nodeType": "YulFunctionCall",
																"src": "22988:32:20"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "22978:6:20",
																	"nodeType": "YulTypedName",
																	"src": "22978:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23073:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "23073:4:20"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23079:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "23079:6:20"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23087:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "23087:6:20"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23029:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "23029:43:20"
																},
																"nativeSrc": "23029:65:20",
																"nodeType": "YulFunctionCall",
																"src": "23029:65:20"
															},
															"nativeSrc": "23029:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "23029:65:20"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "22911:189:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22950:4:20",
														"nodeType": "YulTypedName",
														"src": "22950:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22956:6:20",
														"nodeType": "YulTypedName",
														"src": "22956:6:20",
														"type": ""
													}
												],
												"src": "22911:189:20"
											},
											{
												"body": {
													"nativeSrc": "23156:136:20",
													"nodeType": "YulBlock",
													"src": "23156:136:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "23223:63:20",
																"nodeType": "YulBlock",
																"src": "23223:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23267:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "23267:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23274:1:20",
																					"nodeType": "YulLiteral",
																					"src": "23274:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "23237:29:20",
																				"nodeType": "YulIdentifier",
																				"src": "23237:29:20"
																			},
																			"nativeSrc": "23237:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23237:39:20"
																		},
																		"nativeSrc": "23237:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "23237:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23176:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "23176:5:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23183:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "23183:3:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23173:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "23173:2:20"
																},
																"nativeSrc": "23173:14:20",
																"nodeType": "YulFunctionCall",
																"src": "23173:14:20"
															},
															"nativeSrc": "23166:120:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23188:26:20",
																"nodeType": "YulBlock",
																"src": "23188:26:20",
																"statements": [
																	{
																		"nativeSrc": "23190:22:20",
																		"nodeType": "YulAssignment",
																		"src": "23190:22:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23203:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "23203:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23210:1:20",
																					"nodeType": "YulLiteral",
																					"src": "23210:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23199:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "23199:3:20"
																			},
																			"nativeSrc": "23199:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23199:13:20"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23190:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "23190:5:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23170:2:20",
																"nodeType": "YulBlock",
																"src": "23170:2:20",
																"statements": []
															},
															"src": "23166:120:20"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23106:186:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23144:5:20",
														"nodeType": "YulTypedName",
														"src": "23144:5:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23151:3:20",
														"nodeType": "YulTypedName",
														"src": "23151:3:20",
														"type": ""
													}
												],
												"src": "23106:186:20"
											},
											{
												"body": {
													"nativeSrc": "23377:464:20",
													"nodeType": "YulBlock",
													"src": "23377:464:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "23403:431:20",
																"nodeType": "YulBlock",
																"src": "23403:431:20",
																"statements": [
																	{
																		"nativeSrc": "23417:54:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23417:54:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23465:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "23465:5:20"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23433:31:20",
																				"nodeType": "YulIdentifier",
																				"src": "23433:31:20"
																			},
																			"nativeSrc": "23433:38:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23433:38:20"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23421:8:20",
																				"nodeType": "YulTypedName",
																				"src": "23421:8:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23484:63:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23484:63:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23507:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "23507:8:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "23535:10:20",
																							"nodeType": "YulIdentifier",
																							"src": "23535:10:20"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23517:17:20",
																						"nodeType": "YulIdentifier",
																						"src": "23517:17:20"
																					},
																					"nativeSrc": "23517:29:20",
																					"nodeType": "YulFunctionCall",
																					"src": "23517:29:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23503:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "23503:3:20"
																			},
																			"nativeSrc": "23503:44:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23503:44:20"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23488:11:20",
																				"nodeType": "YulTypedName",
																				"src": "23488:11:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "23704:27:20",
																			"nodeType": "YulBlock",
																			"src": "23704:27:20",
																			"statements": [
																				{
																					"nativeSrc": "23706:23:20",
																					"nodeType": "YulAssignment",
																					"src": "23706:23:20",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "23721:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "23721:8:20"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "23706:11:20",
																							"nodeType": "YulIdentifier",
																							"src": "23706:11:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "23688:10:20",
																					"nodeType": "YulIdentifier",
																					"src": "23688:10:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23700:2:20",
																					"nodeType": "YulLiteral",
																					"src": "23700:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "23685:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "23685:2:20"
																			},
																			"nativeSrc": "23685:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23685:18:20"
																		},
																		"nativeSrc": "23682:49:20",
																		"nodeType": "YulIf",
																		"src": "23682:49:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "23773:11:20",
																					"nodeType": "YulIdentifier",
																					"src": "23773:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "23790:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "23790:8:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "23818:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "23818:3:20"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "23800:17:20",
																								"nodeType": "YulIdentifier",
																								"src": "23800:17:20"
																							},
																							"nativeSrc": "23800:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "23800:22:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23786:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "23786:3:20"
																					},
																					"nativeSrc": "23786:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "23786:37:20"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "23744:28:20",
																				"nodeType": "YulIdentifier",
																				"src": "23744:28:20"
																			},
																			"nativeSrc": "23744:80:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23744:80:20"
																		},
																		"nativeSrc": "23744:80:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "23744:80:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23394:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "23394:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23399:2:20",
																		"nodeType": "YulLiteral",
																		"src": "23399:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23391:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "23391:2:20"
																},
																"nativeSrc": "23391:11:20",
																"nodeType": "YulFunctionCall",
																"src": "23391:11:20"
															},
															"nativeSrc": "23388:446:20",
															"nodeType": "YulIf",
															"src": "23388:446:20"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "23298:543:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23353:5:20",
														"nodeType": "YulTypedName",
														"src": "23353:5:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23360:3:20",
														"nodeType": "YulTypedName",
														"src": "23360:3:20",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23365:10:20",
														"nodeType": "YulTypedName",
														"src": "23365:10:20",
														"type": ""
													}
												],
												"src": "23298:543:20"
											},
											{
												"body": {
													"nativeSrc": "23910:54:20",
													"nodeType": "YulBlock",
													"src": "23910:54:20",
													"statements": [
														{
															"nativeSrc": "23920:37:20",
															"nodeType": "YulAssignment",
															"src": "23920:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23945:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "23945:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23951:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "23951:5:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "23941:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23941:3:20"
																},
																"nativeSrc": "23941:16:20",
																"nodeType": "YulFunctionCall",
																"src": "23941:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23920:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "23920:8:20"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "23847:117:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23885:4:20",
														"nodeType": "YulTypedName",
														"src": "23885:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23891:5:20",
														"nodeType": "YulTypedName",
														"src": "23891:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23901:8:20",
														"nodeType": "YulTypedName",
														"src": "23901:8:20",
														"type": ""
													}
												],
												"src": "23847:117:20"
											},
											{
												"body": {
													"nativeSrc": "24021:118:20",
													"nodeType": "YulBlock",
													"src": "24021:118:20",
													"statements": [
														{
															"nativeSrc": "24031:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "24031:68:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24080:1:20",
																						"nodeType": "YulLiteral",
																						"src": "24080:1:20",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24083:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "24083:5:20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24076:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "24076:3:20"
																				},
																				"nativeSrc": "24076:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "24076:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24095:1:20",
																						"nodeType": "YulLiteral",
																						"src": "24095:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24091:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "24091:3:20"
																				},
																				"nativeSrc": "24091:6:20",
																				"nodeType": "YulFunctionCall",
																				"src": "24091:6:20"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24047:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "24047:28:20"
																		},
																		"nativeSrc": "24047:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24047:51:20"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24043:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24043:3:20"
																},
																"nativeSrc": "24043:56:20",
																"nodeType": "YulFunctionCall",
																"src": "24043:56:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24035:4:20",
																	"nodeType": "YulTypedName",
																	"src": "24035:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24108:25:20",
															"nodeType": "YulAssignment",
															"src": "24108:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24122:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24122:4:20"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24128:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24128:4:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24118:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24118:3:20"
																},
																"nativeSrc": "24118:15:20",
																"nodeType": "YulFunctionCall",
																"src": "24118:15:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24108:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "24108:6:20"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "23970:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23998:4:20",
														"nodeType": "YulTypedName",
														"src": "23998:4:20",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24004:5:20",
														"nodeType": "YulTypedName",
														"src": "24004:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24014:6:20",
														"nodeType": "YulTypedName",
														"src": "24014:6:20",
														"type": ""
													}
												],
												"src": "23970:169:20"
											},
											{
												"body": {
													"nativeSrc": "24225:214:20",
													"nodeType": "YulBlock",
													"src": "24225:214:20",
													"statements": [
														{
															"nativeSrc": "24358:37:20",
															"nodeType": "YulAssignment",
															"src": "24358:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24385:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24385:4:20"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24391:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "24391:3:20"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "24366:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "24366:18:20"
																},
																"nativeSrc": "24366:29:20",
																"nodeType": "YulFunctionCall",
																"src": "24366:29:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24358:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "24358:4:20"
																}
															]
														},
														{
															"nativeSrc": "24404:29:20",
															"nodeType": "YulAssignment",
															"src": "24404:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24415:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24415:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24425:1:20",
																				"nodeType": "YulLiteral",
																				"src": "24425:1:20",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24428:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "24428:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24421:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24421:3:20"
																		},
																		"nativeSrc": "24421:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24421:11:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24412:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "24412:2:20"
																},
																"nativeSrc": "24412:21:20",
																"nodeType": "YulFunctionCall",
																"src": "24412:21:20"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24404:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "24404:4:20"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24144:295:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24206:4:20",
														"nodeType": "YulTypedName",
														"src": "24206:4:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24212:3:20",
														"nodeType": "YulTypedName",
														"src": "24212:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24220:4:20",
														"nodeType": "YulTypedName",
														"src": "24220:4:20",
														"type": ""
													}
												],
												"src": "24144:295:20"
											},
											{
												"body": {
													"nativeSrc": "24536:1303:20",
													"nodeType": "YulBlock",
													"src": "24536:1303:20",
													"statements": [
														{
															"nativeSrc": "24547:51:20",
															"nodeType": "YulVariableDeclaration",
															"src": "24547:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24594:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "24594:3:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24561:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "24561:32:20"
																},
																"nativeSrc": "24561:37:20",
																"nodeType": "YulFunctionCall",
																"src": "24561:37:20"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24551:6:20",
																	"nodeType": "YulTypedName",
																	"src": "24551:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24683:22:20",
																"nodeType": "YulBlock",
																"src": "24683:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "24685:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "24685:16:20"
																			},
																			"nativeSrc": "24685:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "24685:18:20"
																		},
																		"nativeSrc": "24685:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "24685:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24655:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "24655:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24663:18:20",
																		"nodeType": "YulLiteral",
																		"src": "24663:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24652:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "24652:2:20"
																},
																"nativeSrc": "24652:30:20",
																"nodeType": "YulFunctionCall",
																"src": "24652:30:20"
															},
															"nativeSrc": "24649:56:20",
															"nodeType": "YulIf",
															"src": "24649:56:20"
														},
														{
															"nativeSrc": "24715:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "24715:52:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "24761:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "24761:4:20"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "24755:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "24755:5:20"
																		},
																		"nativeSrc": "24755:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24755:11:20"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24729:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "24729:25:20"
																},
																"nativeSrc": "24729:38:20",
																"nodeType": "YulFunctionCall",
																"src": "24729:38:20"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "24719:6:20",
																	"nodeType": "YulTypedName",
																	"src": "24719:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24860:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24860:4:20"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "24866:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "24866:6:20"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "24874:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "24874:6:20"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "24814:45:20",
																	"nodeType": "YulIdentifier",
																	"src": "24814:45:20"
																},
																"nativeSrc": "24814:67:20",
																"nodeType": "YulFunctionCall",
																"src": "24814:67:20"
															},
															"nativeSrc": "24814:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "24814:67:20"
														},
														{
															"nativeSrc": "24891:18:20",
															"nodeType": "YulVariableDeclaration",
															"src": "24891:18:20",
															"value": {
																"kind": "number",
																"nativeSrc": "24908:1:20",
																"nodeType": "YulLiteral",
																"src": "24908:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24895:9:20",
																	"nodeType": "YulTypedName",
																	"src": "24895:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24919:17:20",
															"nodeType": "YulAssignment",
															"src": "24919:17:20",
															"value": {
																"kind": "number",
																"nativeSrc": "24932:4:20",
																"nodeType": "YulLiteral",
																"src": "24932:4:20",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24919:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "24919:9:20"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24983:611:20",
																		"nodeType": "YulBlock",
																		"src": "24983:611:20",
																		"statements": [
																			{
																				"nativeSrc": "24997:37:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24997:37:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25016:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "25016:6:20"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25028:4:20",
																									"nodeType": "YulLiteral",
																									"src": "25028:4:20",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25024:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "25024:3:20"
																							},
																							"nativeSrc": "25024:9:20",
																							"nodeType": "YulFunctionCall",
																							"src": "25024:9:20"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25012:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "25012:3:20"
																					},
																					"nativeSrc": "25012:22:20",
																					"nodeType": "YulFunctionCall",
																					"src": "25012:22:20"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25001:7:20",
																						"nodeType": "YulTypedName",
																						"src": "25001:7:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25048:51:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25048:51:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25094:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "25094:4:20"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25062:31:20",
																						"nodeType": "YulIdentifier",
																						"src": "25062:31:20"
																					},
																					"nativeSrc": "25062:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "25062:37:20"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25052:6:20",
																						"nodeType": "YulTypedName",
																						"src": "25052:6:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25112:10:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25112:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25121:1:20",
																					"nodeType": "YulLiteral",
																					"src": "25121:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25116:1:20",
																						"nodeType": "YulTypedName",
																						"src": "25116:1:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25180:163:20",
																					"nodeType": "YulBlock",
																					"src": "25180:163:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25205:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "25205:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25223:3:20",
																														"nodeType": "YulIdentifier",
																														"src": "25223:3:20"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25228:9:20",
																														"nodeType": "YulIdentifier",
																														"src": "25228:9:20"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25219:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "25219:3:20"
																												},
																												"nativeSrc": "25219:19:20",
																												"nodeType": "YulFunctionCall",
																												"src": "25219:19:20"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25213:5:20",
																											"nodeType": "YulIdentifier",
																											"src": "25213:5:20"
																										},
																										"nativeSrc": "25213:26:20",
																										"nodeType": "YulFunctionCall",
																										"src": "25213:26:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25198:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "25198:6:20"
																								},
																								"nativeSrc": "25198:42:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25198:42:20"
																							},
																							"nativeSrc": "25198:42:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "25198:42:20"
																						},
																						{
																							"nativeSrc": "25257:24:20",
																							"nodeType": "YulAssignment",
																							"src": "25257:24:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25271:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "25271:6:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25279:1:20",
																										"nodeType": "YulLiteral",
																										"src": "25279:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25267:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "25267:3:20"
																								},
																								"nativeSrc": "25267:14:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25267:14:20"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25257:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "25257:6:20"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25298:31:20",
																							"nodeType": "YulAssignment",
																							"src": "25298:31:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25315:9:20",
																										"nodeType": "YulIdentifier",
																										"src": "25315:9:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25326:2:20",
																										"nodeType": "YulLiteral",
																										"src": "25326:2:20",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25311:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "25311:3:20"
																								},
																								"nativeSrc": "25311:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25311:18:20"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25298:9:20",
																									"nodeType": "YulIdentifier",
																									"src": "25298:9:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25146:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "25146:1:20"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25149:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "25149:7:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25143:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "25143:2:20"
																					},
																					"nativeSrc": "25143:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "25143:14:20"
																				},
																				"nativeSrc": "25135:208:20",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25158:21:20",
																					"nodeType": "YulBlock",
																					"src": "25158:21:20",
																					"statements": [
																						{
																							"nativeSrc": "25160:17:20",
																							"nodeType": "YulAssignment",
																							"src": "25160:17:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25169:1:20",
																										"nodeType": "YulIdentifier",
																										"src": "25169:1:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25172:4:20",
																										"nodeType": "YulLiteral",
																										"src": "25172:4:20",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25165:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "25165:3:20"
																								},
																								"nativeSrc": "25165:12:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25165:12:20"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25160:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "25160:1:20"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25139:3:20",
																					"nodeType": "YulBlock",
																					"src": "25139:3:20",
																					"statements": []
																				},
																				"src": "25135:208:20"
																			},
																			{
																				"body": {
																					"nativeSrc": "25379:156:20",
																					"nodeType": "YulBlock",
																					"src": "25379:156:20",
																					"statements": [
																						{
																							"nativeSrc": "25397:43:20",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25397:43:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25424:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "25424:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25429:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "25429:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25420:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "25420:3:20"
																										},
																										"nativeSrc": "25420:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "25420:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25414:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "25414:5:20"
																								},
																								"nativeSrc": "25414:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25414:26:20"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25401:9:20",
																									"nodeType": "YulTypedName",
																									"src": "25401:9:20",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25464:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "25464:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25491:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "25491:9:20"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25506:6:20",
																														"nodeType": "YulIdentifier",
																														"src": "25506:6:20"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25514:4:20",
																														"nodeType": "YulLiteral",
																														"src": "25514:4:20",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25502:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "25502:3:20"
																												},
																												"nativeSrc": "25502:17:20",
																												"nodeType": "YulFunctionCall",
																												"src": "25502:17:20"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25472:18:20",
																											"nodeType": "YulIdentifier",
																											"src": "25472:18:20"
																										},
																										"nativeSrc": "25472:48:20",
																										"nodeType": "YulFunctionCall",
																										"src": "25472:48:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25457:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "25457:6:20"
																								},
																								"nativeSrc": "25457:64:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25457:64:20"
																							},
																							"nativeSrc": "25457:64:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "25457:64:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25362:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "25362:7:20"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25371:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "25371:6:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25359:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "25359:2:20"
																					},
																					"nativeSrc": "25359:19:20",
																					"nodeType": "YulFunctionCall",
																					"src": "25359:19:20"
																				},
																				"nativeSrc": "25356:179:20",
																				"nodeType": "YulIf",
																				"src": "25356:179:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25555:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "25555:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "25569:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "25569:6:20"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25577:1:20",
																											"nodeType": "YulLiteral",
																											"src": "25577:1:20",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "25565:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "25565:3:20"
																									},
																									"nativeSrc": "25565:14:20",
																									"nodeType": "YulFunctionCall",
																									"src": "25565:14:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25581:1:20",
																									"nodeType": "YulLiteral",
																									"src": "25581:1:20",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25561:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "25561:3:20"
																							},
																							"nativeSrc": "25561:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "25561:22:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25548:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "25548:6:20"
																					},
																					"nativeSrc": "25548:36:20",
																					"nodeType": "YulFunctionCall",
																					"src": "25548:36:20"
																				},
																				"nativeSrc": "25548:36:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "25548:36:20"
																			}
																		]
																	},
																	"nativeSrc": "24976:618:20",
																	"nodeType": "YulCase",
																	"src": "24976:618:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24981:1:20",
																		"nodeType": "YulLiteral",
																		"src": "24981:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25611:222:20",
																		"nodeType": "YulBlock",
																		"src": "25611:222:20",
																		"statements": [
																			{
																				"nativeSrc": "25625:14:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25625:14:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25638:1:20",
																					"nodeType": "YulLiteral",
																					"src": "25638:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "25629:5:20",
																						"nodeType": "YulTypedName",
																						"src": "25629:5:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25662:67:20",
																					"nodeType": "YulBlock",
																					"src": "25662:67:20",
																					"statements": [
																						{
																							"nativeSrc": "25680:35:20",
																							"nodeType": "YulAssignment",
																							"src": "25680:35:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25699:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "25699:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25704:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "25704:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25695:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "25695:3:20"
																										},
																										"nativeSrc": "25695:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "25695:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25689:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "25689:5:20"
																								},
																								"nativeSrc": "25689:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "25689:26:20"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "25680:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "25680:5:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "25655:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "25655:6:20"
																				},
																				"nativeSrc": "25652:77:20",
																				"nodeType": "YulIf",
																				"src": "25652:77:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25749:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "25749:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25808:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "25808:5:20"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25815:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "25815:6:20"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "25755:52:20",
																								"nodeType": "YulIdentifier",
																								"src": "25755:52:20"
																							},
																							"nativeSrc": "25755:67:20",
																							"nodeType": "YulFunctionCall",
																							"src": "25755:67:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25742:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "25742:6:20"
																					},
																					"nativeSrc": "25742:81:20",
																					"nodeType": "YulFunctionCall",
																					"src": "25742:81:20"
																				},
																				"nativeSrc": "25742:81:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "25742:81:20"
																			}
																		]
																	},
																	"nativeSrc": "25603:230:20",
																	"nodeType": "YulCase",
																	"src": "25603:230:20",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24956:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "24956:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24964:2:20",
																		"nodeType": "YulLiteral",
																		"src": "24964:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24953:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "24953:2:20"
																},
																"nativeSrc": "24953:14:20",
																"nodeType": "YulFunctionCall",
																"src": "24953:14:20"
															},
															"nativeSrc": "24946:887:20",
															"nodeType": "YulSwitch",
															"src": "24946:887:20"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24444:1395:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24525:4:20",
														"nodeType": "YulTypedName",
														"src": "24525:4:20",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24531:3:20",
														"nodeType": "YulTypedName",
														"src": "24531:3:20",
														"type": ""
													}
												],
												"src": "24444:1395:20"
											},
											{
												"body": {
													"nativeSrc": "25903:40:20",
													"nodeType": "YulBlock",
													"src": "25903:40:20",
													"statements": [
														{
															"nativeSrc": "25914:22:20",
															"nodeType": "YulAssignment",
															"src": "25914:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25930:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "25930:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25924:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "25924:5:20"
																},
																"nativeSrc": "25924:12:20",
																"nodeType": "YulFunctionCall",
																"src": "25924:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "25914:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "25914:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "25845:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25886:5:20",
														"nodeType": "YulTypedName",
														"src": "25886:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "25896:6:20",
														"nodeType": "YulTypedName",
														"src": "25896:6:20",
														"type": ""
													}
												],
												"src": "25845:98:20"
											},
											{
												"body": {
													"nativeSrc": "26062:34:20",
													"nodeType": "YulBlock",
													"src": "26062:34:20",
													"statements": [
														{
															"nativeSrc": "26072:18:20",
															"nodeType": "YulAssignment",
															"src": "26072:18:20",
															"value": {
																"name": "pos",
																"nativeSrc": "26087:3:20",
																"nodeType": "YulIdentifier",
																"src": "26087:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26072:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "26072:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25949:147:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26034:3:20",
														"nodeType": "YulTypedName",
														"src": "26034:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26039:6:20",
														"nodeType": "YulTypedName",
														"src": "26039:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "26050:11:20",
														"nodeType": "YulTypedName",
														"src": "26050:11:20",
														"type": ""
													}
												],
												"src": "25949:147:20"
											},
											{
												"body": {
													"nativeSrc": "26210:278:20",
													"nodeType": "YulBlock",
													"src": "26210:278:20",
													"statements": [
														{
															"nativeSrc": "26220:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "26220:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26266:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "26266:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "26234:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "26234:31:20"
																},
																"nativeSrc": "26234:38:20",
																"nodeType": "YulFunctionCall",
																"src": "26234:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26224:6:20",
																	"nodeType": "YulTypedName",
																	"src": "26224:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26281:95:20",
															"nodeType": "YulAssignment",
															"src": "26281:95:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26364:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26364:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26369:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "26369:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26288:75:20",
																	"nodeType": "YulIdentifier",
																	"src": "26288:75:20"
																},
																"nativeSrc": "26288:88:20",
																"nodeType": "YulFunctionCall",
																"src": "26288:88:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26281:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26281:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26424:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "26424:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26431:4:20",
																				"nodeType": "YulLiteral",
																				"src": "26431:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26420:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "26420:3:20"
																		},
																		"nativeSrc": "26420:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "26420:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26438:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26438:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26443:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "26443:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "26385:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "26385:34:20"
																},
																"nativeSrc": "26385:65:20",
																"nodeType": "YulFunctionCall",
																"src": "26385:65:20"
															},
															"nativeSrc": "26385:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "26385:65:20"
														},
														{
															"nativeSrc": "26459:23:20",
															"nodeType": "YulAssignment",
															"src": "26459:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26470:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26470:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26475:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "26475:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26466:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26466:3:20"
																},
																"nativeSrc": "26466:16:20",
																"nodeType": "YulFunctionCall",
																"src": "26466:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26459:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26459:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "26102:386:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26191:5:20",
														"nodeType": "YulTypedName",
														"src": "26191:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26198:3:20",
														"nodeType": "YulTypedName",
														"src": "26198:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26206:3:20",
														"nodeType": "YulTypedName",
														"src": "26206:3:20",
														"type": ""
													}
												],
												"src": "26102:386:20"
											},
											{
												"body": {
													"nativeSrc": "26628:137:20",
													"nodeType": "YulBlock",
													"src": "26628:137:20",
													"statements": [
														{
															"nativeSrc": "26639:100:20",
															"nodeType": "YulAssignment",
															"src": "26639:100:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26726:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "26726:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26735:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26735:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26646:79:20",
																	"nodeType": "YulIdentifier",
																	"src": "26646:79:20"
																},
																"nativeSrc": "26646:93:20",
																"nodeType": "YulFunctionCall",
																"src": "26646:93:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26639:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26639:3:20"
																}
															]
														},
														{
															"nativeSrc": "26749:10:20",
															"nodeType": "YulAssignment",
															"src": "26749:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "26756:3:20",
																"nodeType": "YulIdentifier",
																"src": "26756:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26749:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26749:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "26494:271:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26607:3:20",
														"nodeType": "YulTypedName",
														"src": "26607:3:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26613:6:20",
														"nodeType": "YulTypedName",
														"src": "26613:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26624:3:20",
														"nodeType": "YulTypedName",
														"src": "26624:3:20",
														"type": ""
													}
												],
												"src": "26494:271:20"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No fees to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 6686
									},
									{
										"length": 32,
										"start": 6771
									},
									{
										"length": 32,
										"start": 7248
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061023a575f3560e01c80635c975abb1161012d578063ad3cb1cc116100aa578063d73792a91161006e578063d73792a914610820578063dd62ed3e1461084a578063e63ab1e914610886578063e723422d146108b0578063f72c0d8b146108d85761023a565b8063ad3cb1cc14610752578063bed998501461077c578063c60b494f146107a6578063c76af7b0146107ce578063d547741f146107f85761023a565b806391d14854116100f157806391d148541461065c57806395d89b4114610698578063a217fddf146106c2578063a9059cbb146106ec578063acb2ad6f146107285761023a565b80635c975abb1461059057806370a08231146105ba5780637e77c503146105f65780638456cb591461061e5780638f02bb5b146106345761023a565b806336568abe116101bb5780634f1ef2861161017f5780634f1ef286146104cc578063504b82bf146104e857806352d1902d1461051257806355b593f11461053c578063587f5ed7146105665761023a565b806336568abe146104265780633f4ba83a1461044e5780634690484014610464578063476343ee1461048e578063492ef538146104a45761023a565b806323b872dd1161020257806323b872dd14610332578063248a9ca31461036e5780632f2ff15d146103aa578063313ce567146103d257806332cb6b0c146103fc5761023a565b806301ffc9a71461023e57806306fdde031461027a578063095ea7b3146102a457806318160ddd146102e0578063189d165e1461030a575b5f80fd5b348015610249575f80fd5b50610264600480360381019061025f9190612783565b610902565b60405161027191906127c8565b60405180910390f35b348015610285575f80fd5b5061028e61097b565b60405161029b9190612851565b60405180910390f35b3480156102af575f80fd5b506102ca60048036038101906102c591906128fe565b610a19565b6040516102d791906127c8565b60405180910390f35b3480156102eb575f80fd5b506102f4610a3b565b604051610301919061294b565b60405180910390f35b348015610315575f80fd5b50610330600480360381019061032b9190612964565b610a52565b005b34801561033d575f80fd5b506103586004803603810190610353919061298f565b610aa0565b60405161036591906127c8565b60405180910390f35b348015610379575f80fd5b50610394600480360381019061038f9190612a12565b610af1565b6040516103a19190612a4c565b60405180910390f35b3480156103b5575f80fd5b506103d060048036038101906103cb9190612a65565b610b1b565b005b3480156103dd575f80fd5b506103e6610b3d565b6040516103f39190612abe565b60405180910390f35b348015610407575f80fd5b50610410610b45565b60405161041d919061294b565b60405180910390f35b348015610431575f80fd5b5061044c60048036038101906104479190612a65565b610b53565b005b348015610459575f80fd5b50610462610bce565b005b34801561046f575f80fd5b50610478610c03565b6040516104859190612ae6565b60405180910390f35b348015610499575f80fd5b506104a2610c28565b005b3480156104af575f80fd5b506104ca60048036038101906104c59190612aff565b610d2a565b005b6104e660048036038101906104e19190612c56565b610d7a565b005b3480156104f3575f80fd5b506104fc610d99565b6040516105099190612ae6565b60405180910390f35b34801561051d575f80fd5b50610526610dbe565b6040516105339190612a4c565b60405180910390f35b348015610547575f80fd5b50610550610def565b60405161055d9190612ae6565b60405180910390f35b348015610571575f80fd5b5061057a610e14565b604051610587919061294b565b60405180910390f35b34801561059b575f80fd5b506105a4610e1a565b6040516105b191906127c8565b60405180910390f35b3480156105c5575f80fd5b506105e060048036038101906105db9190612aff565b610e2e565b6040516105ed919061294b565b60405180910390f35b348015610601575f80fd5b5061061c60048036038101906106179190612d4e565b610e81565b005b348015610629575f80fd5b506106326110dc565b005b34801561063f575f80fd5b5061065a60048036038101906106559190612964565b611111565b005b348015610667575f80fd5b50610682600480360381019061067d9190612a65565b61115f565b60405161068f91906127c8565b60405180910390f35b3480156106a3575f80fd5b506106ac6111d0565b6040516106b99190612851565b60405180910390f35b3480156106cd575f80fd5b506106d661126e565b6040516106e39190612a4c565b60405180910390f35b3480156106f7575f80fd5b50610712600480360381019061070d91906128fe565b611274565b60405161071f91906127c8565b60405180910390f35b348015610733575f80fd5b5061073c611299565b604051610749919061294b565b60405180910390f35b34801561075d575f80fd5b5061076661129f565b6040516107739190612851565b60405180910390f35b348015610787575f80fd5b506107906112d8565b60405161079d919061294b565b60405180910390f35b3480156107b1575f80fd5b506107cc60048036038101906107c79190612aff565b6112de565b005b3480156107d9575f80fd5b506107e261132e565b6040516107ef9190612ae6565b60405180910390f35b348015610803575f80fd5b5061081e60048036038101906108199190612a65565b611353565b005b34801561082b575f80fd5b50610834611375565b604051610841919061294b565b60405180910390f35b348015610855575f80fd5b50610870600480360381019061086b9190612dfd565b61137b565b60405161087d919061294b565b60405180910390f35b348015610891575f80fd5b5061089a61140b565b6040516108a79190612a4c565b60405180910390f35b3480156108bb575f80fd5b506108d660048036038101906108d19190612aff565b61142f565b005b3480156108e3575f80fd5b506108ec61147f565b6040516108f99190612a4c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109745750610973826114a3565b5b9050919050565b60605f61098661150c565b905080600301805461099790612e68565b80601f01602080910402602001604051908101604052809291908181526020018280546109c390612e68565b8015610a0e5780601f106109e557610100808354040283529160200191610a0e565b820191905f5260205f20905b8154815290600101906020018083116109f157829003601f168201915b505050505091505090565b5f80610a23611533565b9050610a3081858561153a565b600191505092915050565b5f80610a4561150c565b9050806002015491505090565b5f801b610a5e8161154c565b816033819055507f47863b595116a31383855975a4078913dce7881e717b75a06ced2db5d534ff7882604051610a94919061294b565b60405180910390a15050565b5f610aa9611560565b610ab48484846115aa565b5f610ac685610ac1611533565b61137b565b9050610ae585610ad4611533565b8584610ae09190612ec5565b61153a565b60019150509392505050565b5f80610afb6116b5565b9050805f015f8481526020019081526020015f2060010154915050919050565b610b2482610af1565b610b2d8161154c565b610b3783836116dc565b50505050565b5f6012905090565b69d3c21bcecceda100000081565b610b5b611533565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bbf576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bc982826117d4565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610bf88161154c565b610c006118cc565b50565b60345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f801b610c348161154c565b610c3c611560565b5f60355490505f8111610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90612f42565b60405180910390fd5b5f603581905550610cb73060345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361192c565b60345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a82604051610d1e919061294b565b60405180910390a25050565b5f801b610d368161154c565b8160385f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610d82611a1c565b610d8b82611b02565b610d958282611b30565b5050565b60365f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610dc7611c4e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b60375f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60355481565b5f805f9054906101000a900460ff16905090565b5f80610e3861150c565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f610e8a611cd5565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610ed25750825b90505f60018367ffffffffffffffff16148015610f0557505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610f13575080155b15610f4a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610f97576001855f0160086101000a81548160ff0219169083151502179055505b610fa18a8a611cfc565b610fa9611d12565b610fb1611d1c565b610fb9611d26565b610fc55f801b886116dc565b50610ff07f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a886116dc565b5061101b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3886116dc565b506110268789611d38565b606460328190555060326033819055508560345f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156110d0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516110c79190612fb5565b60405180910390a15b50505050505050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6111068161154c565b61110e611db7565b50565b5f801b61111d8161154c565b816032819055507ff9f635b7cf851af6071aaf78ef8a5f752dc52f19d556fea4512b0c2ad4baea7282604051611153919061294b565b60405180910390a15050565b5f806111696116b5565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b60605f6111db61150c565b90508060040180546111ec90612e68565b80601f016020809104026020016040519081016040528092919081815260200182805461121890612e68565b80156112635780601f1061123a57610100808354040283529160200191611263565b820191905f5260205f20905b81548152906001019060200180831161124657829003601f168201915b505050505091505090565b5f801b81565b5f61127d611560565b61128f611288611533565b84846115aa565b6001905092915050565b60325481565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60335481565b5f801b6112ea8161154c565b8160365f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60385f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61135c82610af1565b6113658161154c565b61136f83836117d4565b50505050565b61271081565b5f8061138561150c565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f801b61143b8161154c565b8160375f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6115478383836001611e18565b505050565b61155d81611558611533565b611ff5565b50565b611568610e1a565b156115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90613018565b60405180910390fd5b565b5f81116115ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e390613080565b60405180910390fd5b5f612710603254836115fe919061309e565b611608919061310c565b90505f6127106033548461161c919061309e565b611626919061310c565b90505f8183856116369190612ec5565b6116409190612ec5565b90505f83111561168f576116768660345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561192c565b8260355f828254611687919061313c565b925050819055505b5f8211156116a2576116a18683612046565b5b6116ad86868361192c565b505050505050565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b5f806116e66116b5565b90506116f2848461115f565b6117c9576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611765611533565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506117ce565b5f9150505b92915050565b5f806117de6116b5565b90506117ea848461115f565b156118c1575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061185d611533565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019150506118c6565b5f9150505b92915050565b6118d46120c5565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611915611533565b6040516119229190612ae6565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361199c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119939190612ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a0c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a039190612ae6565b60405180910390fd5b611a1783838361210e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611ac957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611ab061233d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611b00576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3611b2c8161154c565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611b9857506040513d601f19601f82011682018060405250810190611b959190613183565b60015b611bd957816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611bd09190612ae6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114611c3f57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611c369190612a4c565b60405180910390fd5b611c498383612390565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611cd3576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611d04612402565b611d0e8282612442565b5050565b611d1a612402565b565b611d24612402565b565b611d2e612402565b611d3661247e565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611da8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d9f9190612ae6565b60405180910390fd5b611db35f838361210e565b5050565b611dbf611560565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e01611533565b604051611e0e9190612ae6565b60405180910390a1565b5f611e2161150c565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611e93575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611e8a9190612ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f03575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611efa9190612ae6565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611fee578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611fe5919061294b565b60405180910390a35b5050505050565b611fff828261115f565b6120425780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016120399291906131ae565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120b6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016120ad9190612ae6565b60405180910390fd5b6120c1825f8361210e565b5050565b6120cd610e1a565b61210c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121039061321f565b60405180910390fd5b565b5f61211761150c565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361216b5781816002015f82825461215f919061313c565b9250508190555061223d565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156121f6578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016121ed9392919061323d565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036122865781816002015f82825403925050819055506122d2565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161232f919061294b565b60405180910390a350505050565b5f6123697f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6124a0565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612399826124a9565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156123f5576123ef8282612572565b506123fe565b6123fd6125f2565b5b5050565b61240a61262e565b612440576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61244a612402565b5f61245361150c565b9050828160030190816124669190613406565b50818160040190816124789190613406565b50505050565b612486612402565b5f805f6101000a81548160ff021916908315150217905550565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361250457806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016124fb9190612ae6565b60405180910390fd5b806125307f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6124a0565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff168460405161259b9190613519565b5f60405180830381855af49150503d805f81146125d3576040519150601f19603f3d011682016040523d82523d5f602084013e6125d8565b606091505b50915091506125e885838361264c565b9250505092915050565b5f34111561262c576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f612637611cd5565b5f0160089054906101000a900460ff16905090565b6060826126615761265c826126d9565b6126d1565b5f825114801561268757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156126c957836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016126c09190612ae6565b60405180910390fd5b8190506126d2565b5b9392505050565b5f815111156126eb5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6127628161272e565b811461276c575f80fd5b50565b5f8135905061277d81612759565b92915050565b5f6020828403121561279857612797612726565b5b5f6127a58482850161276f565b91505092915050565b5f8115159050919050565b6127c2816127ae565b82525050565b5f6020820190506127db5f8301846127b9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612823826127e1565b61282d81856127eb565b935061283d8185602086016127fb565b61284681612809565b840191505092915050565b5f6020820190508181035f8301526128698184612819565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61289a82612871565b9050919050565b6128aa81612890565b81146128b4575f80fd5b50565b5f813590506128c5816128a1565b92915050565b5f819050919050565b6128dd816128cb565b81146128e7575f80fd5b50565b5f813590506128f8816128d4565b92915050565b5f806040838503121561291457612913612726565b5b5f612921858286016128b7565b9250506020612932858286016128ea565b9150509250929050565b612945816128cb565b82525050565b5f60208201905061295e5f83018461293c565b92915050565b5f6020828403121561297957612978612726565b5b5f612986848285016128ea565b91505092915050565b5f805f606084860312156129a6576129a5612726565b5b5f6129b3868287016128b7565b93505060206129c4868287016128b7565b92505060406129d5868287016128ea565b9150509250925092565b5f819050919050565b6129f1816129df565b81146129fb575f80fd5b50565b5f81359050612a0c816129e8565b92915050565b5f60208284031215612a2757612a26612726565b5b5f612a34848285016129fe565b91505092915050565b612a46816129df565b82525050565b5f602082019050612a5f5f830184612a3d565b92915050565b5f8060408385031215612a7b57612a7a612726565b5b5f612a88858286016129fe565b9250506020612a99858286016128b7565b9150509250929050565b5f60ff82169050919050565b612ab881612aa3565b82525050565b5f602082019050612ad15f830184612aaf565b92915050565b612ae081612890565b82525050565b5f602082019050612af95f830184612ad7565b92915050565b5f60208284031215612b1457612b13612726565b5b5f612b21848285016128b7565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612b6882612809565b810181811067ffffffffffffffff82111715612b8757612b86612b32565b5b80604052505050565b5f612b9961271d565b9050612ba58282612b5f565b919050565b5f67ffffffffffffffff821115612bc457612bc3612b32565b5b612bcd82612809565b9050602081019050919050565b828183375f83830152505050565b5f612bfa612bf584612baa565b612b90565b905082815260208101848484011115612c1657612c15612b2e565b5b612c21848285612bda565b509392505050565b5f82601f830112612c3d57612c3c612b2a565b5b8135612c4d848260208601612be8565b91505092915050565b5f8060408385031215612c6c57612c6b612726565b5b5f612c79858286016128b7565b925050602083013567ffffffffffffffff811115612c9a57612c9961272a565b5b612ca685828601612c29565b9150509250929050565b5f67ffffffffffffffff821115612cca57612cc9612b32565b5b612cd382612809565b9050602081019050919050565b5f612cf2612ced84612cb0565b612b90565b905082815260208101848484011115612d0e57612d0d612b2e565b5b612d19848285612bda565b509392505050565b5f82601f830112612d3557612d34612b2a565b5b8135612d45848260208601612ce0565b91505092915050565b5f805f805f60a08688031215612d6757612d66612726565b5b5f86013567ffffffffffffffff811115612d8457612d8361272a565b5b612d9088828901612d21565b955050602086013567ffffffffffffffff811115612db157612db061272a565b5b612dbd88828901612d21565b9450506040612dce888289016128ea565b9350506060612ddf888289016128b7565b9250506080612df0888289016128b7565b9150509295509295909350565b5f8060408385031215612e1357612e12612726565b5b5f612e20858286016128b7565b9250506020612e31858286016128b7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612e7f57607f821691505b602082108103612e9257612e91612e3b565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612ecf826128cb565b9150612eda836128cb565b9250828203905081811115612ef257612ef1612e98565b5b92915050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f612f2c6013836127eb565b9150612f3782612ef8565b602082019050919050565b5f6020820190508181035f830152612f5981612f20565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f612f9f612f9a612f9584612f60565b612f7c565b612f69565b9050919050565b612faf81612f85565b82525050565b5f602082019050612fc85f830184612fa6565b92915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6130026010836127eb565b915061300d82612fce565b602082019050919050565b5f6020820190508181035f83015261302f81612ff6565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61306a601d836127eb565b915061307582613036565b602082019050919050565b5f6020820190508181035f8301526130978161305e565b9050919050565b5f6130a8826128cb565b91506130b3836128cb565b92508282026130c1816128cb565b915082820484148315176130d8576130d7612e98565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f613116826128cb565b9150613121836128cb565b925082613131576131306130df565b5b828204905092915050565b5f613146826128cb565b9150613151836128cb565b925082820190508082111561316957613168612e98565b5b92915050565b5f8151905061317d816129e8565b92915050565b5f6020828403121561319857613197612726565b5b5f6131a58482850161316f565b91505092915050565b5f6040820190506131c15f830185612ad7565b6131ce6020830184612a3d565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6132096014836127eb565b9150613214826131d5565b602082019050919050565b5f6020820190508181035f830152613236816131fd565b9050919050565b5f6060820190506132505f830186612ad7565b61325d602083018561293c565b61326a604083018461293c565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026132ce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613293565b6132d88683613293565b95508019841693508086168417925050509392505050565b5f61330a613305613300846128cb565b612f7c565b6128cb565b9050919050565b5f819050919050565b613323836132f0565b61333761332f82613311565b84845461329f565b825550505050565b5f90565b61334b61333f565b61335681848461331a565b505050565b5b818110156133795761336e5f82613343565b60018101905061335c565b5050565b601f8211156133be5761338f81613272565b61339884613284565b810160208510156133a7578190505b6133bb6133b385613284565b83018261335b565b50505b505050565b5f82821c905092915050565b5f6133de5f19846008026133c3565b1980831691505092915050565b5f6133f683836133cf565b9150826002028217905092915050565b61340f826127e1565b67ffffffffffffffff81111561342857613427612b32565b5b6134328254612e68565b61343d82828561337d565b5f60209050601f83116001811461346e575f841561345c578287015190505b61346685826133eb565b8655506134cd565b601f19841661347c86613272565b5f5b828110156134a35784890151825560018201915060208501945060208101905061347e565b868310156134c057848901516134bc601f8916826133cf565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f6134f3826134d5565b6134fd81856134df565b935061350d8185602086016127fb565b80840191505092915050565b5f61352482846134e9565b91508190509291505056fea2646970667358221220cdc2b1a322f65cd48f2ead5b5f0dff4b49fa2e219a1b4fde36bf4a596e00420564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x12D JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xE723422D EQ PUSH2 0x8B0 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x8D8 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x77C JUMPI DUP1 PUSH4 0xC60B494F EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xC76AF7B0 EQ PUSH2 0x7CE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x7F8 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x698 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xACB2AD6F EQ PUSH2 0x728 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x7E77C503 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x8F02BB5B EQ PUSH2 0x634 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x504B82BF EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x55B593F1 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x587F5ED7 EQ PUSH2 0x566 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x492EF538 EQ PUSH2 0x4A4 JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x202 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3FC JUMPI PUSH2 0x23A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x189D165E EQ PUSH2 0x30A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x298F JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x2A12 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH2 0xBCE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH2 0xC28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x2C56 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x550 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57A PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x2D4E JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x655 SWAP2 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0x1111 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x682 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AC PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D6 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73C PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x766 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x790 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0x12DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E2 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x81E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x1353 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x834 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x870 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x2DFD JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89A PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0x142F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EC PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x974 JUMPI POP PUSH2 0x973 DUP3 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x986 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x997 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9C3 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA0E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA0E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA23 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP PUSH2 0xA30 DUP2 DUP6 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA45 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xA5E DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH32 0x47863B595116A31383855975A4078913DCE7881E717B75A06CED2DB5D534FF78 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA9 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0xAB4 DUP5 DUP5 DUP5 PUSH2 0x15AA JUMP JUMPDEST PUSH0 PUSH2 0xAC6 DUP6 PUSH2 0xAC1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST SWAP1 POP PUSH2 0xAE5 DUP6 PUSH2 0xAD4 PUSH2 0x1533 JUMP JUMPDEST DUP6 DUP5 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAFB PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB24 DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xB2D DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0xB37 DUP4 DUP4 PUSH2 0x16DC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH2 0xB5B PUSH2 0x1533 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC9 DUP3 DUP3 PUSH2 0x17D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xBF8 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0xC00 PUSH2 0x18CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xC34 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x1560 JUMP JUMPDEST PUSH0 PUSH1 0x35 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x35 DUP2 SWAP1 SSTORE POP PUSH2 0xCB7 ADDRESS PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xD36 DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x38 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xD82 PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0xD8B DUP3 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0xD95 DUP3 DUP3 PUSH2 0x1B30 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x36 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xDC7 PUSH2 0x1C4E JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x37 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x35 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE38 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE8A PUSH2 0x1CD5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xED2 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF05 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xF13 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xF4A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xF97 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xFA1 DUP11 DUP11 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0xFA9 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0xFB1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0xFC5 PUSH0 DUP1 SHL DUP9 PUSH2 0x16DC JUMP JUMPDEST POP PUSH2 0xFF0 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP9 PUSH2 0x16DC JUMP JUMPDEST POP PUSH2 0x101B PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP9 PUSH2 0x16DC JUMP JUMPDEST POP PUSH2 0x1026 DUP8 DUP10 PUSH2 0x1D38 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x32 DUP2 SWAP1 SSTORE POP PUSH1 0x32 PUSH1 0x33 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x34 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x10D0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1106 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x110E PUSH2 0x1DB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x111D DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x32 DUP2 SWAP1 SSTORE POP PUSH32 0xF9F635B7CF851AF6071AAF78EF8A5F752DC52F19D556FEA4512B0C2AD4BAEA72 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1169 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x11DB PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x11EC SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1218 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1263 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x123A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1263 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1246 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x127D PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x128F PUSH2 0x1288 PUSH2 0x1533 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x12EA DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x36 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x38 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x135C DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x136F DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1385 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x143B DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 PUSH1 0x37 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1547 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x1558 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x1FF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1568 PUSH2 0xE1A JUMP JUMPDEST ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E3 SWAP1 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x32 SLOAD DUP4 PUSH2 0x15FE SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x33 SLOAD DUP5 PUSH2 0x161C SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 PUSH2 0x1636 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x1640 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 GT ISZERO PUSH2 0x168F JUMPI PUSH2 0x1676 DUP7 PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x192C JUMP JUMPDEST DUP3 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1687 SWAP2 SWAP1 PUSH2 0x313C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 DUP7 DUP4 PUSH2 0x2046 JUMP JUMPDEST JUMPDEST PUSH2 0x16AD DUP7 DUP7 DUP4 PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x16E6 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x16F2 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x17C9 JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1765 PUSH2 0x1533 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x17CE JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17DE PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x17EA DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST ISZERO PUSH2 0x18C1 JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x185D PUSH2 0x1533 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x18C6 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D4 PUSH2 0x20C5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1915 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1922 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x199C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1993 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A17 DUP4 DUP4 DUP4 PUSH2 0x210E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AC9 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB0 PUSH2 0x233D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x1B2C DUP2 PUSH2 0x154C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B98 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B95 SWAP2 SWAP1 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BD9 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD0 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1C3F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C36 SWAP2 SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C49 DUP4 DUP4 PUSH2 0x2390 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D04 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x2442 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D24 PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D2E PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1D36 PUSH2 0x247E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9F SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB3 PUSH0 DUP4 DUP4 PUSH2 0x210E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DBF PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E01 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH2 0x1E21 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8A SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1FEE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1FE5 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FFF DUP3 DUP3 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x2042 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2039 SWAP3 SWAP2 SWAP1 PUSH2 0x31AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AD SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20C1 DUP3 PUSH0 DUP4 PUSH2 0x210E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x20CD PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x210C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2103 SWAP1 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2117 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x216B JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x215F SWAP2 SWAP1 PUSH2 0x313C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x223D JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x21F6 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x323D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2286 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x22D2 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x232F SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2369 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x24A0 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2399 DUP3 PUSH2 0x24A9 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x23F5 JUMPI PUSH2 0x23EF DUP3 DUP3 PUSH2 0x2572 JUMP JUMPDEST POP PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x23FD PUSH2 0x25F2 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x240A PUSH2 0x262E JUMP JUMPDEST PUSH2 0x2440 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x244A PUSH2 0x2402 JUMP JUMPDEST PUSH0 PUSH2 0x2453 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2466 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2478 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2486 PUSH2 0x2402 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2504 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24FB SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2530 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x24A0 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x259B SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x25D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x25E8 DUP6 DUP4 DUP4 PUSH2 0x264C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x262C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2637 PUSH2 0x1CD5 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2661 JUMPI PUSH2 0x265C DUP3 PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x26D1 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2687 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x26C9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C0 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x26D2 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x26EB JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2762 DUP2 PUSH2 0x272E JUMP JUMPDEST DUP2 EQ PUSH2 0x276C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x277D DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2798 JUMPI PUSH2 0x2797 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27A5 DUP5 DUP3 DUP6 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x27AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27DB PUSH0 DUP4 ADD DUP5 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2823 DUP3 PUSH2 0x27E1 JUMP JUMPDEST PUSH2 0x282D DUP2 DUP6 PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP PUSH2 0x283D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x2846 DUP2 PUSH2 0x2809 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2869 DUP2 DUP5 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x289A DUP3 PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AA DUP2 PUSH2 0x2890 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C5 DUP2 PUSH2 0x28A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28DD DUP2 PUSH2 0x28CB JUMP JUMPDEST DUP2 EQ PUSH2 0x28E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F8 DUP2 PUSH2 0x28D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2914 JUMPI PUSH2 0x2913 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2921 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2932 DUP6 DUP3 DUP7 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2945 DUP2 PUSH2 0x28CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295E PUSH0 DUP4 ADD DUP5 PUSH2 0x293C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2979 JUMPI PUSH2 0x2978 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2986 DUP5 DUP3 DUP6 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH2 0x29A5 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B3 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29C4 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29D5 DUP7 DUP3 DUP8 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F1 DUP2 PUSH2 0x29DF JUMP JUMPDEST DUP2 EQ PUSH2 0x29FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0C DUP2 PUSH2 0x29E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A34 DUP5 DUP3 DUP6 ADD PUSH2 0x29FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A46 DUP2 PUSH2 0x29DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A5F PUSH0 DUP4 ADD DUP5 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A7B JUMPI PUSH2 0x2A7A PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A88 DUP6 DUP3 DUP7 ADD PUSH2 0x29FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A99 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB8 DUP2 PUSH2 0x2AA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AE0 DUP2 PUSH2 0x2890 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B13 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B21 DUP5 DUP3 DUP6 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2B68 DUP3 PUSH2 0x2809 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B99 PUSH2 0x271D JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA5 DUP3 DUP3 PUSH2 0x2B5F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC4 JUMPI PUSH2 0x2BC3 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST PUSH2 0x2BCD DUP3 PUSH2 0x2809 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFA PUSH2 0x2BF5 DUP5 PUSH2 0x2BAA JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C16 JUMPI PUSH2 0x2C15 PUSH2 0x2B2E JUMP JUMPDEST JUMPDEST PUSH2 0x2C21 DUP5 DUP3 DUP6 PUSH2 0x2BDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C3D JUMPI PUSH2 0x2C3C PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C4D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C6C JUMPI PUSH2 0x2C6B PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C79 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C9A JUMPI PUSH2 0x2C99 PUSH2 0x272A JUMP JUMPDEST JUMPDEST PUSH2 0x2CA6 DUP6 DUP3 DUP7 ADD PUSH2 0x2C29 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CCA JUMPI PUSH2 0x2CC9 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST PUSH2 0x2CD3 DUP3 PUSH2 0x2809 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF2 PUSH2 0x2CED DUP5 PUSH2 0x2CB0 JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x2B2E JUMP JUMPDEST JUMPDEST PUSH2 0x2D19 DUP5 DUP3 DUP6 PUSH2 0x2BDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D35 JUMPI PUSH2 0x2D34 PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D45 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2D67 JUMPI PUSH2 0x2D66 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D83 PUSH2 0x272A JUMP JUMPDEST JUMPDEST PUSH2 0x2D90 DUP9 DUP3 DUP10 ADD PUSH2 0x2D21 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DB1 JUMPI PUSH2 0x2DB0 PUSH2 0x272A JUMP JUMPDEST JUMPDEST PUSH2 0x2DBD DUP9 DUP3 DUP10 ADD PUSH2 0x2D21 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2DCE DUP9 DUP3 DUP10 ADD PUSH2 0x28EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2DDF DUP9 DUP3 DUP10 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2DF0 DUP9 DUP3 DUP10 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E13 JUMPI PUSH2 0x2E12 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E20 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E31 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E7F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E92 JUMPI PUSH2 0x2E91 PUSH2 0x2E3B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2ECF DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDA DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EF2 JUMPI PUSH2 0x2EF1 PUSH2 0x2E98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206665657320746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F2C PUSH1 0x13 DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2F37 DUP3 PUSH2 0x2EF8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F59 DUP2 PUSH2 0x2F20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F9F PUSH2 0x2F9A PUSH2 0x2F95 DUP5 PUSH2 0x2F60 JUMP JUMPDEST PUSH2 0x2F7C JUMP JUMPDEST PUSH2 0x2F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FAF DUP2 PUSH2 0x2F85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FC8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2FA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3002 PUSH1 0x10 DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x300D DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x302F DUP2 PUSH2 0x2FF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x306A PUSH1 0x1D DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3075 DUP3 PUSH2 0x3036 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3097 DUP2 PUSH2 0x305E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30A8 DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x30B3 DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x30C1 DUP2 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x30D8 JUMPI PUSH2 0x30D7 PUSH2 0x2E98 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3116 DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x3121 DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3131 JUMPI PUSH2 0x3130 PUSH2 0x30DF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3146 DUP3 PUSH2 0x28CB JUMP JUMPDEST SWAP2 POP PUSH2 0x3151 DUP4 PUSH2 0x28CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3169 JUMPI PUSH2 0x3168 PUSH2 0x2E98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x317D DUP2 PUSH2 0x29E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3198 JUMPI PUSH2 0x3197 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x31A5 DUP5 DUP3 DUP6 ADD PUSH2 0x316F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31C1 PUSH0 DUP4 ADD DUP6 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x31CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3209 PUSH1 0x14 DUP4 PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3214 DUP3 PUSH2 0x31D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3236 DUP2 PUSH2 0x31FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3250 PUSH0 DUP4 ADD DUP7 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x325D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x326A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x293C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x32CE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3293 JUMP JUMPDEST PUSH2 0x32D8 DUP7 DUP4 PUSH2 0x3293 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x330A PUSH2 0x3305 PUSH2 0x3300 DUP5 PUSH2 0x28CB JUMP JUMPDEST PUSH2 0x2F7C JUMP JUMPDEST PUSH2 0x28CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3323 DUP4 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0x3337 PUSH2 0x332F DUP3 PUSH2 0x3311 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x329F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x334B PUSH2 0x333F JUMP JUMPDEST PUSH2 0x3356 DUP2 DUP5 DUP5 PUSH2 0x331A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3379 JUMPI PUSH2 0x336E PUSH0 DUP3 PUSH2 0x3343 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x335C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x33BE JUMPI PUSH2 0x338F DUP2 PUSH2 0x3272 JUMP JUMPDEST PUSH2 0x3398 DUP5 PUSH2 0x3284 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x33A7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x33BB PUSH2 0x33B3 DUP6 PUSH2 0x3284 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x335B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33DE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x33C3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33F6 DUP4 DUP4 PUSH2 0x33CF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x340F DUP3 PUSH2 0x27E1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3428 JUMPI PUSH2 0x3427 PUSH2 0x2B32 JUMP JUMPDEST JUMPDEST PUSH2 0x3432 DUP3 SLOAD PUSH2 0x2E68 JUMP JUMPDEST PUSH2 0x343D DUP3 DUP3 DUP6 PUSH2 0x337D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x346E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x345C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3466 DUP6 DUP3 PUSH2 0x33EB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x34CD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x347C DUP7 PUSH2 0x3272 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x34A3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x347E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x34C0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x34BC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x33CF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x34F3 DUP3 PUSH2 0x34D5 JUMP JUMPDEST PUSH2 0x34FD DUP2 DUP6 PUSH2 0x34DF JUMP JUMPDEST SWAP4 POP PUSH2 0x350D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27FB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3524 DUP3 DUP5 PUSH2 0x34E9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC2 0xB1 LOG3 0x22 0xF6 TLOAD 0xD4 DUP16 0x2E 0xAD JUMPDEST PUSH0 0xD SELFDESTRUCT 0x4B BLOBHASH STATICCALL 0x2E 0x21 SWAP11 SHL 0x4F 0xDE CALLDATASIZE 0xBF BLOBBASEFEE MSIZE PUSH15 0x420564736F6C634300081A003300 ",
							"sourceMap": "377:3837:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2716:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3896:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3820:144:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2392:341;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3754:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;829:51:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6348:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4049:77:19;;;;;;;;;;;;;:::i;:::-;;707:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3346:312;;;;;;;;;;;;;:::i;:::-;;2053:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;887:28:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3708:134:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;921:31:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:84:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1152:601:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3970:73;;;;;;;;;;;;;:::i;:::-;;3664:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2194:192:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:23:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1759:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;958:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;776:47:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;505:62:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1900:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;573:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3443:202:0;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;2716:144:4:-;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;3896:152::-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;3820:144:19:-;2362:4:0;3874:18:19;;3191:16:0;3202:4;3191:10;:16::i;:::-;3915:5:19::1;3904:8;:16;;;;3935:22;3951:5;3935:22;;;;;;:::i;:::-;;;;;;;;3820:144:::0;;:::o;2392:341::-;2512:4;1503:19:3;:17;:19::i;:::-;2528:42:19::1;2544:6;2552:9;2563:6;2528:15;:42::i;:::-;2580:24;2607:31;2617:6;2625:12;:10;:12::i;:::-;2607:9;:31::i;:::-;2580:58;;2648:57;2657:6;2665:12;:10;:12::i;:::-;2698:6;2679:16;:25;;;;:::i;:::-;2648:8;:57::i;:::-;2722:4;2715:11;;;2392:341:::0;;;;;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;3754:82:4:-;3803:5;3827:2;3820:9;;3754:82;:::o;829:51:19:-;866:14;829:51;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;4049:77:19:-;543:24;3191:16:0;3202:4;3191:10;:16::i;:::-;4109:10:19::1;:8;:10::i;:::-;4049:77:::0;:::o;707:27::-;;;;;;;;;;;;;:::o;3346:312::-;2362:4:0;3388:18:19;;3191:16:0;3202:4;3191:10;:16::i;:::-;1503:19:3::1;:17;:19::i;:::-;3432:14:19::2;3449:15;;3432:32;;3491:1;3482:6;:10;3474:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3544:1;3526:15;:19;;;;3555:46;3573:4;3580:12;;;;;;;;;;;3594:6;3555:9;:46::i;:::-;3630:12;;;;;;;;;;;3616:35;;;3644:6;3616:35;;;;;;:::i;:::-;;;;;;;;3422:236;3346:312:::0;:::o;2053:135::-;2362:4:0;2121:18:19;;3191:16:0;3202:4;3191:10;:16::i;:::-;2167:14:19::1;2151:13;;:30;;;;;;;;;;;;;;;;;;2053:135:::0;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;887:28:19:-;;;;;;;;;;;;;:::o;3708:134:2:-;3777:7;2926:20;:18;:20::i;:::-;811:66:11::1;3803:32:2;;3796:39;;3708:134:::0;:::o;921:31:19:-;;;;;;;;;;;;;:::o;740:30::-;;;;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;4106:171:4:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;1152:601:19:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1352:28:19::1;1365:5;1372:7;1352:12;:28::i;:::-;1390:22;:20;:22::i;:::-;1422:24;:22;:24::i;:::-;1456:17;:15;:17::i;:::-;1484:38;2362:4:0;1495:18:19::0;::::1;1515:6;1484:10;:38::i;:::-;;1532:31;543:24;1556:6;1532:10;:31::i;:::-;;1573:33;613:26;1599:6;1573:10;:33::i;:::-;;1617:27;1623:6;1631:12;1617:5;:27::i;:::-;1668:3;1654:11;:17;;;;1698:2;1687:8;:13;;;;1733;1718:12;;:28;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1152:601:19;;;;;:::o;3970:73::-;543:24;3191:16:0;3202:4;3191:10;:16::i;:::-;4028:8:19::1;:6;:8::i;:::-;3970:73:::0;:::o;3664:150::-;2362:4:0;3720:18:19;;3191:16:0;3202:4;3191:10;:16::i;:::-;3764:4:19::1;3750:11;:18;;;;3783:24;3802:4;3783:24;;;;;;:::i;:::-;;;;;;;;3664:150:::0;;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;2973:148:4:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;2194:192:19:-;2294:4;1503:19:3;:17;:19::i;:::-;2310:48:19::1;2326:12;:10;:12::i;:::-;2340:9;2351:6;2310:15;:48::i;:::-;2375:4;2368:11;;2194:192:::0;;;;:::o;646:26::-;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;678:23:19:-;;;;:::o;1759:135::-;2362:4:0;1827:18:19;;3191:16:0;3202:4;3191:10;:16::i;:::-;1873:14:19::1;1857:13;;:30;;;;;;;;;;;;;;;;;;1759:135:::0;;:::o;958:28::-;;;;;;;;;;;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;776:47:19:-;818:5;776:47;:::o;4708:195:4:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;505:62:19:-;543:24;505:62;:::o;1900:147::-;2362:4:0;1974:18:19;;3191:16:0;3202:4;3191:10;:16::i;:::-;2023:17:19::1;2004:16;;:36;;;;;;;;;;;;;;;;;;1900:147:::0;;:::o;573:66::-;613:26;573:66;:::o;1035:146:6:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;1947:153:4:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;10001:128:4:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;4148:103:0:-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;2739:601:19:-;2851:1;2842:6;:10;2834:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2896:11;818:5;2920:11;;2911:6;:20;;;;:::i;:::-;2910:40;;;;:::i;:::-;2896:54;;2960:18;818:5;2991:8;;2982:6;:17;;;;:::i;:::-;2981:37;;;;:::i;:::-;2960:58;;3028:17;3063:10;3057:3;3048:6;:12;;;;:::i;:::-;:25;;;;:::i;:::-;3028:45;;3094:1;3088:3;:7;3084:116;;;3111:42;3127:6;3135:12;;;;;;;;;;;3149:3;3111:15;:42::i;:::-;3186:3;3167:15;;:22;;;;;;;:::i;:::-;;;;;;;;3084:116;3226:1;3213:10;:14;3209:70;;;3243:25;3249:6;3257:10;3243:5;:25::i;:::-;3209:70;3288:45;3304:6;3312:9;3323;3288:15;:45::i;:::-;2824:516;;;2739:601;;;:::o;2787:177:0:-;2845:30;2920:28;2910:38;;2787:177;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;7892:388::-;7970:4;7986:30;8019:26;:24;:26::i;:::-;7986:59;;8059:22;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:1;:8;;:14;8106:4;8097:14;;;;;;;;;;;:22;;:31;8120:7;8097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8182:12;:10;:12::i;:::-;8155:40;;8173:7;8155:40;;8167:4;8155:40;;;;;;;;;;8216:4;8209:11;;;;;8055:219;8258:5;8251:12;;;7892:388;;;;;:::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;6605:300:4:-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;4132:80:19:-;613:26;3191:16:0;3202:4;3191:10;:16::i;:::-;4132:80:19;;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:11;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:4:-;6931:20:1;:18;:20::i;:::-;2384:38:4::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;3231:65:0:-;6931:20:1;:18;:20::i;:::-;3231:65:0:o;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;8733:208:4:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;10976:487:4:-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;9259:206:4:-;9348:1;9329:21;;:7;:21;;;9325:89;;9400:1;9373:30;;;;;;;;;;;:::i;:::-;;;;;;;;9325:89;9423:35;9431:7;9448:1;9452:5;9423:7;:35::i;:::-;9259:206;;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;7220:1170:4:-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;1441:138:11:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:4:-;6931:20:1;:18;:20::i;:::-;2547:22:4::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1187:95:3:-;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;1899:163:17:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:11:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:15:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:11:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4437:582:15:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:20;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:329::-;4507:6;4556:2;4544:9;4535:7;4531:23;4527:32;4524:119;;;4562:79;;:::i;:::-;4524:119;4682:1;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4653:117;4448:329;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:329::-;5823:6;5872:2;5860:9;5851:7;5847:23;5843:32;5840:119;;;5878:79;;:::i;:::-;5840:119;5998:1;6023:53;6068:7;6059:6;6048:9;6044:22;6023:53;:::i;:::-;6013:63;;5969:117;5764:329;;;;:::o;6099:118::-;6186:24;6204:5;6186:24;:::i;:::-;6181:3;6174:37;6099:118;;:::o;6223:222::-;6316:4;6354:2;6343:9;6339:18;6331:26;;6367:71;6435:1;6424:9;6420:17;6411:6;6367:71;:::i;:::-;6223:222;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:118::-;7448:24;7466:5;7448:24;:::i;:::-;7443:3;7436:37;7361:118;;:::o;7485:222::-;7578:4;7616:2;7605:9;7601:18;7593:26;;7629:71;7697:1;7686:9;7682:17;7673:6;7629:71;:::i;:::-;7485:222;;;;:::o;7713:329::-;7772:6;7821:2;7809:9;7800:7;7796:23;7792:32;7789:119;;;7827:79;;:::i;:::-;7789:119;7947:1;7972:53;8017:7;8008:6;7997:9;7993:22;7972:53;:::i;:::-;7962:63;;7918:117;7713:329;;;;:::o;8048:117::-;8157:1;8154;8147:12;8171:117;8280:1;8277;8270:12;8294:180;8342:77;8339:1;8332:88;8439:4;8436:1;8429:15;8463:4;8460:1;8453:15;8480:281;8563:27;8585:4;8563:27;:::i;:::-;8555:6;8551:40;8693:6;8681:10;8678:22;8657:18;8645:10;8642:34;8639:62;8636:88;;;8704:18;;:::i;:::-;8636:88;8744:10;8740:2;8733:22;8523:238;8480:281;;:::o;8767:129::-;8801:6;8828:20;;:::i;:::-;8818:30;;8857:33;8885:4;8877:6;8857:33;:::i;:::-;8767:129;;;:::o;8902:307::-;8963:4;9053:18;9045:6;9042:30;9039:56;;;9075:18;;:::i;:::-;9039:56;9113:29;9135:6;9113:29;:::i;:::-;9105:37;;9197:4;9191;9187:15;9179:23;;8902:307;;;:::o;9215:148::-;9313:6;9308:3;9303;9290:30;9354:1;9345:6;9340:3;9336:16;9329:27;9215:148;;;:::o;9369:423::-;9446:5;9471:65;9487:48;9528:6;9487:48;:::i;:::-;9471:65;:::i;:::-;9462:74;;9559:6;9552:5;9545:21;9597:4;9590:5;9586:16;9635:3;9626:6;9621:3;9617:16;9614:25;9611:112;;;9642:79;;:::i;:::-;9611:112;9732:54;9779:6;9774:3;9769;9732:54;:::i;:::-;9452:340;9369:423;;;;;:::o;9811:338::-;9866:5;9915:3;9908:4;9900:6;9896:17;9892:27;9882:122;;9923:79;;:::i;:::-;9882:122;10040:6;10027:20;10065:78;10139:3;10131:6;10124:4;10116:6;10112:17;10065:78;:::i;:::-;10056:87;;9872:277;9811:338;;;;:::o;10155:652::-;10232:6;10240;10289:2;10277:9;10268:7;10264:23;10260:32;10257:119;;;10295:79;;:::i;:::-;10257:119;10415:1;10440:53;10485:7;10476:6;10465:9;10461:22;10440:53;:::i;:::-;10430:63;;10386:117;10570:2;10559:9;10555:18;10542:32;10601:18;10593:6;10590:30;10587:117;;;10623:79;;:::i;:::-;10587:117;10728:62;10782:7;10773:6;10762:9;10758:22;10728:62;:::i;:::-;10718:72;;10513:287;10155:652;;;;;:::o;10813:308::-;10875:4;10965:18;10957:6;10954:30;10951:56;;;10987:18;;:::i;:::-;10951:56;11025:29;11047:6;11025:29;:::i;:::-;11017:37;;11109:4;11103;11099:15;11091:23;;10813:308;;;:::o;11127:425::-;11205:5;11230:66;11246:49;11288:6;11246:49;:::i;:::-;11230:66;:::i;:::-;11221:75;;11319:6;11312:5;11305:21;11357:4;11350:5;11346:16;11395:3;11386:6;11381:3;11377:16;11374:25;11371:112;;;11402:79;;:::i;:::-;11371:112;11492:54;11539:6;11534:3;11529;11492:54;:::i;:::-;11211:341;11127:425;;;;;:::o;11572:340::-;11628:5;11677:3;11670:4;11662:6;11658:17;11654:27;11644:122;;11685:79;;:::i;:::-;11644:122;11802:6;11789:20;11827:79;11902:3;11894:6;11887:4;11879:6;11875:17;11827:79;:::i;:::-;11818:88;;11634:278;11572:340;;;;:::o;11918:1271::-;12033:6;12041;12049;12057;12065;12114:3;12102:9;12093:7;12089:23;12085:33;12082:120;;;12121:79;;:::i;:::-;12082:120;12269:1;12258:9;12254:17;12241:31;12299:18;12291:6;12288:30;12285:117;;;12321:79;;:::i;:::-;12285:117;12426:63;12481:7;12472:6;12461:9;12457:22;12426:63;:::i;:::-;12416:73;;12212:287;12566:2;12555:9;12551:18;12538:32;12597:18;12589:6;12586:30;12583:117;;;12619:79;;:::i;:::-;12583:117;12724:63;12779:7;12770:6;12759:9;12755:22;12724:63;:::i;:::-;12714:73;;12509:288;12836:2;12862:53;12907:7;12898:6;12887:9;12883:22;12862:53;:::i;:::-;12852:63;;12807:118;12964:2;12990:53;13035:7;13026:6;13015:9;13011:22;12990:53;:::i;:::-;12980:63;;12935:118;13092:3;13119:53;13164:7;13155:6;13144:9;13140:22;13119:53;:::i;:::-;13109:63;;13063:119;11918:1271;;;;;;;;:::o;13195:474::-;13263:6;13271;13320:2;13308:9;13299:7;13295:23;13291:32;13288:119;;;13326:79;;:::i;:::-;13288:119;13446:1;13471:53;13516:7;13507:6;13496:9;13492:22;13471:53;:::i;:::-;13461:63;;13417:117;13573:2;13599:53;13644:7;13635:6;13624:9;13620:22;13599:53;:::i;:::-;13589:63;;13544:118;13195:474;;;;;:::o;13675:180::-;13723:77;13720:1;13713:88;13820:4;13817:1;13810:15;13844:4;13841:1;13834:15;13861:320;13905:6;13942:1;13936:4;13932:12;13922:22;;13989:1;13983:4;13979:12;14010:18;14000:81;;14066:4;14058:6;14054:17;14044:27;;14000:81;14128:2;14120:6;14117:14;14097:18;14094:38;14091:84;;14147:18;;:::i;:::-;14091:84;13912:269;13861:320;;;:::o;14187:180::-;14235:77;14232:1;14225:88;14332:4;14329:1;14322:15;14356:4;14353:1;14346:15;14373:194;14413:4;14433:20;14451:1;14433:20;:::i;:::-;14428:25;;14467:20;14485:1;14467:20;:::i;:::-;14462:25;;14511:1;14508;14504:9;14496:17;;14535:1;14529:4;14526:11;14523:37;;;14540:18;;:::i;:::-;14523:37;14373:194;;;;:::o;14573:169::-;14713:21;14709:1;14701:6;14697:14;14690:45;14573:169;:::o;14748:366::-;14890:3;14911:67;14975:2;14970:3;14911:67;:::i;:::-;14904:74;;14987:93;15076:3;14987:93;:::i;:::-;15105:2;15100:3;15096:12;15089:19;;14748:366;;;:::o;15120:419::-;15286:4;15324:2;15313:9;15309:18;15301:26;;15373:9;15367:4;15363:20;15359:1;15348:9;15344:17;15337:47;15401:131;15527:4;15401:131;:::i;:::-;15393:139;;15120:419;;;:::o;15545:85::-;15590:7;15619:5;15608:16;;15545:85;;;:::o;15636:101::-;15672:7;15712:18;15705:5;15701:30;15690:41;;15636:101;;;:::o;15743:60::-;15771:3;15792:5;15785:12;;15743:60;;;:::o;15809:156::-;15866:9;15899:60;15916:42;15925:32;15951:5;15925:32;:::i;:::-;15916:42;:::i;:::-;15899:60;:::i;:::-;15886:73;;15809:156;;;:::o;15971:145::-;16065:44;16103:5;16065:44;:::i;:::-;16060:3;16053:57;15971:145;;:::o;16122:236::-;16222:4;16260:2;16249:9;16245:18;16237:26;;16273:78;16348:1;16337:9;16333:17;16324:6;16273:78;:::i;:::-;16122:236;;;;:::o;16364:166::-;16504:18;16500:1;16492:6;16488:14;16481:42;16364:166;:::o;16536:366::-;16678:3;16699:67;16763:2;16758:3;16699:67;:::i;:::-;16692:74;;16775:93;16864:3;16775:93;:::i;:::-;16893:2;16888:3;16884:12;16877:19;;16536:366;;;:::o;16908:419::-;17074:4;17112:2;17101:9;17097:18;17089:26;;17161:9;17155:4;17151:20;17147:1;17136:9;17132:17;17125:47;17189:131;17315:4;17189:131;:::i;:::-;17181:139;;16908:419;;;:::o;17333:179::-;17473:31;17469:1;17461:6;17457:14;17450:55;17333:179;:::o;17518:366::-;17660:3;17681:67;17745:2;17740:3;17681:67;:::i;:::-;17674:74;;17757:93;17846:3;17757:93;:::i;:::-;17875:2;17870:3;17866:12;17859:19;;17518:366;;;:::o;17890:419::-;18056:4;18094:2;18083:9;18079:18;18071:26;;18143:9;18137:4;18133:20;18129:1;18118:9;18114:17;18107:47;18171:131;18297:4;18171:131;:::i;:::-;18163:139;;17890:419;;;:::o;18315:410::-;18355:7;18378:20;18396:1;18378:20;:::i;:::-;18373:25;;18412:20;18430:1;18412:20;:::i;:::-;18407:25;;18467:1;18464;18460:9;18489:30;18507:11;18489:30;:::i;:::-;18478:41;;18668:1;18659:7;18655:15;18652:1;18649:22;18629:1;18622:9;18602:83;18579:139;;18698:18;;:::i;:::-;18579:139;18363:362;18315:410;;;;:::o;18731:180::-;18779:77;18776:1;18769:88;18876:4;18873:1;18866:15;18900:4;18897:1;18890:15;18917:185;18957:1;18974:20;18992:1;18974:20;:::i;:::-;18969:25;;19008:20;19026:1;19008:20;:::i;:::-;19003:25;;19047:1;19037:35;;19052:18;;:::i;:::-;19037:35;19094:1;19091;19087:9;19082:14;;18917:185;;;;:::o;19108:191::-;19148:3;19167:20;19185:1;19167:20;:::i;:::-;19162:25;;19201:20;19219:1;19201:20;:::i;:::-;19196:25;;19244:1;19241;19237:9;19230:16;;19265:3;19262:1;19259:10;19256:36;;;19272:18;;:::i;:::-;19256:36;19108:191;;;;:::o;19305:143::-;19362:5;19393:6;19387:13;19378:22;;19409:33;19436:5;19409:33;:::i;:::-;19305:143;;;;:::o;19454:351::-;19524:6;19573:2;19561:9;19552:7;19548:23;19544:32;19541:119;;;19579:79;;:::i;:::-;19541:119;19699:1;19724:64;19780:7;19771:6;19760:9;19756:22;19724:64;:::i;:::-;19714:74;;19670:128;19454:351;;;;:::o;19811:332::-;19932:4;19970:2;19959:9;19955:18;19947:26;;19983:71;20051:1;20040:9;20036:17;20027:6;19983:71;:::i;:::-;20064:72;20132:2;20121:9;20117:18;20108:6;20064:72;:::i;:::-;19811:332;;;;;:::o;20149:170::-;20289:22;20285:1;20277:6;20273:14;20266:46;20149:170;:::o;20325:366::-;20467:3;20488:67;20552:2;20547:3;20488:67;:::i;:::-;20481:74;;20564:93;20653:3;20564:93;:::i;:::-;20682:2;20677:3;20673:12;20666:19;;20325:366;;;:::o;20697:419::-;20863:4;20901:2;20890:9;20886:18;20878:26;;20950:9;20944:4;20940:20;20936:1;20925:9;20921:17;20914:47;20978:131;21104:4;20978:131;:::i;:::-;20970:139;;20697:419;;;:::o;21122:442::-;21271:4;21309:2;21298:9;21294:18;21286:26;;21322:71;21390:1;21379:9;21375:17;21366:6;21322:71;:::i;:::-;21403:72;21471:2;21460:9;21456:18;21447:6;21403:72;:::i;:::-;21485;21553:2;21542:9;21538:18;21529:6;21485:72;:::i;:::-;21122:442;;;;;;:::o;21570:141::-;21619:4;21642:3;21634:11;;21665:3;21662:1;21655:14;21699:4;21696:1;21686:18;21678:26;;21570:141;;;:::o;21717:93::-;21754:6;21801:2;21796;21789:5;21785:14;21781:23;21771:33;;21717:93;;;:::o;21816:107::-;21860:8;21910:5;21904:4;21900:16;21879:37;;21816:107;;;;:::o;21929:393::-;21998:6;22048:1;22036:10;22032:18;22071:97;22101:66;22090:9;22071:97;:::i;:::-;22189:39;22219:8;22208:9;22189:39;:::i;:::-;22177:51;;22261:4;22257:9;22250:5;22246:21;22237:30;;22310:4;22300:8;22296:19;22289:5;22286:30;22276:40;;22005:317;;21929:393;;;;;:::o;22328:142::-;22378:9;22411:53;22429:34;22438:24;22456:5;22438:24;:::i;:::-;22429:34;:::i;:::-;22411:53;:::i;:::-;22398:66;;22328:142;;;:::o;22476:75::-;22519:3;22540:5;22533:12;;22476:75;;;:::o;22557:269::-;22667:39;22698:7;22667:39;:::i;:::-;22728:91;22777:41;22801:16;22777:41;:::i;:::-;22769:6;22762:4;22756:11;22728:91;:::i;:::-;22722:4;22715:105;22633:193;22557:269;;;:::o;22832:73::-;22877:3;22832:73;:::o;22911:189::-;22988:32;;:::i;:::-;23029:65;23087:6;23079;23073:4;23029:65;:::i;:::-;22964:136;22911:189;;:::o;23106:186::-;23166:120;23183:3;23176:5;23173:14;23166:120;;;23237:39;23274:1;23267:5;23237:39;:::i;:::-;23210:1;23203:5;23199:13;23190:22;;23166:120;;;23106:186;;:::o;23298:543::-;23399:2;23394:3;23391:11;23388:446;;;23433:38;23465:5;23433:38;:::i;:::-;23517:29;23535:10;23517:29;:::i;:::-;23507:8;23503:44;23700:2;23688:10;23685:18;23682:49;;;23721:8;23706:23;;23682:49;23744:80;23800:22;23818:3;23800:22;:::i;:::-;23790:8;23786:37;23773:11;23744:80;:::i;:::-;23403:431;;23388:446;23298:543;;;:::o;23847:117::-;23901:8;23951:5;23945:4;23941:16;23920:37;;23847:117;;;;:::o;23970:169::-;24014:6;24047:51;24095:1;24091:6;24083:5;24080:1;24076:13;24047:51;:::i;:::-;24043:56;24128:4;24122;24118:15;24108:25;;24021:118;23970:169;;;;:::o;24144:295::-;24220:4;24366:29;24391:3;24385:4;24366:29;:::i;:::-;24358:37;;24428:3;24425:1;24421:11;24415:4;24412:21;24404:29;;24144:295;;;;:::o;24444:1395::-;24561:37;24594:3;24561:37;:::i;:::-;24663:18;24655:6;24652:30;24649:56;;;24685:18;;:::i;:::-;24649:56;24729:38;24761:4;24755:11;24729:38;:::i;:::-;24814:67;24874:6;24866;24860:4;24814:67;:::i;:::-;24908:1;24932:4;24919:17;;24964:2;24956:6;24953:14;24981:1;24976:618;;;;25638:1;25655:6;25652:77;;;25704:9;25699:3;25695:19;25689:26;25680:35;;25652:77;25755:67;25815:6;25808:5;25755:67;:::i;:::-;25749:4;25742:81;25611:222;24946:887;;24976:618;25028:4;25024:9;25016:6;25012:22;25062:37;25094:4;25062:37;:::i;:::-;25121:1;25135:208;25149:7;25146:1;25143:14;25135:208;;;25228:9;25223:3;25219:19;25213:26;25205:6;25198:42;25279:1;25271:6;25267:14;25257:24;;25326:2;25315:9;25311:18;25298:31;;25172:4;25169:1;25165:12;25160:17;;25135:208;;;25371:6;25362:7;25359:19;25356:179;;;25429:9;25424:3;25420:19;25414:26;25472:48;25514:4;25506:6;25502:17;25491:9;25472:48;:::i;:::-;25464:6;25457:64;25379:156;25356:179;25581:1;25577;25569:6;25565:14;25561:22;25555:4;25548:36;24983:611;;;24946:887;;24536:1303;;;24444:1395;;:::o;25845:98::-;25896:6;25930:5;25924:12;25914:22;;25845:98;;;:::o;25949:147::-;26050:11;26087:3;26072:18;;25949:147;;;;:::o;26102:386::-;26206:3;26234:38;26266:5;26234:38;:::i;:::-;26288:88;26369:6;26364:3;26288:88;:::i;:::-;26281:95;;26385:65;26443:6;26438:3;26431:4;26424:5;26420:16;26385:65;:::i;:::-;26475:6;26470:3;26466:16;26459:23;;26210:278;26102:386;;;;:::o;26494:271::-;26624:3;26646:93;26735:3;26726:6;26646:93;:::i;:::-;26639:100;;26756:3;26749:10;;26494:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2733800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "419",
								"FEE_DENOMINATOR()": "369",
								"MAX_SUPPLY()": "459",
								"PAUSER_ROLE()": "413",
								"UPGRADER_ROLE()": "457",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"accumulatedFees()": "2558",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2949",
								"burnRate()": "2492",
								"decimals()": "450",
								"feeRecipient()": "2598",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3219",
								"initialize(string,string,uint256,address,address)": "infinite",
								"name()": "infinite",
								"nftStakingModule()": "2619",
								"pause()": "infinite",
								"paused()": "2519",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setBurnRate(uint256)": "infinite",
								"setNFTStakingModule(address)": "infinite",
								"setStakingModule(address)": "infinite",
								"setTransferFee(uint256)": "infinite",
								"setVestingModule(address)": "infinite",
								"stakingModule()": "2575",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2598",
								"transfer(address,uint256)": "infinite",
								"transferFee()": "2558",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"vestingModule()": "2619",
								"withdrawFees()": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_customTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "636"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 4214,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdc2b1a322f65cd48f2ead5b5f0dff4b49fa2e219a1b4fde36bf4a596e00420564736f6c634300081a0033",
									".code": [
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "5C975ABB"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "AD3CB1CC"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "D73792A9"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "D73792A9"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "DD62ED3E"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "E63AB1E9"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "E723422D"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "F72C0D8B"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "AD3CB1CC"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "BED99850"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "C60B494F"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "C76AF7B0"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "D547741F"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "91D14854"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "91D14854"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "95D89B41"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "A217FDDF"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "29"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "ACB2AD6F"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "5C975ABB"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "7E77C503"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "8456CB59"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "8F02BB5B"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "36568ABE"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "4F1EF286"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "4F1EF286"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "504B82BF"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "52D1902D"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "55B593F1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "587F5ED7"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "36568ABE"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "3F4BA83A"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "46904840"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "476343EE"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "492EF538"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "23B872DD"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "23B872DD"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "248A9CA3"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "2F2FF15D"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "313CE567"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "32CB6B0C"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "1FFC9A7"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "6FDDE03"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "95EA7B3"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "18160DDD"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "189D165E"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 377,
											"end": 4214,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "tag",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "72"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "tag",
											"source": 19,
											"value": "72"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "74"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 3820,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "tag",
											"source": 19,
											"value": "74"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 3820,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "tag",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "tag",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2392,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "tag",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 2392,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "tag",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 2392,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "tag",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 829,
											"end": 880,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 829,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 829,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "tag",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "tag",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "tag",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 4049,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "tag",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "tag",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 707,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 707,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "tag",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "tag",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 3346,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "tag",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 2053,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "tag",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "tag",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 915,
											"name": "tag",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 887,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "131"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 887,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "tag",
											"source": 19,
											"value": "131"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 921,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "136"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "136"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 921,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 921,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "tag",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "tag",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 740,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "tag",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 740,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "tag",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "tag",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "156"
										},
										{
											"begin": 1152,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "157"
										},
										{
											"begin": 1152,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "tag",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "tag",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "tag",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 3970,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "tag",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "tag",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "tag",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 3664,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 3664,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "tag",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2194,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "tag",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 2194,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "tag",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 2194,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "tag",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "tag",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "tag",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "185"
										},
										{
											"begin": 646,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 646,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "tag",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 678,
											"end": 701,
											"name": "tag",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "tag",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 678,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 678,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "tag",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "tag",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 1759,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 1759,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 958,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "tag",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 958,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "tag",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 505,
											"end": 567,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "tag",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 505,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "tag",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "89"
										},
										{
											"begin": 505,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "tag",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "tag",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 1900,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 1900,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "tag",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "tag",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 573,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "tag",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "89"
										},
										{
											"begin": 573,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "tag",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3602,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "tag",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3915,
											"end": 3920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 3904,
											"end": 3920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3920,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3920,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "47863B595116A31383855975A4078913DCE7881E717B75A06CED2DB5D534FF78"
										},
										{
											"begin": 3951,
											"end": 3956,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 3935,
											"end": 3957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3935,
											"end": 3957,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "tag",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 2544,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2552,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2563,
											"end": 2569,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2528,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 2528,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2528,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 2528,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2580,
											"end": 2604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 2617,
											"end": 2623,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2625,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 2625,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 2625,
											"end": 2637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2625,
											"end": 2637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 2625,
											"end": 2637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2607,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 2607,
											"end": 2638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2607,
											"end": 2638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 2607,
											"end": 2638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2580,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2580,
											"end": 2638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2648,
											"end": 2705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 2657,
											"end": 2663,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2665,
											"end": 2677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 2665,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 2665,
											"end": 2677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2665,
											"end": 2677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 2665,
											"end": 2677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2698,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2679,
											"end": 2695,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2679,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 2679,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2679,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2679,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 2679,
											"end": 2704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2679,
											"end": 2704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 2679,
											"end": 2704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2648,
											"end": 2656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 2648,
											"end": 2705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2648,
											"end": 2705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 2648,
											"end": 2705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2722,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2715,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2715,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 4876,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 880,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 866,
											"end": 880,
											"name": "PUSH",
											"source": 19,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 829,
											"end": 880,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 829,
											"end": 880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6463,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 6463,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "tag",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 543,
											"end": 567,
											"name": "PUSH",
											"source": 19,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 4109,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 4109,
											"end": 4119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4109,
											"end": 4119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 4109,
											"end": 4119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "tag",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 707,
											"end": 734,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 707,
											"end": 734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "tag",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1503,
											"end": 1522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 3449,
											"end": 3464,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3432,
											"end": 3464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3432,
											"end": 3464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3491,
											"end": 3492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3482,
											"end": 3492,
											"modifierDepth": 2,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 3474,
											"end": 3516,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3544,
											"end": 3545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 3526,
											"end": 3545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3526,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3526,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 3526,
											"end": 3545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3555,
											"end": 3601,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 3573,
											"end": 3577,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3592,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3594,
											"end": 3600,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3555,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 3555,
											"end": 3601,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3555,
											"end": 3601,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 3555,
											"end": 3601,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "C0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A"
										},
										{
											"begin": 3644,
											"end": 3650,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 3616,
											"end": 3651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3651,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 19
										},
										{
											"begin": 3422,
											"end": 3658,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3346,
											"end": 3658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "tag",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2139,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2139,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 2151,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 2151,
											"end": 2181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 915,
											"name": "tag",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 887,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 921,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 921,
											"end": 952,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 921,
											"end": 952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "tag",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "PUSH",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 740,
											"end": 770,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 740,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "tag",
											"source": 19,
											"value": "157"
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 1365,
											"end": 1370,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 1372,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 1352,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 1352,
											"end": 1380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1352,
											"end": 1380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 1352,
											"end": 1380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 1390,
											"end": 1410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 1390,
											"end": 1412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 1390,
											"end": 1412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1422,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 1422,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 1422,
											"end": 1446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1422,
											"end": 1446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 1422,
											"end": 1446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1456,
											"end": 1473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 1456,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 1456,
											"end": 1473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1456,
											"end": 1473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 1456,
											"end": 1473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1484,
											"end": 1522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1513,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1495,
											"end": 1513,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1515,
											"end": 1521,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1484,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1484,
											"end": 1522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1484,
											"end": 1522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 1484,
											"end": 1522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1484,
											"end": 1522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 1563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 543,
											"end": 567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 1556,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1532,
											"end": 1563,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 1563,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 1532,
											"end": 1563,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 1563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1573,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 613,
											"end": 639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 1599,
											"end": 1605,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1573,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1573,
											"end": 1606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1573,
											"end": 1606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 1573,
											"end": 1606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1573,
											"end": 1606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1617,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 1623,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1631,
											"end": 1643,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 1617,
											"end": 1622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 1617,
											"end": 1644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1617,
											"end": 1644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 1617,
											"end": 1644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1668,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1654,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1698,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 1687,
											"end": 1695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1733,
											"end": 1746,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 1718,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1718,
											"end": 1746,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "tag",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 543,
											"end": 567,
											"name": "PUSH",
											"source": 19,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 4028,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 4028,
											"end": 4036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4028,
											"end": 4036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 4028,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3970,
											"end": 4043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "tag",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3750,
											"end": 3761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 3750,
											"end": 3768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3750,
											"end": 3768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3750,
											"end": 3768,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 3750,
											"end": 3768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "F9F635B7CF851AF6071AAF78EF8A5F752DC52F19D556FEA4512B0C2AD4BAEA72"
										},
										{
											"begin": 3802,
											"end": 3806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 3783,
											"end": 3807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 3858,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3858,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "tag",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 2326,
											"end": 2338,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 2326,
											"end": 2336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 2326,
											"end": 2338,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2326,
											"end": 2338,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 2326,
											"end": 2338,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2351,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2310,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 2310,
											"end": 2358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2310,
											"end": 2358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 2310,
											"end": 2358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2375,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 2368,
											"end": 2379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2368,
											"end": 2379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2194,
											"end": 2386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "tag",
											"source": 19,
											"value": "185"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 646,
											"end": 672,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 646,
											"end": 672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 678,
											"end": 701,
											"name": "tag",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "PUSH",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 678,
											"end": 701,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "tag",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 1857,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1759,
											"end": 1894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 986,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 958,
											"end": 986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 818,
											"end": 823,
											"name": "PUSH",
											"source": 19,
											"value": "2710"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 567,
											"name": "tag",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 543,
											"end": 567,
											"name": "PUSH",
											"source": 19,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 505,
											"end": 567,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 505,
											"end": 567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "tag",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 2004,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 2047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 613,
											"end": 639,
											"name": "PUSH",
											"source": 19,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 573,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 573,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 4231,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 4231,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 3340,
											"name": "tag",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 2739,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 2834,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 2834,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2896,
											"end": 2907,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 823,
											"name": "PUSH",
											"source": 19,
											"value": "2710"
										},
										{
											"begin": 2920,
											"end": 2931,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 2920,
											"end": 2931,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 2911,
											"end": 2917,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2911,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2910,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2896,
											"end": 2950,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2896,
											"end": 2950,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 2978,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 823,
											"name": "PUSH",
											"source": 19,
											"value": "2710"
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "PUSH",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2982,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2981,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 3018,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 3018,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3073,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 3048,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 3048,
											"end": 3073,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3073,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 3048,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3048,
											"end": 3073,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 3048,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3028,
											"end": 3073,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3028,
											"end": 3073,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3094,
											"end": 3095,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3091,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3200,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 3084,
											"end": 3200,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "PUSH",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3149,
											"end": 3152,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 3111,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3182,
											"name": "PUSH",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 3167,
											"end": 3182,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3167,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "tag",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3200,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 3084,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3223,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3213,
											"end": 3227,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3279,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 3209,
											"end": 3279,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 3249,
											"end": 3255,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3257,
											"end": 3267,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 3243,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3279,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 3209,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3288,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 3304,
											"end": 3310,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3288,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 3288,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3288,
											"end": 3333,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 3288,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2824,
											"end": 3340,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2824,
											"end": 3340,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2824,
											"end": 3340,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2739,
											"end": 3340,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2739,
											"end": 3340,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2739,
											"end": 3340,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2739,
											"end": 3340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2948,
											"name": "PUSH",
											"source": 0,
											"value": "2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800"
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 7396,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 7396,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 7559,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7559,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 8019,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8019,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8045,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 8019,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 8182,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 8182,
											"end": 8194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8167,
											"end": 8171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4212,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 4132,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 613,
											"end": 639,
											"name": "PUSH",
											"source": 19,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4212,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4212,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 4514,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "tag",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 9373,
											"end": 9403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "tag",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "tag",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "504"
										},
										{
											"begin": 9431,
											"end": 9438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 9423,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "tag",
											"source": 4,
											"value": "504"
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "507"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "508"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "508"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "507"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "511"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 4,
											"value": "511"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "512"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "513"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "513"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "512"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "515"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "516"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "517"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 4,
											"value": "516"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 4,
											"value": "515"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "519"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "519"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "520"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 4,
											"value": "520"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "540"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "540"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "541"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "541"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "543"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "543"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 15,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 15,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 20,
											"value": "575"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 20,
											"value": "578"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 20,
											"value": "579"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "655"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "578"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 20,
											"value": "655"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "656"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 20,
											"value": "656"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 20,
											"value": "580"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "658"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "579"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 20,
											"value": "658"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "660"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "661"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 20,
											"value": "661"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 20,
											"value": "660"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "662"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "580"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 20,
											"value": "662"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 20,
											"value": "582"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "665"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 20,
											"value": "665"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "667"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "582"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 20,
											"value": "667"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 20
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 20,
											"value": "587"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "673"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 20,
											"value": "673"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "674"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 20,
											"value": "674"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "675"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 20,
											"value": "675"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "676"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 20,
											"value": "676"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "678"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "587"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 20,
											"value": "678"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 20,
											"value": "588"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "681"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "588"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 20,
											"value": "681"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 20,
											"value": "590"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "683"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 20,
											"value": "683"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "684"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 20,
											"value": "684"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "686"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "590"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 20,
											"value": "686"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 20,
											"value": "593"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "689"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 20,
											"value": "689"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "690"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 20,
											"value": "690"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 20,
											"value": "594"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "692"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "593"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 20,
											"value": "692"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "694"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "695"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 20,
											"value": "695"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 20,
											"value": "694"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "696"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 20,
											"value": "696"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "697"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "594"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 20,
											"value": "697"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "699"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 20,
											"value": "699"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "701"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 20,
											"value": "701"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "tag",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4535,
											"end": 4542,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4531,
											"end": 4554,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4527,
											"end": 4559,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "703"
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "704"
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 4562,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "tag",
											"source": 20,
											"value": "704"
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "tag",
											"source": 20,
											"value": "703"
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "705"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "594"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 20,
											"value": "705"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4653,
											"end": 4770,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4448,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "707"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "708"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 20,
											"value": "708"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 20,
											"value": "707"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "709"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 20,
											"value": "709"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "710"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 20,
											"value": "710"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "711"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "594"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 20,
											"value": "711"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "714"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 20,
											"value": "714"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "715"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 20,
											"value": "715"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "717"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 20,
											"value": "717"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "tag",
											"source": 20,
											"value": "86"
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "719"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "720"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 5878,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "tag",
											"source": 20,
											"value": "720"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "tag",
											"source": 20,
											"value": "719"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "721"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 6023,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "tag",
											"source": 20,
											"value": "721"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5969,
											"end": 6086,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5764,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "tag",
											"source": 20,
											"value": "599"
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "723"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 6186,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 20,
											"value": "723"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6099,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "tag",
											"source": 20,
											"value": "89"
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "725"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "599"
										},
										{
											"begin": 6367,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "tag",
											"source": 20,
											"value": "725"
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6223,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 20,
											"value": "93"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "727"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "728"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 20,
											"value": "728"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 20,
											"value": "727"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "729"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 20,
											"value": "729"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "730"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 20,
											"value": "730"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 20,
											"value": "601"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "733"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 20,
											"value": "733"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 20,
											"value": "99"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "735"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "601"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 20,
											"value": "735"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "tag",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "737"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 7448,
											"end": 7472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "tag",
											"source": 20,
											"value": "737"
										},
										{
											"begin": 7448,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7443,
											"end": 7446,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7436,
											"end": 7473,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7479,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "tag",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7618,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7605,
											"end": 7614,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7593,
											"end": 7619,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7593,
											"end": 7619,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "739"
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 7629,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "tag",
											"source": 20,
											"value": "739"
										},
										{
											"begin": 7629,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7485,
											"end": 7707,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7485,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7713,
											"end": 8042,
											"name": "tag",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 7713,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7823,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7818,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7800,
											"end": 7807,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7796,
											"end": 7819,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 7792,
											"end": 7824,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "741"
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "742"
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 7827,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "tag",
											"source": 20,
											"value": "742"
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "tag",
											"source": 20,
											"value": "741"
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "743"
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7997,
											"end": 8006,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7993,
											"end": 8015,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 7972,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "tag",
											"source": 20,
											"value": "743"
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7962,
											"end": 8025,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7962,
											"end": 8025,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7918,
											"end": 8035,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7713,
											"end": 8042,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7713,
											"end": 8042,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7713,
											"end": 8042,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7713,
											"end": 8042,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7713,
											"end": 8042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8048,
											"end": 8165,
											"name": "tag",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 8048,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8147,
											"end": 8159,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8171,
											"end": 8288,
											"name": "tag",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 8171,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8278,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8270,
											"end": 8282,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8294,
											"end": 8474,
											"name": "tag",
											"source": 20,
											"value": "605"
										},
										{
											"begin": 8294,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8342,
											"end": 8419,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8420,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8439,
											"end": 8443,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8429,
											"end": 8444,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8463,
											"end": 8467,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 8460,
											"end": 8461,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8468,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8480,
											"end": 8761,
											"name": "tag",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 8480,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8563,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "748"
										},
										{
											"begin": 8585,
											"end": 8589,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8563,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 8563,
											"end": 8590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8563,
											"end": 8590,
											"name": "tag",
											"source": 20,
											"value": "748"
										},
										{
											"begin": 8563,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8555,
											"end": 8561,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8551,
											"end": 8591,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8693,
											"end": 8699,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8681,
											"end": 8691,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8678,
											"end": 8700,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8645,
											"end": 8655,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8642,
											"end": 8676,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 8639,
											"end": 8701,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 8636,
											"end": 8724,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8636,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "749"
										},
										{
											"begin": 8636,
											"end": 8724,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "750"
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "605"
										},
										{
											"begin": 8704,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "tag",
											"source": 20,
											"value": "750"
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8636,
											"end": 8724,
											"name": "tag",
											"source": 20,
											"value": "749"
										},
										{
											"begin": 8636,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8744,
											"end": 8754,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8755,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8523,
											"end": 8761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8480,
											"end": 8761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8480,
											"end": 8761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8480,
											"end": 8761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8767,
											"end": 8896,
											"name": "tag",
											"source": 20,
											"value": "607"
										},
										{
											"begin": 8767,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 8807,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "752"
										},
										{
											"begin": 8828,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "575"
										},
										{
											"begin": 8828,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8828,
											"end": 8848,
											"name": "tag",
											"source": 20,
											"value": "752"
										},
										{
											"begin": 8828,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8818,
											"end": 8848,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8818,
											"end": 8848,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8857,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "753"
										},
										{
											"begin": 8885,
											"end": 8889,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8857,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 8857,
											"end": 8890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8857,
											"end": 8890,
											"name": "tag",
											"source": 20,
											"value": "753"
										},
										{
											"begin": 8857,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8767,
											"end": 8896,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8767,
											"end": 8896,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8767,
											"end": 8896,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8767,
											"end": 8896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8902,
											"end": 9209,
											"name": "tag",
											"source": 20,
											"value": "608"
										},
										{
											"begin": 8902,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8963,
											"end": 8967,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9042,
											"end": 9072,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 9039,
											"end": 9095,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9039,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "755"
										},
										{
											"begin": 9039,
											"end": 9095,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "756"
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "605"
										},
										{
											"begin": 9075,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "tag",
											"source": 20,
											"value": "756"
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9039,
											"end": 9095,
											"name": "tag",
											"source": 20,
											"value": "755"
										},
										{
											"begin": 9039,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "757"
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 9113,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "tag",
											"source": 20,
											"value": "757"
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9105,
											"end": 9142,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9105,
											"end": 9142,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9197,
											"end": 9201,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9191,
											"end": 9195,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9187,
											"end": 9202,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9179,
											"end": 9202,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9179,
											"end": 9202,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8902,
											"end": 9209,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8902,
											"end": 9209,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8902,
											"end": 9209,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8902,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9215,
											"end": 9363,
											"name": "tag",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 9215,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9313,
											"end": 9319,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9308,
											"end": 9311,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9303,
											"end": 9306,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9290,
											"end": 9320,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9351,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9340,
											"end": 9343,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9336,
											"end": 9352,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9329,
											"end": 9356,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9215,
											"end": 9363,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9215,
											"end": 9363,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9215,
											"end": 9363,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9215,
											"end": 9363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "tag",
											"source": 20,
											"value": "610"
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9446,
											"end": 9451,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "760"
										},
										{
											"begin": 9487,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "761"
										},
										{
											"begin": 9528,
											"end": 9534,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9487,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "608"
										},
										{
											"begin": 9487,
											"end": 9535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9487,
											"end": 9535,
											"name": "tag",
											"source": 20,
											"value": "761"
										},
										{
											"begin": 9487,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9471,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "607"
										},
										{
											"begin": 9471,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9471,
											"end": 9536,
											"name": "tag",
											"source": 20,
											"value": "760"
										},
										{
											"begin": 9471,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9462,
											"end": 9536,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9462,
											"end": 9536,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9559,
											"end": 9565,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9552,
											"end": 9557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9566,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9597,
											"end": 9601,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9590,
											"end": 9595,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9586,
											"end": 9602,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9635,
											"end": 9638,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9626,
											"end": 9632,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9621,
											"end": 9624,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9617,
											"end": 9633,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9614,
											"end": 9639,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 9611,
											"end": 9723,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9611,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "762"
										},
										{
											"begin": 9611,
											"end": 9723,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9642,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "763"
										},
										{
											"begin": 9642,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 9642,
											"end": 9721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9642,
											"end": 9721,
											"name": "tag",
											"source": 20,
											"value": "763"
										},
										{
											"begin": 9642,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9611,
											"end": 9723,
											"name": "tag",
											"source": 20,
											"value": "762"
										},
										{
											"begin": 9611,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9732,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "764"
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9774,
											"end": 9777,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9769,
											"end": 9772,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9732,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 9732,
											"end": 9786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9732,
											"end": 9786,
											"name": "tag",
											"source": 20,
											"value": "764"
										},
										{
											"begin": 9732,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9452,
											"end": 9792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9811,
											"end": 10149,
											"name": "tag",
											"source": 20,
											"value": "611"
										},
										{
											"begin": 9811,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9866,
											"end": 9871,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9915,
											"end": 9918,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9908,
											"end": 9912,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9896,
											"end": 9913,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9892,
											"end": 9919,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 9882,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "766"
										},
										{
											"begin": 9882,
											"end": 10004,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9923,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "767"
										},
										{
											"begin": 9923,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 9923,
											"end": 10002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9923,
											"end": 10002,
											"name": "tag",
											"source": 20,
											"value": "767"
										},
										{
											"begin": 9923,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9882,
											"end": 10004,
											"name": "tag",
											"source": 20,
											"value": "766"
										},
										{
											"begin": 9882,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10027,
											"end": 10047,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 10065,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "768"
										},
										{
											"begin": 10139,
											"end": 10142,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10131,
											"end": 10137,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10124,
											"end": 10128,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10112,
											"end": 10129,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10065,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "610"
										},
										{
											"begin": 10065,
											"end": 10143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10065,
											"end": 10143,
											"name": "tag",
											"source": 20,
											"value": "768"
										},
										{
											"begin": 10065,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10056,
											"end": 10143,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10056,
											"end": 10143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9872,
											"end": 10149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9811,
											"end": 10149,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9811,
											"end": 10149,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9811,
											"end": 10149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9811,
											"end": 10149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9811,
											"end": 10149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "tag",
											"source": 20,
											"value": "126"
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10232,
											"end": 10238,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10289,
											"end": 10291,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10277,
											"end": 10286,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10268,
											"end": 10275,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10264,
											"end": 10287,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 10257,
											"end": 10376,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10257,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "770"
										},
										{
											"begin": 10257,
											"end": 10376,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10295,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "771"
										},
										{
											"begin": 10295,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 10295,
											"end": 10374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10295,
											"end": 10374,
											"name": "tag",
											"source": 20,
											"value": "771"
										},
										{
											"begin": 10295,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10257,
											"end": 10376,
											"name": "tag",
											"source": 20,
											"value": "770"
										},
										{
											"begin": 10257,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10415,
											"end": 10416,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "772"
										},
										{
											"begin": 10485,
											"end": 10492,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10476,
											"end": 10482,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10461,
											"end": 10483,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10440,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 10440,
											"end": 10493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10440,
											"end": 10493,
											"name": "tag",
											"source": 20,
											"value": "772"
										},
										{
											"begin": 10440,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10386,
											"end": 10503,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10570,
											"end": 10572,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10559,
											"end": 10568,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10542,
											"end": 10574,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10593,
											"end": 10599,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10590,
											"end": 10620,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 10587,
											"end": 10704,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10587,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "773"
										},
										{
											"begin": 10587,
											"end": 10704,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10623,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "774"
										},
										{
											"begin": 10623,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 10623,
											"end": 10702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10623,
											"end": 10702,
											"name": "tag",
											"source": 20,
											"value": "774"
										},
										{
											"begin": 10623,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10587,
											"end": 10704,
											"name": "tag",
											"source": 20,
											"value": "773"
										},
										{
											"begin": 10587,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10728,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "775"
										},
										{
											"begin": 10782,
											"end": 10789,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10762,
											"end": 10771,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10758,
											"end": 10780,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10728,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "611"
										},
										{
											"begin": 10728,
											"end": 10790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10728,
											"end": 10790,
											"name": "tag",
											"source": 20,
											"value": "775"
										},
										{
											"begin": 10728,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10718,
											"end": 10790,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10718,
											"end": 10790,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10513,
											"end": 10800,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10813,
											"end": 11121,
											"name": "tag",
											"source": 20,
											"value": "612"
										},
										{
											"begin": 10813,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10963,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10954,
											"end": 10984,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 10951,
											"end": 11007,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10951,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "777"
										},
										{
											"begin": 10951,
											"end": 11007,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "778"
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "605"
										},
										{
											"begin": 10987,
											"end": 11005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "tag",
											"source": 20,
											"value": "778"
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10951,
											"end": 11007,
											"name": "tag",
											"source": 20,
											"value": "777"
										},
										{
											"begin": 10951,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11025,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "779"
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11025,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 11025,
											"end": 11054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11025,
											"end": 11054,
											"name": "tag",
											"source": 20,
											"value": "779"
										},
										{
											"begin": 11025,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11017,
											"end": 11054,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11017,
											"end": 11054,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11109,
											"end": 11113,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11103,
											"end": 11107,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11099,
											"end": 11114,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11091,
											"end": 11114,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11091,
											"end": 11114,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10813,
											"end": 11121,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10813,
											"end": 11121,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10813,
											"end": 11121,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10813,
											"end": 11121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "tag",
											"source": 20,
											"value": "613"
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11205,
											"end": 11210,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11230,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "781"
										},
										{
											"begin": 11246,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "782"
										},
										{
											"begin": 11288,
											"end": 11294,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11246,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "612"
										},
										{
											"begin": 11246,
											"end": 11295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11246,
											"end": 11295,
											"name": "tag",
											"source": 20,
											"value": "782"
										},
										{
											"begin": 11246,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11230,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "607"
										},
										{
											"begin": 11230,
											"end": 11296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11230,
											"end": 11296,
											"name": "tag",
											"source": 20,
											"value": "781"
										},
										{
											"begin": 11230,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11319,
											"end": 11325,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11312,
											"end": 11317,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11305,
											"end": 11326,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11357,
											"end": 11361,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11350,
											"end": 11355,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11346,
											"end": 11362,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11395,
											"end": 11398,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11386,
											"end": 11392,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11381,
											"end": 11384,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11377,
											"end": 11393,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11374,
											"end": 11399,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 11371,
											"end": 11483,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 11371,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "783"
										},
										{
											"begin": 11371,
											"end": 11483,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11402,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "784"
										},
										{
											"begin": 11402,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 11402,
											"end": 11481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11402,
											"end": 11481,
											"name": "tag",
											"source": 20,
											"value": "784"
										},
										{
											"begin": 11402,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11371,
											"end": 11483,
											"name": "tag",
											"source": 20,
											"value": "783"
										},
										{
											"begin": 11371,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11492,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "785"
										},
										{
											"begin": 11539,
											"end": 11545,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11529,
											"end": 11532,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11492,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 11492,
											"end": 11546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11492,
											"end": 11546,
											"name": "tag",
											"source": 20,
											"value": "785"
										},
										{
											"begin": 11492,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11211,
											"end": 11552,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11572,
											"end": 11912,
											"name": "tag",
											"source": 20,
											"value": "614"
										},
										{
											"begin": 11572,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11628,
											"end": 11633,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11680,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11670,
											"end": 11674,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 11662,
											"end": 11668,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11658,
											"end": 11675,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11654,
											"end": 11681,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 11644,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "787"
										},
										{
											"begin": 11644,
											"end": 11766,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11685,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "788"
										},
										{
											"begin": 11685,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 11685,
											"end": 11764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11685,
											"end": 11764,
											"name": "tag",
											"source": 20,
											"value": "788"
										},
										{
											"begin": 11685,
											"end": 11764,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11644,
											"end": 11766,
											"name": "tag",
											"source": 20,
											"value": "787"
										},
										{
											"begin": 11644,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11802,
											"end": 11808,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11789,
											"end": 11809,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 11827,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "789"
										},
										{
											"begin": 11902,
											"end": 11905,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11894,
											"end": 11900,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11887,
											"end": 11891,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11885,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 11875,
											"end": 11892,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11827,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "613"
										},
										{
											"begin": 11827,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11827,
											"end": 11906,
											"name": "tag",
											"source": 20,
											"value": "789"
										},
										{
											"begin": 11827,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11818,
											"end": 11906,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11818,
											"end": 11906,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11634,
											"end": 11912,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11572,
											"end": 11912,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11572,
											"end": 11912,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11572,
											"end": 11912,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11572,
											"end": 11912,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11572,
											"end": 11912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "tag",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12033,
											"end": 12039,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12041,
											"end": 12047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12049,
											"end": 12055,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12057,
											"end": 12063,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12065,
											"end": 12071,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12117,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 12102,
											"end": 12111,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 12093,
											"end": 12100,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 12089,
											"end": 12112,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 12085,
											"end": 12118,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 12082,
											"end": 12202,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12082,
											"end": 12202,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "791"
										},
										{
											"begin": 12082,
											"end": 12202,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12121,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "792"
										},
										{
											"begin": 12121,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 12121,
											"end": 12200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12121,
											"end": 12200,
											"name": "tag",
											"source": 20,
											"value": "792"
										},
										{
											"begin": 12121,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12082,
											"end": 12202,
											"name": "tag",
											"source": 20,
											"value": "791"
										},
										{
											"begin": 12082,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12269,
											"end": 12270,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12258,
											"end": 12267,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 12254,
											"end": 12271,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12241,
											"end": 12272,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12291,
											"end": 12297,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12288,
											"end": 12318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 12285,
											"end": 12402,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12285,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "793"
										},
										{
											"begin": 12285,
											"end": 12402,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12321,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "794"
										},
										{
											"begin": 12321,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 12321,
											"end": 12400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12321,
											"end": 12400,
											"name": "tag",
											"source": 20,
											"value": "794"
										},
										{
											"begin": 12321,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12285,
											"end": 12402,
											"name": "tag",
											"source": 20,
											"value": "793"
										},
										{
											"begin": 12285,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12426,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "795"
										},
										{
											"begin": 12481,
											"end": 12488,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 12457,
											"end": 12479,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12426,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "614"
										},
										{
											"begin": 12426,
											"end": 12489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12426,
											"end": 12489,
											"name": "tag",
											"source": 20,
											"value": "795"
										},
										{
											"begin": 12426,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12416,
											"end": 12489,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 12416,
											"end": 12489,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12212,
											"end": 12499,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12564,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12538,
											"end": 12570,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 12597,
											"end": 12615,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12589,
											"end": 12595,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12586,
											"end": 12616,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "796"
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12619,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "797"
										},
										{
											"begin": 12619,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 12619,
											"end": 12698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12619,
											"end": 12698,
											"name": "tag",
											"source": 20,
											"value": "797"
										},
										{
											"begin": 12619,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "tag",
											"source": 20,
											"value": "796"
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12724,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "798"
										},
										{
											"begin": 12779,
											"end": 12786,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12759,
											"end": 12768,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 12755,
											"end": 12777,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12724,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "614"
										},
										{
											"begin": 12724,
											"end": 12787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12724,
											"end": 12787,
											"name": "tag",
											"source": 20,
											"value": "798"
										},
										{
											"begin": 12724,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12714,
											"end": 12787,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 12714,
											"end": 12787,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12509,
											"end": 12797,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "799"
										},
										{
											"begin": 12907,
											"end": 12914,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 12898,
											"end": 12904,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12887,
											"end": 12896,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 12883,
											"end": 12905,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "594"
										},
										{
											"begin": 12862,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "tag",
											"source": 20,
											"value": "799"
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12852,
											"end": 12915,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 12852,
											"end": 12915,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12807,
											"end": 12925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 12966,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 12990,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "800"
										},
										{
											"begin": 13035,
											"end": 13042,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 13026,
											"end": 13032,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13015,
											"end": 13024,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 13011,
											"end": 13033,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12990,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 12990,
											"end": 13043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12990,
											"end": 13043,
											"name": "tag",
											"source": 20,
											"value": "800"
										},
										{
											"begin": 12990,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12980,
											"end": 13043,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12980,
											"end": 13043,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12935,
											"end": 13053,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13092,
											"end": 13095,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 13119,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "801"
										},
										{
											"begin": 13164,
											"end": 13171,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 13155,
											"end": 13161,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13144,
											"end": 13153,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 13140,
											"end": 13162,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13119,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 13119,
											"end": 13172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13119,
											"end": 13172,
											"name": "tag",
											"source": 20,
											"value": "801"
										},
										{
											"begin": 13119,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13109,
											"end": 13172,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13109,
											"end": 13172,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13063,
											"end": 13182,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11918,
											"end": 13189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "tag",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13263,
											"end": 13269,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13271,
											"end": 13277,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13320,
											"end": 13322,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13308,
											"end": 13317,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13299,
											"end": 13306,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13295,
											"end": 13318,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 13291,
											"end": 13323,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 13288,
											"end": 13407,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 13288,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "803"
										},
										{
											"begin": 13288,
											"end": 13407,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13326,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "804"
										},
										{
											"begin": 13326,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 13326,
											"end": 13405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13326,
											"end": 13405,
											"name": "tag",
											"source": 20,
											"value": "804"
										},
										{
											"begin": 13326,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13288,
											"end": 13407,
											"name": "tag",
											"source": 20,
											"value": "803"
										},
										{
											"begin": 13288,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13446,
											"end": 13447,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13471,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "805"
										},
										{
											"begin": 13516,
											"end": 13523,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13507,
											"end": 13513,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13496,
											"end": 13505,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13492,
											"end": 13514,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13471,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 13471,
											"end": 13524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13471,
											"end": 13524,
											"name": "tag",
											"source": 20,
											"value": "805"
										},
										{
											"begin": 13471,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13461,
											"end": 13524,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13461,
											"end": 13524,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13417,
											"end": 13534,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13573,
											"end": 13575,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13599,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "806"
										},
										{
											"begin": 13644,
											"end": 13651,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13635,
											"end": 13641,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13624,
											"end": 13633,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13620,
											"end": 13642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13599,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 13599,
											"end": 13652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13599,
											"end": 13652,
											"name": "tag",
											"source": 20,
											"value": "806"
										},
										{
											"begin": 13599,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13589,
											"end": 13652,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13589,
											"end": 13652,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13544,
											"end": 13662,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13195,
											"end": 13669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13675,
											"end": 13855,
											"name": "tag",
											"source": 20,
											"value": "615"
										},
										{
											"begin": 13675,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13723,
											"end": 13800,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13720,
											"end": 13721,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13801,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13820,
											"end": 13824,
											"name": "PUSH",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 13810,
											"end": 13825,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13844,
											"end": 13848,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 13841,
											"end": 13842,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13849,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 13861,
											"end": 14181,
											"name": "tag",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 13861,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13905,
											"end": 13911,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13943,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 13936,
											"end": 13940,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13932,
											"end": 13944,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 13922,
											"end": 13944,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13922,
											"end": 13944,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13989,
											"end": 13990,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 13983,
											"end": 13987,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13979,
											"end": 13991,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 14010,
											"end": 14028,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14000,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "809"
										},
										{
											"begin": 14000,
											"end": 14081,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14066,
											"end": 14070,
											"name": "PUSH",
											"source": 20,
											"value": "7F"
										},
										{
											"begin": 14058,
											"end": 14064,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14054,
											"end": 14071,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 14044,
											"end": 14071,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14044,
											"end": 14071,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14000,
											"end": 14081,
											"name": "tag",
											"source": 20,
											"value": "809"
										},
										{
											"begin": 14000,
											"end": 14081,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14128,
											"end": 14130,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14120,
											"end": 14126,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14117,
											"end": 14131,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 14097,
											"end": 14115,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14094,
											"end": 14132,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14091,
											"end": 14175,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "810"
										},
										{
											"begin": 14091,
											"end": 14175,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "811"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "615"
										},
										{
											"begin": 14147,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "tag",
											"source": 20,
											"value": "811"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14091,
											"end": 14175,
											"name": "tag",
											"source": 20,
											"value": "810"
										},
										{
											"begin": 14091,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13912,
											"end": 14181,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13861,
											"end": 14181,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13861,
											"end": 14181,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13861,
											"end": 14181,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13861,
											"end": 14181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14187,
											"end": 14367,
											"name": "tag",
											"source": 20,
											"value": "616"
										},
										{
											"begin": 14187,
											"end": 14367,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14235,
											"end": 14312,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14232,
											"end": 14233,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14225,
											"end": 14313,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 14329,
											"end": 14330,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 14322,
											"end": 14337,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14356,
											"end": 14360,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 14353,
											"end": 14354,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14346,
											"end": 14361,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 14373,
											"end": 14567,
											"name": "tag",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 14373,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14413,
											"end": 14417,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14433,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "814"
										},
										{
											"begin": 14451,
											"end": 14452,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14433,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 14433,
											"end": 14453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14433,
											"end": 14453,
											"name": "tag",
											"source": 20,
											"value": "814"
										},
										{
											"begin": 14433,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14428,
											"end": 14453,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14428,
											"end": 14453,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14467,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "815"
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14467,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 14467,
											"end": 14487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14467,
											"end": 14487,
											"name": "tag",
											"source": 20,
											"value": "815"
										},
										{
											"begin": 14467,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14462,
											"end": 14487,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14462,
											"end": 14487,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14511,
											"end": 14512,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14508,
											"end": 14509,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14504,
											"end": 14513,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14496,
											"end": 14513,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14496,
											"end": 14513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14535,
											"end": 14536,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14529,
											"end": 14533,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14526,
											"end": 14537,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 14523,
											"end": 14560,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14523,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "816"
										},
										{
											"begin": 14523,
											"end": 14560,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "817"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "616"
										},
										{
											"begin": 14540,
											"end": 14558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "tag",
											"source": 20,
											"value": "817"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14523,
											"end": 14560,
											"name": "tag",
											"source": 20,
											"value": "816"
										},
										{
											"begin": 14523,
											"end": 14560,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14373,
											"end": 14567,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14373,
											"end": 14567,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14373,
											"end": 14567,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14373,
											"end": 14567,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14373,
											"end": 14567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14573,
											"end": 14742,
											"name": "tag",
											"source": 20,
											"value": "617"
										},
										{
											"begin": 14573,
											"end": 14742,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14713,
											"end": 14734,
											"name": "PUSH",
											"source": 20,
											"value": "4E6F206665657320746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 14709,
											"end": 14710,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14701,
											"end": 14707,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14697,
											"end": 14711,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14690,
											"end": 14735,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14573,
											"end": 14742,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14573,
											"end": 14742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14748,
											"end": 15114,
											"name": "tag",
											"source": 20,
											"value": "618"
										},
										{
											"begin": 14748,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14890,
											"end": 14893,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14911,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "820"
										},
										{
											"begin": 14975,
											"end": 14977,
											"name": "PUSH",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 14970,
											"end": 14973,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14911,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 14911,
											"end": 14978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14911,
											"end": 14978,
											"name": "tag",
											"source": 20,
											"value": "820"
										},
										{
											"begin": 14911,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14904,
											"end": 14978,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14904,
											"end": 14978,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14987,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "821"
										},
										{
											"begin": 15076,
											"end": 15079,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14987,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "617"
										},
										{
											"begin": 14987,
											"end": 15080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14987,
											"end": 15080,
											"name": "tag",
											"source": 20,
											"value": "821"
										},
										{
											"begin": 14987,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15105,
											"end": 15107,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15100,
											"end": 15103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15096,
											"end": 15108,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15089,
											"end": 15108,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15089,
											"end": 15108,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14748,
											"end": 15114,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14748,
											"end": 15114,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14748,
											"end": 15114,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14748,
											"end": 15114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15120,
											"end": 15539,
											"name": "tag",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 15120,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15286,
											"end": 15290,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15324,
											"end": 15326,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15313,
											"end": 15322,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15309,
											"end": 15327,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15301,
											"end": 15327,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15301,
											"end": 15327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15373,
											"end": 15382,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15363,
											"end": 15383,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15359,
											"end": 15360,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15357,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15344,
											"end": 15361,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15337,
											"end": 15384,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15401,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "823"
										},
										{
											"begin": 15527,
											"end": 15531,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15401,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "618"
										},
										{
											"begin": 15401,
											"end": 15532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15401,
											"end": 15532,
											"name": "tag",
											"source": 20,
											"value": "823"
										},
										{
											"begin": 15401,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15393,
											"end": 15532,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15393,
											"end": 15532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15120,
											"end": 15539,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15120,
											"end": 15539,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15120,
											"end": 15539,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15120,
											"end": 15539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15630,
											"name": "tag",
											"source": 20,
											"value": "619"
										},
										{
											"begin": 15545,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15590,
											"end": 15597,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15619,
											"end": 15624,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15608,
											"end": 15624,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15608,
											"end": 15624,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15630,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15630,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15630,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15636,
											"end": 15737,
											"name": "tag",
											"source": 20,
											"value": "620"
										},
										{
											"begin": 15636,
											"end": 15737,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15672,
											"end": 15679,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15712,
											"end": 15730,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15705,
											"end": 15710,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15701,
											"end": 15731,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 15690,
											"end": 15731,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15690,
											"end": 15731,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15636,
											"end": 15737,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15636,
											"end": 15737,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15636,
											"end": 15737,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15636,
											"end": 15737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15803,
											"name": "tag",
											"source": 20,
											"value": "621"
										},
										{
											"begin": 15743,
											"end": 15803,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15771,
											"end": 15774,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15792,
											"end": 15797,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15785,
											"end": 15797,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15785,
											"end": 15797,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15803,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15803,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15803,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15809,
											"end": 15965,
											"name": "tag",
											"source": 20,
											"value": "622"
										},
										{
											"begin": 15809,
											"end": 15965,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15866,
											"end": 15875,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "828"
										},
										{
											"begin": 15916,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "829"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "830"
										},
										{
											"begin": 15951,
											"end": 15956,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "619"
										},
										{
											"begin": 15925,
											"end": 15957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "tag",
											"source": 20,
											"value": "830"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15916,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "621"
										},
										{
											"begin": 15916,
											"end": 15958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15916,
											"end": 15958,
											"name": "tag",
											"source": 20,
											"value": "829"
										},
										{
											"begin": 15916,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15899,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "620"
										},
										{
											"begin": 15899,
											"end": 15959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15899,
											"end": 15959,
											"name": "tag",
											"source": 20,
											"value": "828"
										},
										{
											"begin": 15899,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15886,
											"end": 15959,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15886,
											"end": 15959,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15809,
											"end": 15965,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15809,
											"end": 15965,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15809,
											"end": 15965,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15809,
											"end": 15965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15971,
											"end": 16116,
											"name": "tag",
											"source": 20,
											"value": "623"
										},
										{
											"begin": 15971,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16065,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "832"
										},
										{
											"begin": 16103,
											"end": 16108,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16065,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "622"
										},
										{
											"begin": 16065,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16065,
											"end": 16109,
											"name": "tag",
											"source": 20,
											"value": "832"
										},
										{
											"begin": 16065,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16060,
											"end": 16063,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16053,
											"end": 16110,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15971,
											"end": 16116,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15971,
											"end": 16116,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15971,
											"end": 16116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16122,
											"end": 16358,
											"name": "tag",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 16122,
											"end": 16358,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16222,
											"end": 16226,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16245,
											"end": 16263,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16237,
											"end": 16263,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16237,
											"end": 16263,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16273,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "834"
										},
										{
											"begin": 16348,
											"end": 16349,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16337,
											"end": 16346,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16333,
											"end": 16350,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16324,
											"end": 16330,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 16273,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "623"
										},
										{
											"begin": 16273,
											"end": 16351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16273,
											"end": 16351,
											"name": "tag",
											"source": 20,
											"value": "834"
										},
										{
											"begin": 16273,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16122,
											"end": 16358,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 16122,
											"end": 16358,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16122,
											"end": 16358,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16122,
											"end": 16358,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16122,
											"end": 16358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16364,
											"end": 16530,
											"name": "tag",
											"source": 20,
											"value": "624"
										},
										{
											"begin": 16364,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16504,
											"end": 16522,
											"name": "PUSH",
											"source": 20,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 16500,
											"end": 16501,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16492,
											"end": 16498,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16488,
											"end": 16502,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16481,
											"end": 16523,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16364,
											"end": 16530,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16364,
											"end": 16530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16536,
											"end": 16902,
											"name": "tag",
											"source": 20,
											"value": "625"
										},
										{
											"begin": 16536,
											"end": 16902,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16678,
											"end": 16681,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16699,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "837"
										},
										{
											"begin": 16763,
											"end": 16765,
											"name": "PUSH",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 16758,
											"end": 16761,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16699,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 16699,
											"end": 16766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16699,
											"end": 16766,
											"name": "tag",
											"source": 20,
											"value": "837"
										},
										{
											"begin": 16699,
											"end": 16766,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16692,
											"end": 16766,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16692,
											"end": 16766,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16775,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "838"
										},
										{
											"begin": 16864,
											"end": 16867,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16775,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "624"
										},
										{
											"begin": 16775,
											"end": 16868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16775,
											"end": 16868,
											"name": "tag",
											"source": 20,
											"value": "838"
										},
										{
											"begin": 16775,
											"end": 16868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16893,
											"end": 16895,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16888,
											"end": 16891,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16884,
											"end": 16896,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16877,
											"end": 16896,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16877,
											"end": 16896,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16536,
											"end": 16902,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16536,
											"end": 16902,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16536,
											"end": 16902,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16536,
											"end": 16902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16908,
											"end": 17327,
											"name": "tag",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 16908,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17074,
											"end": 17078,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17112,
											"end": 17114,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17101,
											"end": 17110,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17097,
											"end": 17115,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17089,
											"end": 17115,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17089,
											"end": 17115,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17161,
											"end": 17170,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17155,
											"end": 17159,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17151,
											"end": 17171,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 17147,
											"end": 17148,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17136,
											"end": 17145,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17132,
											"end": 17149,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17125,
											"end": 17172,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17189,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "840"
										},
										{
											"begin": 17315,
											"end": 17319,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17189,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "625"
										},
										{
											"begin": 17189,
											"end": 17320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17189,
											"end": 17320,
											"name": "tag",
											"source": 20,
											"value": "840"
										},
										{
											"begin": 17189,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17181,
											"end": 17320,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17181,
											"end": 17320,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16908,
											"end": 17327,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16908,
											"end": 17327,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16908,
											"end": 17327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16908,
											"end": 17327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17333,
											"end": 17512,
											"name": "tag",
											"source": 20,
											"value": "626"
										},
										{
											"begin": 17333,
											"end": 17512,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17473,
											"end": 17504,
											"name": "PUSH",
											"source": 20,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 17469,
											"end": 17470,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17467,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17457,
											"end": 17471,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17450,
											"end": 17505,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17333,
											"end": 17512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17333,
											"end": 17512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17518,
											"end": 17884,
											"name": "tag",
											"source": 20,
											"value": "627"
										},
										{
											"begin": 17518,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17660,
											"end": 17663,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17681,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "843"
										},
										{
											"begin": 17745,
											"end": 17747,
											"name": "PUSH",
											"source": 20,
											"value": "1D"
										},
										{
											"begin": 17740,
											"end": 17743,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17681,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 17681,
											"end": 17748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17681,
											"end": 17748,
											"name": "tag",
											"source": 20,
											"value": "843"
										},
										{
											"begin": 17681,
											"end": 17748,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17674,
											"end": 17748,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17674,
											"end": 17748,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17757,
											"end": 17850,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "844"
										},
										{
											"begin": 17846,
											"end": 17849,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17757,
											"end": 17850,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "626"
										},
										{
											"begin": 17757,
											"end": 17850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17757,
											"end": 17850,
											"name": "tag",
											"source": 20,
											"value": "844"
										},
										{
											"begin": 17757,
											"end": 17850,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17875,
											"end": 17877,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17870,
											"end": 17873,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17866,
											"end": 17878,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17859,
											"end": 17878,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17859,
											"end": 17878,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17518,
											"end": 17884,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17518,
											"end": 17884,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17518,
											"end": 17884,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17518,
											"end": 17884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17890,
											"end": 18309,
											"name": "tag",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 17890,
											"end": 18309,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18056,
											"end": 18060,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18094,
											"end": 18096,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18083,
											"end": 18092,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18079,
											"end": 18097,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18071,
											"end": 18097,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18071,
											"end": 18097,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18143,
											"end": 18152,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18137,
											"end": 18141,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18133,
											"end": 18153,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 18129,
											"end": 18130,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18118,
											"end": 18127,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18114,
											"end": 18131,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18107,
											"end": 18154,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18171,
											"end": 18302,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "846"
										},
										{
											"begin": 18297,
											"end": 18301,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18171,
											"end": 18302,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "627"
										},
										{
											"begin": 18171,
											"end": 18302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18171,
											"end": 18302,
											"name": "tag",
											"source": 20,
											"value": "846"
										},
										{
											"begin": 18171,
											"end": 18302,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18163,
											"end": 18302,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18163,
											"end": 18302,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17890,
											"end": 18309,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17890,
											"end": 18309,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17890,
											"end": 18309,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17890,
											"end": 18309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18315,
											"end": 18725,
											"name": "tag",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 18315,
											"end": 18725,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18355,
											"end": 18362,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "848"
										},
										{
											"begin": 18396,
											"end": 18397,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18378,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 18378,
											"end": 18398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18378,
											"end": 18398,
											"name": "tag",
											"source": 20,
											"value": "848"
										},
										{
											"begin": 18378,
											"end": 18398,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18373,
											"end": 18398,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18373,
											"end": 18398,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18412,
											"end": 18432,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "849"
										},
										{
											"begin": 18430,
											"end": 18431,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18412,
											"end": 18432,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 18412,
											"end": 18432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18412,
											"end": 18432,
											"name": "tag",
											"source": 20,
											"value": "849"
										},
										{
											"begin": 18412,
											"end": 18432,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18407,
											"end": 18432,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18407,
											"end": 18432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18467,
											"end": 18468,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18464,
											"end": 18465,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18460,
											"end": 18469,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 18489,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "850"
										},
										{
											"begin": 18507,
											"end": 18518,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18489,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 18489,
											"end": 18519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18489,
											"end": 18519,
											"name": "tag",
											"source": 20,
											"value": "850"
										},
										{
											"begin": 18489,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18478,
											"end": 18519,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18478,
											"end": 18519,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18668,
											"end": 18669,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18659,
											"end": 18666,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18655,
											"end": 18670,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 18652,
											"end": 18653,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18649,
											"end": 18671,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 18629,
											"end": 18630,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18622,
											"end": 18631,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 18602,
											"end": 18685,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 18579,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "851"
										},
										{
											"begin": 18579,
											"end": 18718,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 18698,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "852"
										},
										{
											"begin": 18698,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "616"
										},
										{
											"begin": 18698,
											"end": 18716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18698,
											"end": 18716,
											"name": "tag",
											"source": 20,
											"value": "852"
										},
										{
											"begin": 18698,
											"end": 18716,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18579,
											"end": 18718,
											"name": "tag",
											"source": 20,
											"value": "851"
										},
										{
											"begin": 18579,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18363,
											"end": 18725,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18315,
											"end": 18725,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18315,
											"end": 18725,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18315,
											"end": 18725,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18315,
											"end": 18725,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18315,
											"end": 18725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18731,
											"end": 18911,
											"name": "tag",
											"source": 20,
											"value": "628"
										},
										{
											"begin": 18731,
											"end": 18911,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18779,
											"end": 18856,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18776,
											"end": 18777,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18769,
											"end": 18857,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18876,
											"end": 18880,
											"name": "PUSH",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 18873,
											"end": 18874,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 18866,
											"end": 18881,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18900,
											"end": 18904,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 18897,
											"end": 18898,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18890,
											"end": 18905,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 18917,
											"end": 19102,
											"name": "tag",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 18917,
											"end": 19102,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18957,
											"end": 18958,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18974,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "855"
										},
										{
											"begin": 18992,
											"end": 18993,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18974,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 18974,
											"end": 18994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18974,
											"end": 18994,
											"name": "tag",
											"source": 20,
											"value": "855"
										},
										{
											"begin": 18974,
											"end": 18994,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18969,
											"end": 18994,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18969,
											"end": 18994,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19008,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "856"
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19008,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 19008,
											"end": 19028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19008,
											"end": 19028,
											"name": "tag",
											"source": 20,
											"value": "856"
										},
										{
											"begin": 19008,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19003,
											"end": 19028,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19003,
											"end": 19028,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19047,
											"end": 19048,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19037,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "857"
										},
										{
											"begin": 19037,
											"end": 19072,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19052,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "858"
										},
										{
											"begin": 19052,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "628"
										},
										{
											"begin": 19052,
											"end": 19070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19052,
											"end": 19070,
											"name": "tag",
											"source": 20,
											"value": "858"
										},
										{
											"begin": 19052,
											"end": 19070,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19037,
											"end": 19072,
											"name": "tag",
											"source": 20,
											"value": "857"
										},
										{
											"begin": 19037,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19094,
											"end": 19095,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19091,
											"end": 19092,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19087,
											"end": 19096,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 19082,
											"end": 19096,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19082,
											"end": 19096,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18917,
											"end": 19102,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18917,
											"end": 19102,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18917,
											"end": 19102,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18917,
											"end": 19102,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18917,
											"end": 19102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19148,
											"end": 19151,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "860"
										},
										{
											"begin": 19185,
											"end": 19186,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 19167,
											"end": 19187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "tag",
											"source": 20,
											"value": "860"
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19162,
											"end": 19187,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19162,
											"end": 19187,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "861"
										},
										{
											"begin": 19219,
											"end": 19220,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 19201,
											"end": 19221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "tag",
											"source": 20,
											"value": "861"
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19196,
											"end": 19221,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19196,
											"end": 19221,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19244,
											"end": 19245,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19241,
											"end": 19242,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19237,
											"end": 19246,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19230,
											"end": 19246,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19230,
											"end": 19246,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19265,
											"end": 19268,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 19262,
											"end": 19263,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19259,
											"end": 19269,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "862"
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "863"
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "616"
										},
										{
											"begin": 19272,
											"end": 19290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "tag",
											"source": 20,
											"value": "863"
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "tag",
											"source": 20,
											"value": "862"
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19108,
											"end": 19299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19305,
											"end": 19448,
											"name": "tag",
											"source": 20,
											"value": "629"
										},
										{
											"begin": 19305,
											"end": 19448,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19362,
											"end": 19367,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19393,
											"end": 19399,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19387,
											"end": 19400,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 19378,
											"end": 19400,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19378,
											"end": 19400,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19409,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "865"
										},
										{
											"begin": 19436,
											"end": 19441,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19409,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 19409,
											"end": 19442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19409,
											"end": 19442,
											"name": "tag",
											"source": 20,
											"value": "865"
										},
										{
											"begin": 19409,
											"end": 19442,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19305,
											"end": 19448,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19305,
											"end": 19448,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19305,
											"end": 19448,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19305,
											"end": 19448,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19305,
											"end": 19448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19454,
											"end": 19805,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 19454,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19524,
											"end": 19530,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19573,
											"end": 19575,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19561,
											"end": 19570,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19552,
											"end": 19559,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19548,
											"end": 19571,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 19544,
											"end": 19576,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 19541,
											"end": 19660,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19541,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "867"
										},
										{
											"begin": 19541,
											"end": 19660,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19579,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "868"
										},
										{
											"begin": 19579,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 19579,
											"end": 19658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19579,
											"end": 19658,
											"name": "tag",
											"source": 20,
											"value": "868"
										},
										{
											"begin": 19579,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19541,
											"end": 19660,
											"name": "tag",
											"source": 20,
											"value": "867"
										},
										{
											"begin": 19541,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19699,
											"end": 19700,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19724,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "869"
										},
										{
											"begin": 19780,
											"end": 19787,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19771,
											"end": 19777,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19760,
											"end": 19769,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19756,
											"end": 19778,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19724,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "629"
										},
										{
											"begin": 19724,
											"end": 19788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19724,
											"end": 19788,
											"name": "tag",
											"source": 20,
											"value": "869"
										},
										{
											"begin": 19724,
											"end": 19788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19714,
											"end": 19788,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19714,
											"end": 19788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19670,
											"end": 19798,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19454,
											"end": 19805,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19454,
											"end": 19805,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19454,
											"end": 19805,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19454,
											"end": 19805,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19454,
											"end": 19805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "tag",
											"source": 20,
											"value": "500"
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19932,
											"end": 19936,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19970,
											"end": 19972,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 19959,
											"end": 19968,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19955,
											"end": 19973,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19947,
											"end": 19973,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19947,
											"end": 19973,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19983,
											"end": 20054,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "871"
										},
										{
											"begin": 20051,
											"end": 20052,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20040,
											"end": 20049,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20036,
											"end": 20053,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20027,
											"end": 20033,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19983,
											"end": 20054,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 19983,
											"end": 20054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19983,
											"end": 20054,
											"name": "tag",
											"source": 20,
											"value": "871"
										},
										{
											"begin": 19983,
											"end": 20054,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20064,
											"end": 20136,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "872"
										},
										{
											"begin": 20132,
											"end": 20134,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20121,
											"end": 20130,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20117,
											"end": 20135,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20108,
											"end": 20114,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 20064,
											"end": 20136,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "599"
										},
										{
											"begin": 20064,
											"end": 20136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20064,
											"end": 20136,
											"name": "tag",
											"source": 20,
											"value": "872"
										},
										{
											"begin": 20064,
											"end": 20136,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19811,
											"end": 20143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20149,
											"end": 20319,
											"name": "tag",
											"source": 20,
											"value": "630"
										},
										{
											"begin": 20149,
											"end": 20319,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20289,
											"end": 20311,
											"name": "PUSH",
											"source": 20,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 20285,
											"end": 20286,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20277,
											"end": 20283,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20273,
											"end": 20287,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20266,
											"end": 20312,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 20149,
											"end": 20319,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20149,
											"end": 20319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20325,
											"end": 20691,
											"name": "tag",
											"source": 20,
											"value": "631"
										},
										{
											"begin": 20325,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20467,
											"end": 20470,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "875"
										},
										{
											"begin": 20552,
											"end": 20554,
											"name": "PUSH",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 20547,
											"end": 20550,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20488,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 20488,
											"end": 20555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20488,
											"end": 20555,
											"name": "tag",
											"source": 20,
											"value": "875"
										},
										{
											"begin": 20488,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20481,
											"end": 20555,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20481,
											"end": 20555,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20564,
											"end": 20657,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "876"
										},
										{
											"begin": 20653,
											"end": 20656,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20564,
											"end": 20657,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "630"
										},
										{
											"begin": 20564,
											"end": 20657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20564,
											"end": 20657,
											"name": "tag",
											"source": 20,
											"value": "876"
										},
										{
											"begin": 20564,
											"end": 20657,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20682,
											"end": 20684,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20677,
											"end": 20680,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20673,
											"end": 20685,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20666,
											"end": 20685,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20666,
											"end": 20685,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20325,
											"end": 20691,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20325,
											"end": 20691,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20325,
											"end": 20691,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20325,
											"end": 20691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20697,
											"end": 21116,
											"name": "tag",
											"source": 20,
											"value": "509"
										},
										{
											"begin": 20697,
											"end": 21116,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20863,
											"end": 20867,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20901,
											"end": 20903,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20890,
											"end": 20899,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20886,
											"end": 20904,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20878,
											"end": 20904,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20878,
											"end": 20904,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20950,
											"end": 20959,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20944,
											"end": 20948,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20940,
											"end": 20960,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 20936,
											"end": 20937,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20925,
											"end": 20934,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20921,
											"end": 20938,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20914,
											"end": 20961,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 20978,
											"end": 21109,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "878"
										},
										{
											"begin": 21104,
											"end": 21108,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20978,
											"end": 21109,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "631"
										},
										{
											"begin": 20978,
											"end": 21109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20978,
											"end": 21109,
											"name": "tag",
											"source": 20,
											"value": "878"
										},
										{
											"begin": 20978,
											"end": 21109,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20970,
											"end": 21109,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20970,
											"end": 21109,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20697,
											"end": 21116,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20697,
											"end": 21116,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20697,
											"end": 21116,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20697,
											"end": 21116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "tag",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21271,
											"end": 21275,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21309,
											"end": 21311,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 21298,
											"end": 21307,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21294,
											"end": 21312,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21286,
											"end": 21312,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21286,
											"end": 21312,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21322,
											"end": 21393,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "880"
										},
										{
											"begin": 21390,
											"end": 21391,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21379,
											"end": 21388,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21375,
											"end": 21392,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21366,
											"end": 21372,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 21322,
											"end": 21393,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 21322,
											"end": 21393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21322,
											"end": 21393,
											"name": "tag",
											"source": 20,
											"value": "880"
										},
										{
											"begin": 21322,
											"end": 21393,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21403,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "881"
										},
										{
											"begin": 21471,
											"end": 21473,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21460,
											"end": 21469,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21456,
											"end": 21474,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21447,
											"end": 21453,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 21403,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 21403,
											"end": 21475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21403,
											"end": 21475,
											"name": "tag",
											"source": 20,
											"value": "881"
										},
										{
											"begin": 21403,
											"end": 21475,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21485,
											"end": 21557,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "882"
										},
										{
											"begin": 21553,
											"end": 21555,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 21542,
											"end": 21551,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21538,
											"end": 21556,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21529,
											"end": 21535,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 21485,
											"end": 21557,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 21485,
											"end": 21557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21485,
											"end": 21557,
											"name": "tag",
											"source": 20,
											"value": "882"
										},
										{
											"begin": 21485,
											"end": 21557,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21570,
											"end": 21711,
											"name": "tag",
											"source": 20,
											"value": "632"
										},
										{
											"begin": 21570,
											"end": 21711,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21619,
											"end": 21623,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21645,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21634,
											"end": 21645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21634,
											"end": 21645,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21665,
											"end": 21668,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21662,
											"end": 21663,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21655,
											"end": 21669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 21699,
											"end": 21703,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21696,
											"end": 21697,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21686,
											"end": 21704,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 21678,
											"end": 21704,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21678,
											"end": 21704,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21570,
											"end": 21711,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21570,
											"end": 21711,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21570,
											"end": 21711,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21570,
											"end": 21711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21717,
											"end": 21810,
											"name": "tag",
											"source": 20,
											"value": "633"
										},
										{
											"begin": 21717,
											"end": 21810,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21754,
											"end": 21760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21801,
											"end": 21803,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21796,
											"end": 21798,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 21789,
											"end": 21794,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21785,
											"end": 21799,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21781,
											"end": 21804,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 21771,
											"end": 21804,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21771,
											"end": 21804,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21717,
											"end": 21810,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21717,
											"end": 21810,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21717,
											"end": 21810,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21717,
											"end": 21810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21923,
											"name": "tag",
											"source": 20,
											"value": "634"
										},
										{
											"begin": 21816,
											"end": 21923,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21860,
											"end": 21868,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21910,
											"end": 21915,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21904,
											"end": 21908,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21900,
											"end": 21916,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 21879,
											"end": 21916,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21879,
											"end": 21916,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21923,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21923,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21923,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21923,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "tag",
											"source": 20,
											"value": "635"
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21998,
											"end": 22004,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22048,
											"end": 22049,
											"name": "PUSH",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 22036,
											"end": 22046,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22032,
											"end": 22050,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 22071,
											"end": 22168,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "887"
										},
										{
											"begin": 22101,
											"end": 22167,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22090,
											"end": 22099,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22071,
											"end": 22168,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "634"
										},
										{
											"begin": 22071,
											"end": 22168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22071,
											"end": 22168,
											"name": "tag",
											"source": 20,
											"value": "887"
										},
										{
											"begin": 22071,
											"end": 22168,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22189,
											"end": 22228,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "888"
										},
										{
											"begin": 22219,
											"end": 22227,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 22208,
											"end": 22217,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22189,
											"end": 22228,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "634"
										},
										{
											"begin": 22189,
											"end": 22228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22189,
											"end": 22228,
											"name": "tag",
											"source": 20,
											"value": "888"
										},
										{
											"begin": 22189,
											"end": 22228,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22177,
											"end": 22228,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 22177,
											"end": 22228,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22261,
											"end": 22265,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 22257,
											"end": 22266,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 22250,
											"end": 22255,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22246,
											"end": 22267,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 22237,
											"end": 22267,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 22237,
											"end": 22267,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22310,
											"end": 22314,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 22300,
											"end": 22308,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 22296,
											"end": 22315,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 22289,
											"end": 22294,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22286,
											"end": 22316,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 22276,
											"end": 22316,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 22276,
											"end": 22316,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22005,
											"end": 22322,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22005,
											"end": 22322,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21929,
											"end": 22322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22328,
											"end": 22470,
											"name": "tag",
											"source": 20,
											"value": "636"
										},
										{
											"begin": 22328,
											"end": 22470,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22378,
											"end": 22387,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22411,
											"end": 22464,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "890"
										},
										{
											"begin": 22429,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "891"
										},
										{
											"begin": 22438,
											"end": 22462,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "892"
										},
										{
											"begin": 22456,
											"end": 22461,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22438,
											"end": 22462,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 22438,
											"end": 22462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22438,
											"end": 22462,
											"name": "tag",
											"source": 20,
											"value": "892"
										},
										{
											"begin": 22438,
											"end": 22462,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22429,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "621"
										},
										{
											"begin": 22429,
											"end": 22463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22429,
											"end": 22463,
											"name": "tag",
											"source": 20,
											"value": "891"
										},
										{
											"begin": 22429,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22411,
											"end": 22464,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 22411,
											"end": 22464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22411,
											"end": 22464,
											"name": "tag",
											"source": 20,
											"value": "890"
										},
										{
											"begin": 22411,
											"end": 22464,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22398,
											"end": 22464,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22398,
											"end": 22464,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22328,
											"end": 22470,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22328,
											"end": 22470,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22328,
											"end": 22470,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22328,
											"end": 22470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22476,
											"end": 22551,
											"name": "tag",
											"source": 20,
											"value": "637"
										},
										{
											"begin": 22476,
											"end": 22551,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22519,
											"end": 22522,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22540,
											"end": 22545,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 22533,
											"end": 22545,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22533,
											"end": 22545,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22476,
											"end": 22551,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22476,
											"end": 22551,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22476,
											"end": 22551,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22476,
											"end": 22551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22557,
											"end": 22826,
											"name": "tag",
											"source": 20,
											"value": "638"
										},
										{
											"begin": 22557,
											"end": 22826,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22667,
											"end": 22706,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "895"
										},
										{
											"begin": 22698,
											"end": 22705,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22667,
											"end": 22706,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "636"
										},
										{
											"begin": 22667,
											"end": 22706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22667,
											"end": 22706,
											"name": "tag",
											"source": 20,
											"value": "895"
										},
										{
											"begin": 22667,
											"end": 22706,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22728,
											"end": 22819,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "896"
										},
										{
											"begin": 22777,
											"end": 22818,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "897"
										},
										{
											"begin": 22801,
											"end": 22817,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22777,
											"end": 22818,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "637"
										},
										{
											"begin": 22777,
											"end": 22818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22777,
											"end": 22818,
											"name": "tag",
											"source": 20,
											"value": "897"
										},
										{
											"begin": 22777,
											"end": 22818,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22769,
											"end": 22775,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22762,
											"end": 22766,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22756,
											"end": 22767,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 22728,
											"end": 22819,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "635"
										},
										{
											"begin": 22728,
											"end": 22819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22728,
											"end": 22819,
											"name": "tag",
											"source": 20,
											"value": "896"
										},
										{
											"begin": 22728,
											"end": 22819,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22722,
											"end": 22726,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22715,
											"end": 22820,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 22633,
											"end": 22826,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22557,
											"end": 22826,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22557,
											"end": 22826,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22557,
											"end": 22826,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22557,
											"end": 22826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22832,
											"end": 22905,
											"name": "tag",
											"source": 20,
											"value": "639"
										},
										{
											"begin": 22832,
											"end": 22905,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22877,
											"end": 22880,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22832,
											"end": 22905,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22832,
											"end": 22905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23100,
											"name": "tag",
											"source": 20,
											"value": "640"
										},
										{
											"begin": 22911,
											"end": 23100,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22988,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "900"
										},
										{
											"begin": 22988,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "639"
										},
										{
											"begin": 22988,
											"end": 23020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22988,
											"end": 23020,
											"name": "tag",
											"source": 20,
											"value": "900"
										},
										{
											"begin": 22988,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23029,
											"end": 23094,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "901"
										},
										{
											"begin": 23087,
											"end": 23093,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23079,
											"end": 23085,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 23073,
											"end": 23077,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 23029,
											"end": 23094,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "638"
										},
										{
											"begin": 23029,
											"end": 23094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23029,
											"end": 23094,
											"name": "tag",
											"source": 20,
											"value": "901"
										},
										{
											"begin": 23029,
											"end": 23094,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22964,
											"end": 23100,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23100,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23100,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23106,
											"end": 23292,
											"name": "tag",
											"source": 20,
											"value": "641"
										},
										{
											"begin": 23106,
											"end": 23292,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "tag",
											"source": 20,
											"value": "903"
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23183,
											"end": 23186,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23176,
											"end": 23181,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23173,
											"end": 23187,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "905"
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 23237,
											"end": 23276,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "906"
										},
										{
											"begin": 23274,
											"end": 23275,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23267,
											"end": 23272,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23237,
											"end": 23276,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "640"
										},
										{
											"begin": 23237,
											"end": 23276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23237,
											"end": 23276,
											"name": "tag",
											"source": 20,
											"value": "906"
										},
										{
											"begin": 23237,
											"end": 23276,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23210,
											"end": 23211,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 23203,
											"end": 23208,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23199,
											"end": 23212,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23190,
											"end": 23212,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23190,
											"end": 23212,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "903"
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "tag",
											"source": 20,
											"value": "905"
										},
										{
											"begin": 23166,
											"end": 23286,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23106,
											"end": 23292,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23106,
											"end": 23292,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23106,
											"end": 23292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23298,
											"end": 23841,
											"name": "tag",
											"source": 20,
											"value": "642"
										},
										{
											"begin": 23298,
											"end": 23841,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23399,
											"end": 23401,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 23394,
											"end": 23397,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23391,
											"end": 23402,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 23388,
											"end": 23834,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 23388,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "908"
										},
										{
											"begin": 23388,
											"end": 23834,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 23433,
											"end": 23471,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "909"
										},
										{
											"begin": 23465,
											"end": 23470,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23433,
											"end": 23471,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "632"
										},
										{
											"begin": 23433,
											"end": 23471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23433,
											"end": 23471,
											"name": "tag",
											"source": 20,
											"value": "909"
										},
										{
											"begin": 23433,
											"end": 23471,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23517,
											"end": 23546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "910"
										},
										{
											"begin": 23535,
											"end": 23545,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 23517,
											"end": 23546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "633"
										},
										{
											"begin": 23517,
											"end": 23546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23517,
											"end": 23546,
											"name": "tag",
											"source": 20,
											"value": "910"
										},
										{
											"begin": 23517,
											"end": 23546,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23507,
											"end": 23515,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23503,
											"end": 23547,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23700,
											"end": 23702,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 23688,
											"end": 23698,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 23685,
											"end": 23703,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 23682,
											"end": 23731,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 23682,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "911"
										},
										{
											"begin": 23682,
											"end": 23731,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 23721,
											"end": 23729,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23682,
											"end": 23731,
											"name": "tag",
											"source": 20,
											"value": "911"
										},
										{
											"begin": 23682,
											"end": 23731,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23744,
											"end": 23824,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "912"
										},
										{
											"begin": 23800,
											"end": 23822,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "913"
										},
										{
											"begin": 23818,
											"end": 23821,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 23800,
											"end": 23822,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "633"
										},
										{
											"begin": 23800,
											"end": 23822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23800,
											"end": 23822,
											"name": "tag",
											"source": 20,
											"value": "913"
										},
										{
											"begin": 23800,
											"end": 23822,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23790,
											"end": 23798,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23786,
											"end": 23823,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23773,
											"end": 23784,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23744,
											"end": 23824,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "641"
										},
										{
											"begin": 23744,
											"end": 23824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23744,
											"end": 23824,
											"name": "tag",
											"source": 20,
											"value": "912"
										},
										{
											"begin": 23744,
											"end": 23824,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23403,
											"end": 23834,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23403,
											"end": 23834,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23388,
											"end": 23834,
											"name": "tag",
											"source": 20,
											"value": "908"
										},
										{
											"begin": 23388,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23298,
											"end": 23841,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23298,
											"end": 23841,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23298,
											"end": 23841,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23298,
											"end": 23841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23847,
											"end": 23964,
											"name": "tag",
											"source": 20,
											"value": "643"
										},
										{
											"begin": 23847,
											"end": 23964,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 23909,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23951,
											"end": 23956,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23945,
											"end": 23949,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23941,
											"end": 23957,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 23920,
											"end": 23957,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23920,
											"end": 23957,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23847,
											"end": 23964,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 23847,
											"end": 23964,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23847,
											"end": 23964,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23847,
											"end": 23964,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23847,
											"end": 23964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23970,
											"end": 24139,
											"name": "tag",
											"source": 20,
											"value": "644"
										},
										{
											"begin": 23970,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24014,
											"end": 24020,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24047,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "916"
										},
										{
											"begin": 24095,
											"end": 24096,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24091,
											"end": 24097,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 24083,
											"end": 24088,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 24080,
											"end": 24081,
											"name": "PUSH",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 24076,
											"end": 24089,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 24047,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "643"
										},
										{
											"begin": 24047,
											"end": 24098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24047,
											"end": 24098,
											"name": "tag",
											"source": 20,
											"value": "916"
										},
										{
											"begin": 24047,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24043,
											"end": 24099,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 24128,
											"end": 24132,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 24122,
											"end": 24126,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24118,
											"end": 24133,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 24108,
											"end": 24133,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24108,
											"end": 24133,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24021,
											"end": 24139,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23970,
											"end": 24139,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 23970,
											"end": 24139,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23970,
											"end": 24139,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23970,
											"end": 24139,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23970,
											"end": 24139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24439,
											"name": "tag",
											"source": 20,
											"value": "645"
										},
										{
											"begin": 24144,
											"end": 24439,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24220,
											"end": 24224,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24366,
											"end": 24395,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "918"
										},
										{
											"begin": 24391,
											"end": 24394,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24385,
											"end": 24389,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24366,
											"end": 24395,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "644"
										},
										{
											"begin": 24366,
											"end": 24395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24366,
											"end": 24395,
											"name": "tag",
											"source": 20,
											"value": "918"
										},
										{
											"begin": 24366,
											"end": 24395,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24358,
											"end": 24395,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24358,
											"end": 24395,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24428,
											"end": 24431,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24425,
											"end": 24426,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 24421,
											"end": 24432,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 24415,
											"end": 24419,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24412,
											"end": 24433,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 24404,
											"end": 24433,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24404,
											"end": 24433,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24439,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24439,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24439,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24439,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24444,
											"end": 25839,
											"name": "tag",
											"source": 20,
											"value": "542"
										},
										{
											"begin": 24444,
											"end": 25839,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24561,
											"end": 24598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "920"
										},
										{
											"begin": 24594,
											"end": 24597,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24561,
											"end": 24598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 24561,
											"end": 24598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24561,
											"end": 24598,
											"name": "tag",
											"source": 20,
											"value": "920"
										},
										{
											"begin": 24561,
											"end": 24598,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24663,
											"end": 24681,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24655,
											"end": 24661,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24652,
											"end": 24682,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 24649,
											"end": 24705,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 24649,
											"end": 24705,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "921"
										},
										{
											"begin": 24649,
											"end": 24705,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 24685,
											"end": 24703,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "922"
										},
										{
											"begin": 24685,
											"end": 24703,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "605"
										},
										{
											"begin": 24685,
											"end": 24703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24685,
											"end": 24703,
											"name": "tag",
											"source": 20,
											"value": "922"
										},
										{
											"begin": 24685,
											"end": 24703,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24649,
											"end": 24705,
											"name": "tag",
											"source": 20,
											"value": "921"
										},
										{
											"begin": 24649,
											"end": 24705,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24729,
											"end": 24767,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "923"
										},
										{
											"begin": 24761,
											"end": 24765,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24755,
											"end": 24766,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 24729,
											"end": 24767,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 24729,
											"end": 24767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24729,
											"end": 24767,
											"name": "tag",
											"source": 20,
											"value": "923"
										},
										{
											"begin": 24729,
											"end": 24767,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24814,
											"end": 24881,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "924"
										},
										{
											"begin": 24874,
											"end": 24880,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24866,
											"end": 24872,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24860,
											"end": 24864,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 24814,
											"end": 24881,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "642"
										},
										{
											"begin": 24814,
											"end": 24881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24814,
											"end": 24881,
											"name": "tag",
											"source": 20,
											"value": "924"
										},
										{
											"begin": 24814,
											"end": 24881,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24908,
											"end": 24909,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 24936,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 24919,
											"end": 24936,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24919,
											"end": 24936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24964,
											"end": 24966,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 24956,
											"end": 24962,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24953,
											"end": 24967,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 24981,
											"end": 24982,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 24976,
											"end": 25594,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24976,
											"end": 25594,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 24976,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "926"
										},
										{
											"begin": 24976,
											"end": 25594,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 25638,
											"end": 25639,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25661,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25652,
											"end": 25729,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 25652,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "927"
										},
										{
											"begin": 25652,
											"end": 25729,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 25704,
											"end": 25713,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25699,
											"end": 25702,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 25695,
											"end": 25714,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25689,
											"end": 25715,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 25680,
											"end": 25715,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25680,
											"end": 25715,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25652,
											"end": 25729,
											"name": "tag",
											"source": 20,
											"value": "927"
										},
										{
											"begin": 25652,
											"end": 25729,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25755,
											"end": 25822,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "928"
										},
										{
											"begin": 25815,
											"end": 25821,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 25808,
											"end": 25813,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25755,
											"end": 25822,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "645"
										},
										{
											"begin": 25755,
											"end": 25822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25755,
											"end": 25822,
											"name": "tag",
											"source": 20,
											"value": "928"
										},
										{
											"begin": 25755,
											"end": 25822,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25749,
											"end": 25753,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 25742,
											"end": 25823,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 25611,
											"end": 25833,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24946,
											"end": 25833,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "925"
										},
										{
											"begin": 24946,
											"end": 25833,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24976,
											"end": 25594,
											"name": "tag",
											"source": 20,
											"value": "926"
										},
										{
											"begin": 24976,
											"end": 25594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25028,
											"end": 25032,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 25024,
											"end": 25033,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25012,
											"end": 25034,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 25062,
											"end": 25099,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "929"
										},
										{
											"begin": 25094,
											"end": 25098,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 25062,
											"end": 25099,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "632"
										},
										{
											"begin": 25062,
											"end": 25099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25062,
											"end": 25099,
											"name": "tag",
											"source": 20,
											"value": "929"
										},
										{
											"begin": 25062,
											"end": 25099,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25121,
											"end": 25122,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "tag",
											"source": 20,
											"value": "930"
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25149,
											"end": 25156,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25146,
											"end": 25147,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25143,
											"end": 25157,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "932"
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 25228,
											"end": 25237,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25223,
											"end": 25226,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 25219,
											"end": 25238,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25213,
											"end": 25239,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 25205,
											"end": 25211,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25240,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 25279,
											"end": 25280,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 25271,
											"end": 25277,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25267,
											"end": 25281,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25257,
											"end": 25281,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25257,
											"end": 25281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25326,
											"end": 25328,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 25315,
											"end": 25324,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 25311,
											"end": 25329,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25298,
											"end": 25329,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 25298,
											"end": 25329,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25172,
											"end": 25176,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 25169,
											"end": 25170,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25165,
											"end": 25177,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25160,
											"end": 25177,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25160,
											"end": 25177,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "930"
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "tag",
											"source": 20,
											"value": "932"
										},
										{
											"begin": 25135,
											"end": 25343,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25371,
											"end": 25377,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 25362,
											"end": 25369,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 25359,
											"end": 25378,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 25356,
											"end": 25535,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 25356,
											"end": 25535,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "933"
										},
										{
											"begin": 25356,
											"end": 25535,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 25429,
											"end": 25438,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25424,
											"end": 25427,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 25420,
											"end": 25439,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25414,
											"end": 25440,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 25472,
											"end": 25520,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "934"
										},
										{
											"begin": 25514,
											"end": 25518,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 25506,
											"end": 25512,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 25502,
											"end": 25519,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 25491,
											"end": 25500,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25472,
											"end": 25520,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "644"
										},
										{
											"begin": 25472,
											"end": 25520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25472,
											"end": 25520,
											"name": "tag",
											"source": 20,
											"value": "934"
										},
										{
											"begin": 25472,
											"end": 25520,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25464,
											"end": 25470,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 25457,
											"end": 25521,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 25379,
											"end": 25535,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25356,
											"end": 25535,
											"name": "tag",
											"source": 20,
											"value": "933"
										},
										{
											"begin": 25356,
											"end": 25535,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25581,
											"end": 25582,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 25577,
											"end": 25578,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 25569,
											"end": 25575,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 25565,
											"end": 25579,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 25561,
											"end": 25583,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25555,
											"end": 25559,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 25548,
											"end": 25584,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 24983,
											"end": 25594,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24983,
											"end": 25594,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24983,
											"end": 25594,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24946,
											"end": 25833,
											"name": "tag",
											"source": 20,
											"value": "925"
										},
										{
											"begin": 24946,
											"end": 25833,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24946,
											"end": 25833,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24536,
											"end": 25839,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24536,
											"end": 25839,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24536,
											"end": 25839,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24444,
											"end": 25839,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24444,
											"end": 25839,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24444,
											"end": 25839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25943,
											"name": "tag",
											"source": 20,
											"value": "646"
										},
										{
											"begin": 25845,
											"end": 25943,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25896,
											"end": 25902,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25930,
											"end": 25935,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25924,
											"end": 25936,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 25914,
											"end": 25936,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25914,
											"end": 25936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25943,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25943,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25943,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25949,
											"end": 26096,
											"name": "tag",
											"source": 20,
											"value": "647"
										},
										{
											"begin": 25949,
											"end": 26096,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26050,
											"end": 26061,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26087,
											"end": 26090,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26072,
											"end": 26090,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26072,
											"end": 26090,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25949,
											"end": 26096,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 25949,
											"end": 26096,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25949,
											"end": 26096,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25949,
											"end": 26096,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25949,
											"end": 26096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26102,
											"end": 26488,
											"name": "tag",
											"source": 20,
											"value": "648"
										},
										{
											"begin": 26102,
											"end": 26488,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26206,
											"end": 26209,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26234,
											"end": 26272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "938"
										},
										{
											"begin": 26266,
											"end": 26271,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26234,
											"end": 26272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "646"
										},
										{
											"begin": 26234,
											"end": 26272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26234,
											"end": 26272,
											"name": "tag",
											"source": 20,
											"value": "938"
										},
										{
											"begin": 26234,
											"end": 26272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26288,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "939"
										},
										{
											"begin": 26369,
											"end": 26375,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26364,
											"end": 26367,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 26288,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "647"
										},
										{
											"begin": 26288,
											"end": 26376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26288,
											"end": 26376,
											"name": "tag",
											"source": 20,
											"value": "939"
										},
										{
											"begin": 26288,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26281,
											"end": 26376,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 26281,
											"end": 26376,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26385,
											"end": 26450,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "940"
										},
										{
											"begin": 26443,
											"end": 26449,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26438,
											"end": 26441,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 26431,
											"end": 26435,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 26424,
											"end": 26429,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 26420,
											"end": 26436,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26385,
											"end": 26450,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 26385,
											"end": 26450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26385,
											"end": 26450,
											"name": "tag",
											"source": 20,
											"value": "940"
										},
										{
											"begin": 26385,
											"end": 26450,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26475,
											"end": 26481,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 26470,
											"end": 26473,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 26466,
											"end": 26482,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26459,
											"end": 26482,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26459,
											"end": 26482,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26210,
											"end": 26488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26102,
											"end": 26488,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 26102,
											"end": 26488,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26102,
											"end": 26488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26102,
											"end": 26488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26102,
											"end": 26488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26494,
											"end": 26765,
											"name": "tag",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 26494,
											"end": 26765,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26624,
											"end": 26627,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26646,
											"end": 26739,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "942"
										},
										{
											"begin": 26735,
											"end": 26738,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26726,
											"end": 26732,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 26646,
											"end": 26739,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "648"
										},
										{
											"begin": 26646,
											"end": 26739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26646,
											"end": 26739,
											"name": "tag",
											"source": 20,
											"value": "942"
										},
										{
											"begin": 26646,
											"end": 26739,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26639,
											"end": 26739,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26639,
											"end": 26739,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26756,
											"end": 26759,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26749,
											"end": 26759,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26749,
											"end": 26759,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26494,
											"end": 26765,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 26494,
											"end": 26765,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26494,
											"end": 26765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26494,
											"end": 26765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26494,
											"end": 26765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"AdvancedToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"FEE_DENOMINATOR()": "d73792a9",
							"MAX_SUPPLY()": "32cb6b0c",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"accumulatedFees()": "587f5ed7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnRate()": "bed99850",
							"decimals()": "313ce567",
							"feeRecipient()": "46904840",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(string,string,uint256,address,address)": "7e77c503",
							"name()": "06fdde03",
							"nftStakingModule()": "55b593f1",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setBurnRate(uint256)": "189d165e",
							"setNFTStakingModule(address)": "e723422d",
							"setStakingModule(address)": "c60b494f",
							"setTransferFee(uint256)": "8f02bb5b",
							"setVestingModule(address)": "492ef538",
							"stakingModule()": "504b82bf",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFee()": "acb2ad6f",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"vestingModule()": "c76af7b0",
							"withdrawFees()": "476343ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"BurnRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"TransferFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftStakingModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setBurnRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftStakingModule\",\"type\":\"address\"}],\"name\":\"setNFTStakingModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingModule\",\"type\":\"address\"}],\"name\":\"setStakingModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTransferFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingModule\",\"type\":\"address\"}],\"name\":\"setVestingModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AdvancedToken.sol\":\"AdvancedToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5c54228bbb2f1f8616179c51bdb90b7960f4a3414c390ad5c6ead6763eb55a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745fe72596bb8fde5f294d9d6b943db942202e4445536ee00da3ba011f876e86\",\"dweb:/ipfs/QmcjeESkk4rbhUVaSBfyq5f8rY56Jms1TwcJXaRD55K3UH\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"AdvancedToken.sol\":{\"keccak256\":\"0x2c8097d925d9e23e84ced116e354a95c993096c212db594029f768b6f8794693\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1006acf020afd88173a557dba628eadafff0e1e538a4595f20ba59e84e0fe2c\",\"dweb:/ipfs/QmSVEEqnipaWYgJ38oh78u9m5kNBQpkr99Zr6cqJM5YjXF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2734,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "transferFee",
								"offset": 0,
								"slot": "50",
								"type": "t_uint256"
							},
							{
								"astId": 2736,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "burnRate",
								"offset": 0,
								"slot": "51",
								"type": "t_uint256"
							},
							{
								"astId": 2738,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "52",
								"type": "t_address"
							},
							{
								"astId": 2740,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "accumulatedFees",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 2750,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "stakingModule",
								"offset": 0,
								"slot": "54",
								"type": "t_address"
							},
							{
								"astId": 2752,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "nftStakingModule",
								"offset": 0,
								"slot": "55",
								"type": "t_address"
							},
							{
								"astId": 2754,
								"contract": "AdvancedToken.sol:AdvancedToken",
								"label": "vestingModule",
								"offset": 0,
								"slot": "56",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1589
						],
						"ERC165Upgradeable": [
							1629
						],
						"IAccessControl": [
							1712
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1713,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1712,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1590,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1589,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1630,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1589,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1712,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1629,
								2706,
								1712,
								1589,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1712_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1712_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1712",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1628,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1679
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1687
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1695
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1703
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1711
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1571,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1571,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1639,
								1642
							],
							"usedEvents": [
								387,
								1651,
								1660,
								1669
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							2174
						],
						"IERC1822Proxiable": [
							1743
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1744,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1743,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 2175,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2174,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1743,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1743,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 798,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 798,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1742
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2174_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1895,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 798,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 798,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2174_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1926,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 798,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 798,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 798,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2174_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1895,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2174_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1989,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2174_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1900,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1743_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1743",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1742,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 798,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5611:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1900,
								1913,
								2298,
								2561
							],
							"usedEvents": [
								387,
								1720
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1589
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1590,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 617,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 802,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 805,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "718:13:3"
									},
									"id": 806,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 807,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1589,
										"src": "733:18:3"
									},
									"id": 808,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1589,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 813,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 818,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 819,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 826,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 823,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 926,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 926,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 846,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 848,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 856,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 862,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 861,
												"id": 863,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 926,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 870,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 926,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 926,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 898,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 926,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 915,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 914,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 926,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 925,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 922,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 924,
										"length": {
											"hexValue": "3439",
											"id": 923,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 927,
							"src": "677:2430:3",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387,
								813,
								818
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1589
						],
						"ERC20Upgradeable": [
							1543
						],
						"IERC20": [
							2262
						],
						"IERC20Errors": [
							1785
						],
						"IERC20Metadata": [
							2288
						],
						"Initializable": [
							616
						]
					},
					"id": 1544,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 2263,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 929,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2262,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 2289,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 931,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2288,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 1590,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 933,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1589,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 1881,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 935,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1785,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 617,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 937,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1319:13:4"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:4"
								},
								{
									"baseName": {
										"id": 942,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1589,
										"src": "1334:18:4"
									},
									"id": 943,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:4"
								},
								{
									"baseName": {
										"id": 944,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2262,
										"src": "1354:6:4"
									},
									"id": 945,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:4"
								},
								{
									"baseName": {
										"id": 946,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2288,
										"src": "1362:14:4"
									},
									"id": 947,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:4"
								},
								{
									"baseName": {
										"id": 948,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1785,
										"src": "1378:12:4"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 939,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1543,
							"linearizedBaseContracts": [
								1543,
								1785,
								2288,
								2262,
								1589,
								616
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 967,
									"members": [
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1495:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 953,
												"keyName": "account",
												"keyNameLocation": "1511:7:4",
												"keyType": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1551:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 959,
												"keyName": "account",
												"keyNameLocation": "1567:7:4",
												"keyType": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 958,
													"keyName": "spender",
													"keyNameLocation": "1594:7:4",
													"keyType": {
														"id": 956,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1637:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 964,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1668:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 963,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1690:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 965,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:4",
									"nodeType": "StructDefinition",
									"scope": 1543,
									"src": "1465:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 970,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "1826:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 968,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 969,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2021:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:4",
													"nodeType": "YulBlock",
													"src": "2040:54:4",
													"statements": [
														{
															"nativeSrc": "2054:30:4",
															"nodeType": "YulAssignment",
															"src": "2054:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:4",
																"nodeType": "YulIdentifier",
																"src": "2064:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 970,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:4",
														"valueSize": 1
													}
												],
												"id": 976,
												"nodeType": "InlineAssembly",
												"src": "2031:63:4"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1997:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 973,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 972,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1997:12:4"
													},
													"referencedDeclaration": 967,
													"src": "1997:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:4"
									},
									"scope": 1543,
									"src": "1947:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "2374:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "2407:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 990,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "2414:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 988,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2384:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:4"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 985,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2357:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2304:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 980,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2325:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 982,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:4"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 1543,
									"src": "2282:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "2537:114:4",
										"statements": [
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "2547:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1004,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1003,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "2547:12:4"
															},
															"referencedDeclaration": 967,
															"src": "2547:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1006,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "2572:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:4"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1009,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2600:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 964,
														"src": "2600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1012,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "2610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:4"
											},
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1015,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "2625:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1018,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:4"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1001,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1000,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2520:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2467:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2488:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 997,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:4"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:4"
									},
									"scope": 1543,
									"src": "2435:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2275
									],
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "2776:84:4",
										"statements": [
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2786:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1029,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1028,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "2786:12:4"
															},
															"referencedDeclaration": 967,
															"src": "2786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1031,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "2811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 1034,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "2846:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 964,
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1036,
												"nodeType": "Return",
												"src": "2839:14:4"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2761:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:4"
									},
									"scope": 1543,
									"src": "2716:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2281
									],
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "3035:86:4",
										"statements": [
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "3045:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1045,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1044,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "3045:12:4"
															},
															"referencedDeclaration": 967,
															"src": "3045:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1047,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3070:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 1050,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "3105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 966,
													"src": "3105:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1043,
												"id": 1052,
												"nodeType": "Return",
												"src": "3098:16:4"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:4"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3020:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:4"
									},
									"scope": 1543,
									"src": "2973:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2287
									],
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "3810:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1059,
												"id": 1061,
												"nodeType": "Return",
												"src": "3820:9:4"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:4"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "3803:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1057,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:4"
									},
									"scope": 1543,
									"src": "3754:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2211
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "3957:91:4",
										"statements": [
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1078,
														"src": "3967:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1070,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1069,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "3967:12:4"
															},
															"referencedDeclaration": 967,
															"src": "3967:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1072,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3992:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 1075,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "4027:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 962,
													"src": "4027:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1077,
												"nodeType": "Return",
												"src": "4020:21:4"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:4"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "3948:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:4"
									},
									"scope": 1543,
									"src": "3896:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2219
									],
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "4180:97:4",
										"statements": [
											{
												"assignments": [
													1089
												],
												"declarations": [
													{
														"constant": false,
														"id": 1089,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "4190:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1088,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1087,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "4190:12:4"
															},
															"referencedDeclaration": 967,
															"src": "4190:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1090,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1093,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "4250:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "4250:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1096,
													"indexExpression": {
														"id": 1095,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1097,
												"nodeType": "Return",
												"src": "4243:27:4"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "4125:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:4"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "4171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:4"
									},
									"scope": 1543,
									"src": "4106:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2229
									],
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "4547:103:4",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "4557:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "4573:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "4605:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "4612:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "4616:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "4595:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1108,
												"id": 1121,
												"nodeType": "Return",
												"src": "4632:11:4"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4490:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4502:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:4"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4541:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:4"
									},
									"scope": 1543,
									"src": "4472:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2239
									],
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "4797:106:4",
										"statements": [
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4807:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1134,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1133,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "4807:12:4"
															},
															"referencedDeclaration": 967,
															"src": "4807:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1136,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4832:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 1139,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "4867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "4867:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1142,
														"indexExpression": {
															"id": 1141,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "4881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1144,
													"indexExpression": {
														"id": 1143,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "4888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1132,
												"id": 1145,
												"nodeType": "Return",
												"src": "4860:36:4"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4727:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:4"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:4"
									},
									"scope": 1543,
									"src": "4708:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2249
									],
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "5289:107:4",
										"statements": [
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "5299:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1157,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1159,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "5315:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1163,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "5346:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "5353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "5362:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1162,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1426,
															1494
														],
														"referencedDeclaration": 1426,
														"src": "5337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1156,
												"id": 1169,
												"nodeType": "Return",
												"src": "5378:11:4"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:4"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5283:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:4"
									},
									"scope": 1543,
									"src": "5210:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2261
									],
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "6081:151:4",
										"statements": [
											{
												"assignments": [
													1184
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "6091:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1183,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1185,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "6109:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "6147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "6153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "6162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "6131:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "6188:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "6194:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "6198:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "6178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1182,
												"id": 1201,
												"nodeType": "Return",
												"src": "6214:11:4"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "6010:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "6024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "6036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:4"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "6075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:4"
									},
									"scope": 1543,
									"src": "5988:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "6674:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "6688:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "6684:86:4",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "6708:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1220,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1219,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "6729:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1225,
															"nodeType": "RevertStatement",
															"src": "6722:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "6783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1229,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "6779:86:4",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "6801:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1235,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1234,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "6822:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1240,
															"nodeType": "RevertStatement",
															"src": "6815:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "6882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "6888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "6874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:4"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6624:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6650:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:4"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:4"
									},
									"scope": 1543,
									"src": "6605:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "7295:1095:4",
										"statements": [
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "7305:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1261,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1260,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "7305:12:4"
															},
															"referencedDeclaration": 967,
															"src": "7305:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1265,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1263,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "7330:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1266,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "7362:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1267,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "7538:366:4",
													"statements": [
														{
															"assignments": [
																1280
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1280,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1308,
																	"src": "7552:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1279,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1285,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1281,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "7574:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "7574:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1284,
																"indexExpression": {
																	"id": 1283,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "7586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1286,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7609:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "7623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1296,
															"nodeType": "IfStatement",
															"src": "7605:115:4",
															"trueBody": {
																"id": 1295,
																"nodeType": "Block",
																"src": "7630:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1290,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "7680:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1291,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7686:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1292,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1257,
																					"src": "7699:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1289,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1755,
																				"src": "7655:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1294,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:4"
																	}
																]
															}
														},
														{
															"id": 1307,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1297,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "7840:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 954,
																				"src": "7840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1301,
																			"indexExpression": {
																				"id": 1299,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1253,
																				"src": "7852:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1302,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7860:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1303,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1257,
																				"src": "7874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:4"
																}
															]
														}
													]
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "7358:546:4",
												"trueBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "7382:150:4",
													"statements": [
														{
															"expression": {
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1272,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 962,
																	"src": "7498:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1275,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "7516:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1277,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1310,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "7918:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1311,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "8135:208:4",
													"statements": [
														{
															"id": 1332,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1324,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "8294:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1327,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 954,
																				"src": "8294:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1328,
																			"indexExpression": {
																				"id": 1326,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "8306:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1329,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "8313:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1331,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:4"
																}
															]
														}
													]
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "7914:429:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "7936:193:4",
													"statements": [
														{
															"id": 1322,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1316,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1262,
																				"src": "8081:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 962,
																			"src": "8081:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "8099:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1336,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "8367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "8373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1338,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "8377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "8358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "EmitStatement",
												"src": "8353:30:4"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "7237:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "7251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "7263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:4"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:4"
									},
									"scope": 1543,
									"src": "7220:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "8789:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1350,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "8803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1351,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "IfStatement",
												"src": "8799:91:4",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "8826:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1357,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1356,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "8847:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1362,
															"nodeType": "RevertStatement",
															"src": "8840:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "8919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "8928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1365,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "8899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:4"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "8748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "8765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:4"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:4"
									},
									"scope": 1543,
									"src": "8733:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "9315:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1383,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "9329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "9325:89:4",
												"trueBody": {
													"id": 1396,
													"nodeType": "Block",
													"src": "9352:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1390,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1389,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "9373:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1395,
															"nodeType": "RevertStatement",
															"src": "9366:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "9431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "9452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "9423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:4"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "9274:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "9291:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:4"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:4"
									},
									"scope": 1543,
									"src": "9259:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "10075:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "10094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "10101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "10110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1418,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1426,
															1494
														],
														"referencedDeclaration": 1494,
														"src": "10085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:4"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "10019:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "10034:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "10051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:4"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:4"
									},
									"scope": 1543,
									"src": "10001:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "11074:389:4",
										"statements": [
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1493,
														"src": "11084:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1439,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1438,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "11084:12:4"
															},
															"referencedDeclaration": 967,
															"src": "11084:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1441,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "11109:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$967_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1444,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "11141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1445,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"nodeType": "IfStatement",
												"src": "11137:89:4",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "11162:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1451,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1450,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "11183:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1456,
															"nodeType": "RevertStatement",
															"src": "11176:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1459,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "11239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1460,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "11235:90:4",
												"trueBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "11262:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1466,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1465,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11283:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1471,
															"nodeType": "RevertStatement",
															"src": "11276:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1474,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11334:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$967_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 960,
																"src": "11334:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1479,
															"indexExpression": {
																"id": 1476,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "11348:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1480,
														"indexExpression": {
															"id": 1477,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "11355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1481,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "11366:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:4"
											},
											{
												"condition": {
													"id": 1484,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1435,
													"src": "11385:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "11381:76:4",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "11396:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1486,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "11424:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1487,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "11431:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1488,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "11440:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1485,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "11415:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1490,
															"nodeType": "EmitStatement",
															"src": "11410:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "10994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "11009:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "11026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "11041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:4"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:4"
									},
									"scope": 1543,
									"src": "10976:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "11834:387:4",
										"statements": [
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "11844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"arguments": [
														{
															"id": 1507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "11881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "11888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1506,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "11871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "11910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11934:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1513,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11934:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1512,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11929:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11929:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11943:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11929:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"nodeType": "IfStatement",
												"src": "11906:309:4",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "11948:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1518,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "11966:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "11985:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11966:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1528,
															"nodeType": "IfStatement",
															"src": "11962:130:4",
															"trueBody": {
																"id": 1527,
																"nodeType": "Block",
																"src": "11992:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1522,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1499,
																					"src": "12044:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1523,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1505,
																					"src": "12053:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1524,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "12071:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1521,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1774,
																				"src": "12017:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12017:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1526,
																		"nodeType": "RevertStatement",
																		"src": "12010:67:4"
																	}
																]
															}
														},
														{
															"id": 1538,
															"nodeType": "UncheckedBlock",
															"src": "12105:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1530,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "12142:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1531,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1499,
																				"src": "12149:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1532,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1505,
																					"src": "12158:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1533,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "12177:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12158:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12184:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1529,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1426,
																				1494
																			],
																			"referencedDeclaration": 1494,
																			"src": "12133:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12133:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "12133:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "11770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "11785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "11802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:4"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:4"
									},
									"scope": 1543,
									"src": "11745:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1544,
							"src": "1281:10942:4",
							"usedErrors": [
								379,
								382,
								1755,
								1760,
								1765,
								1774,
								1779,
								1784
							],
							"usedEvents": [
								387,
								2196,
								2205
							]
						}
					],
					"src": "105:12119:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1589
						],
						"Initializable": [
							616
						]
					},
					"id": 1590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1545,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1590,
							"sourceUnit": 617,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1546,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1549,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:5"
									},
									"id": 1550,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1548,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1589,
							"linearizedBaseContracts": [
								1589,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1552,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1589,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1559,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1558,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1589,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1567,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1569,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1589,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1576,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1578,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1589,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1584,
												"id": 1586,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1589,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1590,
							"src": "688:505:5",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1629
						],
						"IERC165": [
							2706
						],
						"Initializable": [
							616
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1591,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 2707,
							"src": "140:80:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1592,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2706,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 617,
							"src": "221:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1594,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1597,
										"name": "Initializable",
										"nameLocations": [
											"808:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "808:13:6"
									},
									"id": 1598,
									"nodeType": "InheritanceSpecifier",
									"src": "808:13:6"
								},
								{
									"baseName": {
										"id": 1599,
										"name": "IERC165",
										"nameLocations": [
											"823:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2706,
										"src": "823:7:6"
									},
									"id": 1600,
									"nodeType": "InheritanceSpecifier",
									"src": "823:7:6"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1596,
								"nodeType": "StructuredDocumentation",
								"src": "289:479:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1629,
							"linearizedBaseContracts": [
								1629,
								2706,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "787:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "888:7:6",
										"statements": []
									},
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1602,
												"name": "onlyInitializing",
												"nameLocations": [
													"871:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "871:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "871:16:6"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "846:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:6"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:6"
									},
									"scope": 1629,
									"src": "837:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "962:7:6",
										"statements": []
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1609,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1608,
												"name": "onlyInitializing",
												"nameLocations": [
													"945:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "945:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:16:6"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "910:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:2:6"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:6"
									},
									"scope": 1629,
									"src": "901:68:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2705
									],
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "1117:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "1134:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1622,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "1154:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2706_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2706_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1621,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1149:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1149:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2706",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1163:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1149:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1134:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1626,
												"nodeType": "Return",
												"src": "1127:47:6"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "974:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1044:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1069:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "1062:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1614,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:20:6"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "1111:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:6:6"
									},
									"scope": 1629,
									"src": "1035:146:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1630,
							"src": "769:414:6",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1070:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1712
						]
					},
					"id": 1713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1632,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:7",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 1712,
							"linearizedBaseContracts": [
								1712
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:7",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1639,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "357:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "374:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:7"
									},
									"src": "318:76:7"
								},
								{
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:7",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1642,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:7"
									},
									"src": "553:37:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:7",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1651,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "878:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "900:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "935:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:7"
									},
									"src": "855:110:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:7",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1660,
									"name": "RoleGranted",
									"nameLocation": "1277:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1289:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1311:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1336:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:7"
									},
									"src": "1271:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:7",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1669,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1664:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1686:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1711:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:7"
									},
									"src": "1646:89:7"
								},
								{
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:7",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1839:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1853:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:7"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1893:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:7"
									},
									"scope": 1712,
									"src": "1822:77:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:7",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2116:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:7"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2153:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:7"
									},
									"scope": 1712,
									"src": "2094:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:7",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2431:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2445:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:7"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:7"
									},
									"scope": 1712,
									"src": "2412:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:7",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2725:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1697,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2739:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:7"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:7"
									},
									"scope": 1712,
									"src": "2705:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:7",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "3289:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "3303:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:7"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:7"
									},
									"scope": 1712,
									"src": "3267:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1713,
							"src": "226:3116:7",
							"usedErrors": [
								1639,
								1642
							],
							"usedEvents": [
								1651,
								1660,
								1669
							]
						}
					],
					"src": "109:3234:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1733
						]
					},
					"id": 1734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1714,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1715,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:8",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1733,
							"linearizedBaseContracts": [
								1733
							],
							"name": "IERC1967",
							"nameLocation": "245:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:8",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1720,
									"name": "Upgraded",
									"nameLocation": "339:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "348:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:8"
									},
									"src": "333:47:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:8",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1727,
									"name": "AdminChanged",
									"nameLocation": "464:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "477:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "500:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:8"
									},
									"src": "458:60:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:8",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1732,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "609:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:8"
									},
									"src": "588:45:8"
								}
							],
							"scope": 1734,
							"src": "235:400:8",
							"usedErrors": [],
							"usedEvents": [
								1720,
								1727,
								1732
							]
						}
					],
					"src": "107:529:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1743
						]
					},
					"id": 1744,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1736,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:9",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1743,
							"linearizedBaseContracts": [
								1743
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:9",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:9"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "869:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:9"
									},
									"scope": 1743,
									"src": "821:57:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1744,
							"src": "344:536:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1880
						],
						"IERC20Errors": [
							1785
						],
						"IERC721Errors": [
							1833
						]
					},
					"id": 1881,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:10",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1785,
							"linearizedBaseContracts": [
								1785
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:10",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1755,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "654:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "670:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "687:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:10"
									},
									"src": "623:80:10"
								},
								{
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:10",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1760,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "891:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:10"
									},
									"src": "866:41:10"
								},
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:10",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1765,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "1104:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:10"
									},
									"src": "1077:45:10"
								},
								{
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:10",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1774,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1511:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1528:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1547:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:10"
									},
									"src": "1478:85:10"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:10",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1779,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1775:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:10"
									},
									"src": "1748:45:10"
								},
								{
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:10",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1784,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2025:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:10"
									},
									"src": "1999:43:10"
								}
							],
							"scope": 1881,
							"src": "280:1764:10",
							"usedErrors": [
								1755,
								1760,
								1765,
								1774,
								1779,
								1784
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1786,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:10",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1833,
							"linearizedBaseContracts": [
								1833
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:10",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1791,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "2469:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:10"
									},
									"src": "2444:40:10"
								},
								{
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:10",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1796,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "2656:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:10"
									},
									"src": "2627:46:10"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:10",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1805,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "3000:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "3016:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "3033:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:10"
									},
									"src": "2973:75:10"
								},
								{
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:10",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1810,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "3237:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:10"
									},
									"src": "3211:42:10"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:10",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1815,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3451:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:10"
									},
									"src": "3423:46:10"
								},
								{
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:10",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1822,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "3760:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "3778:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:10"
									},
									"src": "3727:68:10"
								},
								{
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:10",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1827,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "4008:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:10"
									},
									"src": "3980:46:10"
								},
								{
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:10",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1832,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "4262:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:10"
									},
									"src": "4234:46:10"
								}
							],
							"scope": 1881,
							"src": "2190:2092:10",
							"usedErrors": [
								1791,
								1796,
								1805,
								1810,
								1815,
								1822,
								1827,
								1832
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1834,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:10",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1880,
							"linearizedBaseContracts": [
								1880
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:10",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1845,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "4860:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "4876:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "4893:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "4909:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:10"
									},
									"src": "4827:99:10"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:10",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1850,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5116:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:10"
									},
									"src": "5089:43:10"
								},
								{
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:10",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1855,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5331:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:10"
									},
									"src": "5302:47:10"
								},
								{
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:10",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1862,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "5651:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "5669:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:10"
									},
									"src": "5616:68:10"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:10",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1867,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "5898:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:10"
									},
									"src": "5869:47:10"
								},
								{
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:10",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1872,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "6153:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:10"
									},
									"src": "6124:47:10"
								},
								{
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:10",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1879,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "6494:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "6513:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:10"
									},
									"src": "6462:73:10"
								}
							],
							"scope": 1881,
							"src": "4430:2107:10",
							"usedErrors": [
								1845,
								1850,
								1855,
								1862,
								1867,
								1872,
								1879
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2548
						],
						"ERC1967Utils": [
							2174
						],
						"IBeacon": [
							2184
						],
						"IERC1967": [
							1733
						],
						"StorageSlot": [
							2694
						]
					},
					"id": 2175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1882,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2175,
							"sourceUnit": 2185,
							"src": "140:46:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1883,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2184,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2175,
							"sourceUnit": 1734,
							"src": "187:55:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1885,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1733,
										"src": "195:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2175,
							"sourceUnit": 2549,
							"src": "243:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1887,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2548,
										"src": "251:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2175,
							"sourceUnit": 2695,
							"src": "292:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1889,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2694,
										"src": "300:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1891,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:11",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 2174,
							"linearizedBaseContracts": [
								2174
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:11",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1895,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 2174,
									"src": "763:114:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1893,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1894,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:11",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1900,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "993:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:11"
									},
									"src": "958:59:11"
								},
								{
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:11",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1905,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "1114:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:11"
									},
									"src": "1088:41:11"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:11",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1910,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1228:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:11"
									},
									"src": "1201:43:11"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:11",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1913,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:11"
									},
									"src": "1337:26:11"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "1502:77:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1921,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "1546:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1919,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "1519:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2694_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2605,
															"src": "1519:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2576_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2575,
													"src": "1519:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1924,
												"nodeType": "Return",
												"src": "1512:60:11"
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:11",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:11"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1493:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:11"
									},
									"scope": 2174,
									"src": "1441:138:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "1734:218:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1932,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "1748:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1942,
												"nodeType": "IfStatement",
												"src": "1744:119:11",
												"trueBody": {
													"id": 1941,
													"nodeType": "Block",
													"src": "1784:79:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1938,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "1834:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1937,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "1805:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1940,
															"nodeType": "RevertStatement",
															"src": "1798:54:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1946,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "1899:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1943,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "1872:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2694_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2605,
																"src": "1872:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2576_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2575,
														"src": "1872:53:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1949,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "1928:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:11"
											}
										]
									},
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:11",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1699:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:11"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:11"
									},
									"scope": 2174,
									"src": "1671:281:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "2345:263:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1962,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "2374:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1961,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "2355:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1968,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "2425:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1965,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2407:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1733_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:11",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1720,
														"src": "2407:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "EmitStatement",
												"src": "2402:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1971,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "2458:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1986,
													"nodeType": "Block",
													"src": "2559:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1983,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "2573:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1985,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:11"
														}
													]
												},
												"id": 1987,
												"nodeType": "IfStatement",
												"src": "2454:148:11",
												"trueBody": {
													"id": 1982,
													"nodeType": "Block",
													"src": "2475:78:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1978,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "2518:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1979,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1958,
																		"src": "2537:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1975,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2548,
																		"src": "2489:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2548_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2465,
																	"src": "2489:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1981,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:11",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2290:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2317:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:11"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:11"
									},
									"scope": 2174,
									"src": "2264:344:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:11",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1993,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 2174,
									"src": "2829:105:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1991,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1992,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "3339:68:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2001,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "3383:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1999,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "3356:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2694_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2605,
															"src": "3356:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2576_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2575,
													"src": "3356:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1998,
												"id": 2004,
												"nodeType": "Return",
												"src": "3349:51:11"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:11",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:11"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "3330:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:11"
									},
									"scope": 2174,
									"src": "3287:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "3535:172:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2012,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "3549:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2013,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "3545:91:11",
												"trueBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "3573:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2019,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2018,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "3594:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2024,
															"nodeType": "RevertStatement",
															"src": "3587:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2030,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1993,
																	"src": "3672:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2027,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "3645:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2694_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2605,
																"src": "3645:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2576_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2575,
														"src": "3645:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2033,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "3692:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:11"
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:11",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "3509:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:11"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:11"
									},
									"scope": 2174,
									"src": "3490:217:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "3875:94:11",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2046,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "3912:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2048,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "3924:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2043,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "3890:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1733_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:11",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1727,
														"src": "3890:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "EmitStatement",
												"src": "3885:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2052,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "3953:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2051,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "3943:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:11"
											}
										]
									},
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:11",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "3848:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:11"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:11"
									},
									"scope": 2174,
									"src": "3827:142:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:11",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 2060,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2174,
									"src": "4246:106:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2058,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 2059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "4468:69:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2068,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "4512:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2066,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "4485:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2694_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2605,
															"src": "4485:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2576_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2575,
													"src": "4485:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2071,
												"nodeType": "Return",
												"src": "4478:52:11"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:11",
										"text": " @dev Returns the current beacon."
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:11"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "4459:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:11"
									},
									"scope": 2174,
									"src": "4415:122:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "4667:390:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2079,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "4681:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2089,
												"nodeType": "IfStatement",
												"src": "4677:95:11",
												"trueBody": {
													"id": 2088,
													"nodeType": "Block",
													"src": "4709:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2085,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "4751:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2084,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "4730:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2087,
															"nodeType": "RevertStatement",
															"src": "4723:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2093,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "4809:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2090,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "4782:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2694_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2605,
																"src": "4782:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2576_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2095,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2575,
														"src": "4782:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2096,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "4830:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2098,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:11"
											},
											{
												"assignments": [
													2100
												],
												"declarations": [
													{
														"constant": false,
														"id": 2100,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 2118,
														"src": "4850:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2099,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2102,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "4889:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2101,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "4881:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$2184_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$2184",
																"typeString": "contract IBeacon"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:11",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2183,
														"src": "4881:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2107,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "4930:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "4926:125:11",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "4969:82:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2113,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "5019:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2112,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "4990:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2115,
															"nodeType": "RevertStatement",
															"src": "4983:57:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:11",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "4640:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:11"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:11"
									},
									"scope": 2174,
									"src": "4620:437:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "5661:263:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2128,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "5682:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2127,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "5671:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2134,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "5731:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2131,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "5707:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1733_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:11",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1732,
														"src": "5707:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2136,
												"nodeType": "EmitStatement",
												"src": "5702:39:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "5756:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "5875:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2153,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "5889:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:11"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "5752:166:11",
												"trueBody": {
													"id": 2152,
													"nodeType": "Block",
													"src": "5773:96:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2145,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2122,
																						"src": "5824:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2144,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2184,
																					"src": "5816:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2184_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2184",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:11",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2183,
																			"src": "5816:33:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2149,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "5853:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2141,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2548,
																		"src": "5787:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2548_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2465,
																	"src": "5787:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2151,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:11",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5614:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5633:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:11"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:11"
									},
									"scope": 2174,
									"src": "5582:342:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "6149:86:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2163,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2171,
												"nodeType": "IfStatement",
												"src": "6159:70:11",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "6178:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2167,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "6199:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2169,
															"nodeType": "RevertStatement",
															"src": "6192:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:11",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:11"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:11"
									},
									"scope": 2174,
									"src": "6113:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2175,
							"src": "496:5741:11",
							"usedErrors": [
								1900,
								1905,
								1910,
								1913
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2184
						]
					},
					"id": 2185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2177,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:12",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2184,
							"linearizedBaseContracts": [
								2184
							],
							"name": "IBeacon",
							"nameLocation": "224:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:12",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:12"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "460:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:12"
									},
									"scope": 2184,
									"src": "411:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2185,
							"src": "214:257:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2262
						]
					},
					"id": 2263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2187,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:13",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2262,
							"linearizedBaseContracts": [
								2262
							],
							"name": "IERC20",
							"nameLocation": "214:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:13",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2196,
									"name": "Transfer",
									"nameLocation": "396:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "405:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "427:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "447:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:13"
									},
									"src": "390:72:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:13",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2205,
									"name": "Approval",
									"nameLocation": "627:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "636:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "659:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "684:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:13"
									},
									"src": "621:78:13"
								},
								{
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:13",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:13"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "821:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:13"
									},
									"scope": 2262,
									"src": "775:55:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:13",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "931:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:13"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "971:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:13"
									},
									"scope": 2262,
									"src": "912:68:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:13",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "1222:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "1234:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:13"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "1267:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:13"
									},
									"scope": 2262,
									"src": "1204:69:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:13",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "1567:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "1582:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:13"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "1622:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:13"
									},
									"scope": 2262,
									"src": "1548:83:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:13",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2326:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2343:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:13"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2376:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:13"
									},
									"scope": 2262,
									"src": "2309:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:13",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2712:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2726:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2738:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:13"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2771:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:13"
									},
									"scope": 2262,
									"src": "2690:87:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2263,
							"src": "204:2575:13",
							"usedErrors": [],
							"usedEvents": [
								2196,
								2205
							]
						}
					],
					"src": "106:2674:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2262
						],
						"IERC20Metadata": [
							2288
						]
					},
					"id": 2289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2289,
							"sourceUnit": 2263,
							"src": "151:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2265,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2262,
										"src": "159:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2268,
										"name": "IERC20",
										"nameLocations": [
											"306:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2262,
										"src": "306:6:14"
									},
									"id": 2269,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:14"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2267,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:14",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2288,
							"linearizedBaseContracts": [
								2288,
								2262
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:14",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:14"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "417:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:14"
									},
									"scope": 2288,
									"src": "378:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:14",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:14"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "540:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:14"
									},
									"scope": 2288,
									"src": "499:56:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2282,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:14",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:14"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "674:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2284,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:14"
									},
									"scope": 2288,
									"src": "631:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2289,
							"src": "278:405:14",
							"usedErrors": [],
							"usedEvents": [
								2196,
								2205
							]
						}
					],
					"src": "125:559:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2548
						],
						"Errors": [
							2570
						]
					},
					"id": 2549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2549,
							"sourceUnit": 2571,
							"src": "127:36:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2291,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2570,
										"src": "135:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2293,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:15",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2548,
							"linearizedBaseContracts": [
								2548
							],
							"name": "Address",
							"nameLocation": "241:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:15",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2298,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "358:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:15"
									},
									"src": "335:39:15"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "1361:294:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2308,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2548",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2548",
																		"typeString": "library Address"
																	}
																],
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2306,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:15",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2311,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "1399:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2325,
												"nodeType": "IfStatement",
												"src": "1371:125:15",
												"trueBody": {
													"id": 2324,
													"nodeType": "Block",
													"src": "1407:89:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2318,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2548",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2548",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2316,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:15",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2321,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2303,
																		"src": "1478:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2313,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "1428:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2570_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:15",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2558,
																	"src": "1428:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2323,
															"nodeType": "RevertStatement",
															"src": "1421:64:15"
														}
													]
												}
											},
											{
												"assignments": [
													2327,
													2329
												],
												"declarations": [
													{
														"constant": false,
														"id": 2327,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "1507:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2326,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2329,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "1521:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2328,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2336,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2330,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "1548:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:15",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2332,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "1570:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:15"
											},
											{
												"condition": {
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:15",
													"subExpression": {
														"id": 2337,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "1596:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2344,
												"nodeType": "IfStatement",
												"src": "1591:58:15",
												"trueBody": {
													"id": 2343,
													"nodeType": "Block",
													"src": "1605:44:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2340,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "1627:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2339,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "1619:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2342,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:15",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1309:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1336:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:15"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:15"
									},
									"scope": 2548,
									"src": "1290:365:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2362,
										"nodeType": "Block",
										"src": "2589:62:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2357,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "2628:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2358,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "2636:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2356,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "2606:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2355,
												"id": 2361,
												"nodeType": "Return",
												"src": "2599:45:15"
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:15",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2522:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2538:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:15"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2575:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:15"
									},
									"scope": 2548,
									"src": "2500:151:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "3088:294:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2377,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2548",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2548",
																		"typeString": "library Address"
																	}
																],
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:15",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2380,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "3126:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "IfStatement",
												"src": "3098:123:15",
												"trueBody": {
													"id": 2393,
													"nodeType": "Block",
													"src": "3133:88:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2387,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2548",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2548",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2385,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:15",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2390,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "3204:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2382,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "3154:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2570_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:15",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2558,
																	"src": "3154:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2392,
															"nodeType": "RevertStatement",
															"src": "3147:63:15"
														}
													]
												}
											},
											{
												"assignments": [
													2396,
													2398
												],
												"declarations": [
													{
														"constant": false,
														"id": 2396,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2412,
														"src": "3231:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2395,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2398,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2412,
														"src": "3245:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2397,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2405,
												"initialValue": {
													"arguments": [
														{
															"id": 2403,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "3298:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2399,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "3272:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:15",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2401,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "3291:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2407,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "3347:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2408,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "3355:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2409,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "3364:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2406,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "3320:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2374,
												"id": 2411,
												"nodeType": "Return",
												"src": "3313:62:15"
											}
										]
									},
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:15",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "3006:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "3022:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "3041:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:15"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "3074:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:15"
									},
									"scope": 2548,
									"src": "2975:407:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "3621:154:15",
										"statements": [
											{
												"assignments": [
													2424,
													2426
												],
												"declarations": [
													{
														"constant": false,
														"id": 2424,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2438,
														"src": "3632:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2423,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2426,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2438,
														"src": "3646:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2425,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2431,
												"initialValue": {
													"arguments": [
														{
															"id": 2429,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "3691:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2427,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "3673:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:15",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "3740:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2434,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "3748:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2435,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2426,
															"src": "3757:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2432,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "3713:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2422,
												"id": 2437,
												"nodeType": "Return",
												"src": "3706:62:15"
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:15",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3549:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3565:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:15"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3607:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:15"
									},
									"scope": 2548,
									"src": "3521:254:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "4013:156:15",
										"statements": [
											{
												"assignments": [
													2450,
													2452
												],
												"declarations": [
													{
														"constant": false,
														"id": 2450,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "4024:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2449,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2452,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "4038:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2451,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"arguments": [
														{
															"id": 2455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "4085:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "4065:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:15",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "4134:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2460,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "4142:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2461,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "4151:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2458,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "4107:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2448,
												"id": 2463,
												"nodeType": "Return",
												"src": "4100:62:15"
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:15",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3946:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3962:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2443,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:15"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3999:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:15"
									},
									"scope": 2548,
									"src": "3916:253:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "4595:424:15",
										"statements": [
											{
												"condition": {
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:15",
													"subExpression": {
														"id": 2477,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "4610:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2502,
													"nodeType": "Block",
													"src": "4669:344:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2484,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2472,
																			"src": "4857:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:15",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2488,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2468,
																				"src": "4883:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:15",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:15",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2499,
															"nodeType": "IfStatement",
															"src": "4853:119:15",
															"trueBody": {
																"id": 2498,
																"nodeType": "Block",
																"src": "4908:64:15",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2495,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2468,
																					"src": "4950:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2494,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "4933:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2497,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:15"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2500,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "4992:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2476,
															"id": 2501,
															"nodeType": "Return",
															"src": "4985:17:15"
														}
													]
												},
												"id": 2503,
												"nodeType": "IfStatement",
												"src": "4605:408:15",
												"trueBody": {
													"id": 2483,
													"nodeType": "Block",
													"src": "4619:44:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2480,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "4641:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2479,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "4633:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2482,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:15",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "4482:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "4506:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "4528:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:15"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "4581:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:15"
									},
									"scope": 2548,
									"src": "4437:582:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "5323:122:15",
										"statements": [
											{
												"condition": {
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:15",
													"subExpression": {
														"id": 2515,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2508,
														"src": "5338:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2524,
													"nodeType": "Block",
													"src": "5397:42:15",
													"statements": [
														{
															"expression": {
																"id": 2522,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2510,
																"src": "5418:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2514,
															"id": 2523,
															"nodeType": "Return",
															"src": "5411:17:15"
														}
													]
												},
												"id": 2525,
												"nodeType": "IfStatement",
												"src": "5333:106:15",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "5347:44:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2518,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2510,
																		"src": "5369:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2517,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "5361:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:15",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "5247:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "5261:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:15"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "5309:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:15"
									},
									"scope": 2548,
									"src": "5221:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "5614:432:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2533,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "5690:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2544,
													"nodeType": "Block",
													"src": "5989:51:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2539,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "6010:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2570_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:15",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2561,
																	"src": "6010:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2543,
															"nodeType": "RevertStatement",
															"src": "6003:26:15"
														}
													]
												},
												"id": 2545,
												"nodeType": "IfStatement",
												"src": "5686:354:15",
												"trueBody": {
													"id": 2538,
													"nodeType": "Block",
													"src": "5713:270:15",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:15",
																"nodeType": "YulBlock",
																"src": "5840:133:15",
																"statements": [
																	{
																		"nativeSrc": "5858:40:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:15"
																			},
																			"nativeSrc": "5881:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:15"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:15",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:15",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:15",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:15"
																					},
																					"nativeSrc": "5922:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:15"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:15"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:15"
																			},
																			"nativeSrc": "5915:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:15"
																		},
																		"nativeSrc": "5915:44:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:15"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2530,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2530,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:15",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2537,
															"nodeType": "InlineAssembly",
															"src": "5815:158:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2528,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:15",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "5576:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:15"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:15"
									},
									"scope": 2548,
									"src": "5559:487:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2549,
							"src": "233:5815:15",
							"usedErrors": [
								2298
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2570
						]
					},
					"id": 2571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2551,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:16",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2570,
							"linearizedBaseContracts": [
								2570
							],
							"name": "Errors",
							"nameLocation": "419:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2552,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:16",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2558,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "557:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "574:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:16"
									},
									"src": "531:59:16"
								},
								{
									"documentation": {
										"id": 2559,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:16",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2561,
									"name": "FailedCall",
									"nameLocation": "696:10:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:16"
									},
									"src": "690:19:16"
								},
								{
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:16",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2564,
									"name": "FailedDeployment",
									"nameLocation": "772:16:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:16"
									},
									"src": "766:25:16"
								},
								{
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:16",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2569,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "884:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:16"
									},
									"src": "860:33:16"
								}
							],
							"scope": 2571,
							"src": "411:484:16",
							"usedErrors": [
								2558,
								2561,
								2564,
								2569
							],
							"usedEvents": []
						}
					],
					"src": "100:796:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2694
						]
					},
					"id": 2695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2573,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:17",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2694,
							"linearizedBaseContracts": [
								2694
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2576,
									"members": [
										{
											"constant": false,
											"id": 2575,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2576,
											"src": "1462:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2574,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1433:49:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2579,
									"members": [
										{
											"constant": false,
											"id": 2578,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2579,
											"src": "1517:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2577,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1488:46:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2582,
									"members": [
										{
											"constant": false,
											"id": 2581,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2582,
											"src": "1569:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2580,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1540:49:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2585,
									"members": [
										{
											"constant": false,
											"id": 2584,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2585,
											"src": "1624:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2583,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1595:49:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2588,
									"members": [
										{
											"constant": false,
											"id": 2587,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2588,
											"src": "1678:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2586,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1650:47:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2591,
									"members": [
										{
											"constant": false,
											"id": 2590,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2591,
											"src": "1731:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2589,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1703:47:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2594,
									"members": [
										{
											"constant": false,
											"id": 2593,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2594,
											"src": "1783:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2592,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:17",
									"nodeType": "StructDefinition",
									"scope": 2694,
									"src": "1756:45:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2604,
										"nodeType": "Block",
										"src": "1983:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:17",
													"nodeType": "YulBlock",
													"src": "2018:38:17",
													"statements": [
														{
															"nativeSrc": "2032:14:17",
															"nodeType": "YulAssignment",
															"src": "2032:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:17",
																"nodeType": "YulIdentifier",
																"src": "2042:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2601,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2597,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2603,
												"nodeType": "InlineAssembly",
												"src": "1993:63:17"
											}
										]
									},
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:17",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "1923:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2596,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:17"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "1960:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2599,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "1960:11:17"
													},
													"referencedDeclaration": 2576,
													"src": "1960:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2576_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:17"
									},
									"scope": 2694,
									"src": "1899:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "2243:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:17",
													"nodeType": "YulBlock",
													"src": "2278:38:17",
													"statements": [
														{
															"nativeSrc": "2292:14:17",
															"nodeType": "YulAssignment",
															"src": "2292:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:17",
																"nodeType": "YulIdentifier",
																"src": "2302:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2608,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2614,
												"nodeType": "InlineAssembly",
												"src": "2253:63:17"
											}
										]
									},
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:17",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "2183:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2607,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:17"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "2220:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2579_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2610,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2579,
														"src": "2220:11:17"
													},
													"referencedDeclaration": 2579,
													"src": "2220:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2579_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:17"
									},
									"scope": 2694,
									"src": "2159:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "2503:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:17",
													"nodeType": "YulBlock",
													"src": "2538:38:17",
													"statements": [
														{
															"nativeSrc": "2552:14:17",
															"nodeType": "YulAssignment",
															"src": "2552:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:17",
																"nodeType": "YulIdentifier",
																"src": "2562:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2623,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2619,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2625,
												"nodeType": "InlineAssembly",
												"src": "2513:63:17"
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:17",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2443:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2618,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:17"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2480:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2582_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2621,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "2480:11:17"
													},
													"referencedDeclaration": 2582,
													"src": "2480:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2582_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:17"
									},
									"scope": 2694,
									"src": "2419:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2637,
										"nodeType": "Block",
										"src": "2763:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:17",
													"nodeType": "YulBlock",
													"src": "2798:38:17",
													"statements": [
														{
															"nativeSrc": "2812:14:17",
															"nodeType": "YulAssignment",
															"src": "2812:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:17",
																"nodeType": "YulIdentifier",
																"src": "2822:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2634,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2630,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2636,
												"nodeType": "InlineAssembly",
												"src": "2773:63:17"
											}
										]
									},
									"documentation": {
										"id": 2628,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:17",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "2703:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:17"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "2740:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2585_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2632,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2585,
														"src": "2740:11:17"
													},
													"referencedDeclaration": 2585,
													"src": "2740:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2585_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:17"
									},
									"scope": 2694,
									"src": "2679:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "3020:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:17",
													"nodeType": "YulBlock",
													"src": "3055:38:17",
													"statements": [
														{
															"nativeSrc": "3069:14:17",
															"nodeType": "YulAssignment",
															"src": "3069:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:17",
																"nodeType": "YulIdentifier",
																"src": "3079:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2645,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2641,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2647,
												"nodeType": "InlineAssembly",
												"src": "3030:63:17"
											}
										]
									},
									"documentation": {
										"id": 2639,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:17",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "2961:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2640,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:17"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "2998:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2588_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2643,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "2998:10:17"
													},
													"referencedDeclaration": 2588,
													"src": "2998:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2588_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:17"
									},
									"scope": 2694,
									"src": "2938:161:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "3277:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:17",
													"nodeType": "YulBlock",
													"src": "3312:38:17",
													"statements": [
														{
															"nativeSrc": "3326:14:17",
															"nodeType": "YulAssignment",
															"src": "3326:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:17",
																"nodeType": "YulIdentifier",
																"src": "3336:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2656,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2652,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2658,
												"nodeType": "InlineAssembly",
												"src": "3287:63:17"
											}
										]
									},
									"documentation": {
										"id": 2650,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:17",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "3218:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2651,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:17"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "3255:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2591_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2654,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2591,
														"src": "3255:10:17"
													},
													"referencedDeclaration": 2591,
													"src": "3255:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2591_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:17"
									},
									"scope": 2694,
									"src": "3195:161:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "3558:85:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:17",
													"nodeType": "YulBlock",
													"src": "3593:44:17",
													"statements": [
														{
															"nativeSrc": "3607:20:17",
															"nodeType": "YulAssignment",
															"src": "3607:20:17",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:17",
																"nodeType": "YulIdentifier",
																"src": "3617:10:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2667,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2663,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:17",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2669,
												"nodeType": "InlineAssembly",
												"src": "3568:69:17"
											}
										]
									},
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:17",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3491:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:17"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3536:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2591_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2665,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2591,
														"src": "3536:10:17"
													},
													"referencedDeclaration": 2591,
													"src": "3536:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2591_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:17"
									},
									"scope": 2694,
									"src": "3468:175:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "3818:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:17",
													"nodeType": "YulBlock",
													"src": "3853:38:17",
													"statements": [
														{
															"nativeSrc": "3867:14:17",
															"nodeType": "YulAssignment",
															"src": "3867:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:17",
																"nodeType": "YulIdentifier",
																"src": "3877:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2678,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2674,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2680,
												"nodeType": "InlineAssembly",
												"src": "3828:63:17"
											}
										]
									},
									"documentation": {
										"id": 2672,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:17",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "3760:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:17"
									},
									"returnParameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "3797:19:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2594_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2676,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2594,
														"src": "3797:9:17"
													},
													"referencedDeclaration": 2594,
													"src": "3797:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2594_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:17"
									},
									"scope": 2694,
									"src": "3738:159:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2692,
										"nodeType": "Block",
										"src": "4094:85:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:17",
													"nodeType": "YulBlock",
													"src": "4129:44:17",
													"statements": [
														{
															"nativeSrc": "4143:20:17",
															"nodeType": "YulAssignment",
															"src": "4143:20:17",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:17",
																"nodeType": "YulIdentifier",
																"src": "4153:10:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2689,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2685,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:17",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2691,
												"nodeType": "InlineAssembly",
												"src": "4104:69:17"
											}
										]
									},
									"documentation": {
										"id": 2683,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:17",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "4029:19:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:17"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "4073:19:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2594_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2687,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2594,
														"src": "4073:9:17"
													},
													"referencedDeclaration": 2594,
													"src": "4073:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2594_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:17"
									},
									"scope": 2694,
									"src": "4007:172:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2695,
							"src": "1407:2774:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2706
						]
					},
					"id": 2707,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2697,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:18",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2706,
							"linearizedBaseContracts": [
								2706
							],
							"name": "IERC165",
							"nameLocation": "432:7:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2698,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:18",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "818:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2699,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:18"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "861:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:18"
									},
									"scope": 2706,
									"src": "791:76:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2707,
							"src": "422:447:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:18"
				},
				"id": 18
			},
			"AdvancedToken.sol": {
				"ast": {
					"absolutePath": "AdvancedToken.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"AdvancedToken": [
							3112
						],
						"ContextUpgradeable": [
							1589
						],
						"ERC165Upgradeable": [
							1629
						],
						"ERC1967Utils": [
							2174
						],
						"ERC20Upgradeable": [
							1543
						],
						"IAccessControl": [
							1712
						],
						"IERC1822Proxiable": [
							1743
						],
						"IERC20": [
							2262
						],
						"IERC20Errors": [
							1785
						],
						"IERC20Metadata": [
							2288
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 3113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2708,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3113,
							"sourceUnit": 1544,
							"src": "58:78:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3113,
							"sourceUnit": 363,
							"src": "137:81:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3113,
							"sourceUnit": 799,
							"src": "219:77:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3113,
							"sourceUnit": 927,
							"src": "297:78:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2713,
										"name": "Initializable",
										"nameLocations": [
											"403:13:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "403:13:19"
									},
									"id": 2714,
									"nodeType": "InheritanceSpecifier",
									"src": "403:13:19"
								},
								{
									"baseName": {
										"id": 2715,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"418:16:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "418:16:19"
									},
									"id": 2716,
									"nodeType": "InheritanceSpecifier",
									"src": "418:16:19"
								},
								{
									"baseName": {
										"id": 2717,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"436:24:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "436:24:19"
									},
									"id": 2718,
									"nodeType": "InheritanceSpecifier",
									"src": "436:24:19"
								},
								{
									"baseName": {
										"id": 2719,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"462:15:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "462:15:19"
									},
									"id": 2720,
									"nodeType": "InheritanceSpecifier",
									"src": "462:15:19"
								},
								{
									"baseName": {
										"id": 2721,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"479:19:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "479:19:19"
									},
									"id": 2722,
									"nodeType": "InheritanceSpecifier",
									"src": "479:19:19"
								}
							],
							"canonicalName": "AdvancedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3112,
							"linearizedBaseContracts": [
								3112,
								926,
								798,
								1743,
								362,
								1629,
								2706,
								1712,
								1543,
								1785,
								2288,
								2262,
								1589,
								616
							],
							"name": "AdvancedToken",
							"nameLocation": "386:13:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2727,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "529:11:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "505:62:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2723,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2725,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "553:13:19",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2724,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "543:9:19",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2726,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "543:24:19",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2732,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "597:13:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "573:66:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2728,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "573:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2730,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "623:15:19",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2729,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "613:9:19",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2731,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "613:26:19",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acb2ad6f",
									"id": 2734,
									"mutability": "mutable",
									"name": "transferFee",
									"nameLocation": "661:11:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "646:26:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bed99850",
									"id": 2736,
									"mutability": "mutable",
									"name": "burnRate",
									"nameLocation": "693:8:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "678:23:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "678:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46904840",
									"id": 2738,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "722:12:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "707:27:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2737,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "707:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "587f5ed7",
									"id": 2740,
									"mutability": "mutable",
									"name": "accumulatedFees",
									"nameLocation": "755:15:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "740:30:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "740:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d73792a9",
									"id": 2743,
									"mutability": "constant",
									"name": "FEE_DENOMINATOR",
									"nameLocation": "800:15:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "776:47:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2741,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "776:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 2742,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "818:5:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 2748,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "853:10:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "829:51:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2744,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "829:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 2747,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 2745,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "866:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 2746,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "876:4:19",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "866:14:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "504b82bf",
									"id": 2750,
									"mutability": "mutable",
									"name": "stakingModule",
									"nameLocation": "902:13:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "887:28:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2749,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "887:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "55b593f1",
									"id": 2752,
									"mutability": "mutable",
									"name": "nftStakingModule",
									"nameLocation": "936:16:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "921:31:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2751,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "921:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c76af7b0",
									"id": 2754,
									"mutability": "mutable",
									"name": "vestingModule",
									"nameLocation": "973:13:19",
									"nodeType": "VariableDeclaration",
									"scope": 3112,
									"src": "958:28:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2753,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "958:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f9f635b7cf851af6071aaf78ef8a5f752dc52f19d556fea4512b0c2ad4baea72",
									"id": 2758,
									"name": "TransferFeeUpdated",
									"nameLocation": "999:18:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "1026:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "1018:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:16:19"
									},
									"src": "993:41:19"
								},
								{
									"anonymous": false,
									"eventSelector": "47863b595116a31383855975a4078913dce7881e717b75a06ced2db5d534ff78",
									"id": 2762,
									"name": "BurnRateUpdated",
									"nameLocation": "1045:15:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "1069:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "1061:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:17:19"
									},
									"src": "1039:39:19"
								},
								{
									"anonymous": false,
									"eventSelector": "c0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a",
									"id": 2768,
									"name": "FeesWithdrawn",
									"nameLocation": "1089:13:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1119:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1103:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1138:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1130:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:43:19"
									},
									"src": "1083:63:19"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "1342:411:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2784,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "1365:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2785,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "1372:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2783,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1352:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:28:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2787,
												"nodeType": "ExpressionStatement",
												"src": "1352:28:19"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2788,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1390:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1390:22:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "1390:22:19"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2791,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1422:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2793,
												"nodeType": "ExpressionStatement",
												"src": "1422:24:19"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2794,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1456:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:17:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2796,
												"nodeType": "ExpressionStatement",
												"src": "1456:17:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2798,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1495:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2799,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "1515:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2797,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1484:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1484:38:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2801,
												"nodeType": "ExpressionStatement",
												"src": "1484:38:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2803,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "1543:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2804,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "1556:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2802,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1532:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:31:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2806,
												"nodeType": "ExpressionStatement",
												"src": "1532:31:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2808,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2732,
															"src": "1584:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2809,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "1599:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2807,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1573:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:33:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2811,
												"nodeType": "ExpressionStatement",
												"src": "1573:33:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2813,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "1623:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2814,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "1631:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2812,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "1617:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:27:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2816,
												"nodeType": "ExpressionStatement",
												"src": "1617:27:19"
											},
											{
												"expression": {
													"id": 2819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2817,
														"name": "transferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "1654:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1668:3:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1654:17:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2820,
												"nodeType": "ExpressionStatement",
												"src": "1654:17:19"
											},
											{
												"expression": {
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2821,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2736,
														"src": "1687:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530",
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1698:2:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "1687:13:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "1687:13:19"
											},
											{
												"expression": {
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2825,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2738,
														"src": "1718:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2826,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "1733:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1718:28:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2828,
												"nodeType": "ExpressionStatement",
												"src": "1718:28:19"
											}
										]
									},
									"functionSelector": "7e77c503",
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2781,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2780,
												"name": "initializer",
												"nameLocations": [
													"1330:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "1330:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1330:11:19"
										}
									],
									"name": "initialize",
									"nameLocation": "1161:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1195:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1181:19:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1181:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1224:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1210:21:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1210:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "1249:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1241:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "1279:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1271:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "1303:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1295:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:151:19"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:0:19"
									},
									"scope": 3112,
									"src": "1152:601:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2842,
										"nodeType": "Block",
										"src": "1847:47:19",
										"statements": [
											{
												"expression": {
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2838,
														"name": "stakingModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "1857:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2839,
														"name": "_stakingModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2832,
														"src": "1873:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1857:30:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2841,
												"nodeType": "ExpressionStatement",
												"src": "1857:30:19"
											}
										]
									},
									"functionSelector": "c60b494f",
									"id": 2843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2835,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1827:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2836,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2834,
												"name": "onlyRole",
												"nameLocations": [
													"1818:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "1818:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1818:28:19"
										}
									],
									"name": "setStakingModule",
									"nameLocation": "1768:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "_stakingModule",
												"nameLocation": "1793:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "1785:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:24:19"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1847:0:19"
									},
									"scope": 3112,
									"src": "1759:135:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2855,
										"nodeType": "Block",
										"src": "1994:53:19",
										"statements": [
											{
												"expression": {
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2851,
														"name": "nftStakingModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "2004:16:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2852,
														"name": "_nftStakingModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "2023:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2004:36:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2854,
												"nodeType": "ExpressionStatement",
												"src": "2004:36:19"
											}
										]
									},
									"functionSelector": "e723422d",
									"id": 2856,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2848,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1974:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2849,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2847,
												"name": "onlyRole",
												"nameLocations": [
													"1965:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "1965:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1965:28:19"
										}
									],
									"name": "setNFTStakingModule",
									"nameLocation": "1909:19:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "_nftStakingModule",
												"nameLocation": "1937:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1929:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:27:19"
									},
									"returnParameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:0:19"
									},
									"scope": 3112,
									"src": "1900:147:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2868,
										"nodeType": "Block",
										"src": "2141:47:19",
										"statements": [
											{
												"expression": {
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2864,
														"name": "vestingModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2754,
														"src": "2151:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2865,
														"name": "_vestingModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2858,
														"src": "2167:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2151:30:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2867,
												"nodeType": "ExpressionStatement",
												"src": "2151:30:19"
											}
										]
									},
									"functionSelector": "492ef538",
									"id": 2869,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2861,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "2121:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2860,
												"name": "onlyRole",
												"nameLocations": [
													"2112:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2112:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2112:28:19"
										}
									],
									"name": "setVestingModule",
									"nameLocation": "2062:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "_vestingModule",
												"nameLocation": "2087:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "2079:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:24:19"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2141:0:19"
									},
									"scope": 3112,
									"src": "2053:135:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1123
									],
									"body": {
										"id": 2890,
										"nodeType": "Block",
										"src": "2300:86:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2882,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2326:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2326:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2884,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2871,
															"src": "2340:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "2351:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2881,
														"name": "_customTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "2310:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2310:48:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "2310:48:19"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2888,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2375:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2880,
												"id": 2889,
												"nodeType": "Return",
												"src": "2368:11:19"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2891,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2877,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2876,
												"name": "whenNotPaused",
												"nameLocations": [
													"2271:13:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2271:13:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2271:13:19"
										}
									],
									"name": "transfer",
									"nameLocation": "2203:8:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2875,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2262:8:19"
									},
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2220:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "2212:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2239:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "2231:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:35:19"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "2294:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2294:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:6:19"
									},
									"scope": 3112,
									"src": "2194:192:19",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "2518:215:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2906,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "2544:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2907,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2895,
															"src": "2552:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2908,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2897,
															"src": "2563:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2905,
														"name": "_customTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "2528:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:42:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2910,
												"nodeType": "ExpressionStatement",
												"src": "2528:42:19"
											},
											{
												"assignments": [
													2912
												],
												"declarations": [
													{
														"constant": false,
														"id": 2912,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "2588:16:19",
														"nodeType": "VariableDeclaration",
														"scope": 2930,
														"src": "2580:24:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2580:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2918,
												"initialValue": {
													"arguments": [
														{
															"id": 2914,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "2617:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2915,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2625:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2625:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2913,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2607:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:31:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2580:58:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2920,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "2657:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2921,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2665:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2665:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2923,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "2679:16:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2924,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2897,
																"src": "2698:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2679:25:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2919,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1426,
															1494
														],
														"referencedDeclaration": 1426,
														"src": "2648:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:57:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2927,
												"nodeType": "ExpressionStatement",
												"src": "2648:57:19"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2722:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2904,
												"id": 2929,
												"nodeType": "Return",
												"src": "2715:11:19"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2901,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2900,
												"name": "whenNotPaused",
												"nameLocations": [
													"2489:13:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2489:13:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2489:13:19"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2401:12:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2899,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2480:8:19"
									},
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2422:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "2414:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2438:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "2430:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2457:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "2449:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:51:19"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "2512:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2512:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2511:6:19"
									},
									"scope": 3112,
									"src": "2392:341:19",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "2824:516:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2941,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "2842:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2851:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2842:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2854:31:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 2940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2834:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:52:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2946,
												"nodeType": "ExpressionStatement",
												"src": "2834:52:19"
											},
											{
												"assignments": [
													2948
												],
												"declarations": [
													{
														"constant": false,
														"id": 2948,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2904:3:19",
														"nodeType": "VariableDeclaration",
														"scope": 3008,
														"src": "2896:11:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2896:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2955,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2949,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2937,
																	"src": "2911:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2950,
																	"name": "transferFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "2920:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2911:20:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2952,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2910:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2953,
														"name": "FEE_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "2935:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2910:40:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2896:54:19"
											},
											{
												"assignments": [
													2957
												],
												"declarations": [
													{
														"constant": false,
														"id": 2957,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "2968:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 3008,
														"src": "2960:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2956,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2960:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2964,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2958,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2937,
																	"src": "2982:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2959,
																	"name": "burnRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2736,
																	"src": "2991:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2982:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2961,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2981:19:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2962,
														"name": "FEE_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "3003:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2981:37:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:58:19"
											},
											{
												"assignments": [
													2966
												],
												"declarations": [
													{
														"constant": false,
														"id": 2966,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "3036:9:19",
														"nodeType": "VariableDeclaration",
														"scope": 3008,
														"src": "3028:17:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3028:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2972,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2967,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2937,
															"src": "3048:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2968,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "3057:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3048:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2970,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "3063:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3048:25:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:45:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2973,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2948,
														"src": "3088:3:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3094:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3088:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2989,
												"nodeType": "IfStatement",
												"src": "3084:116:19",
												"trueBody": {
													"id": 2988,
													"nodeType": "Block",
													"src": "3097:103:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2979,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2933,
																		"src": "3127:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2980,
																		"name": "feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2738,
																		"src": "3135:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2981,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2948,
																		"src": "3149:3:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2976,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3111:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_AdvancedToken_$3112_$",
																			"typeString": "type(contract super AdvancedToken)"
																		}
																	},
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3117:9:19",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1250,
																	"src": "3111:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3111:42:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2983,
															"nodeType": "ExpressionStatement",
															"src": "3111:42:19"
														},
														{
															"expression": {
																"id": 2986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2984,
																	"name": "accumulatedFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2740,
																	"src": "3167:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2985,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2948,
																	"src": "3186:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3167:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2987,
															"nodeType": "ExpressionStatement",
															"src": "3167:22:19"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2990,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "3213:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3226:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3213:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2999,
												"nodeType": "IfStatement",
												"src": "3209:70:19",
												"trueBody": {
													"id": 2998,
													"nodeType": "Block",
													"src": "3229:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2994,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2933,
																		"src": "3249:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2995,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2957,
																		"src": "3257:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2993,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "3243:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3243:25:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2997,
															"nodeType": "ExpressionStatement",
															"src": "3243:25:19"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3003,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "3304:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3004,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2935,
															"src": "3312:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3005,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2966,
															"src": "3323:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3000,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3288:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AdvancedToken_$3112_$",
																"typeString": "type(contract super AdvancedToken)"
															}
														},
														"id": 3002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3294:9:19",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1250,
														"src": "3288:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3288:45:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3007,
												"nodeType": "ExpressionStatement",
												"src": "3288:45:19"
											}
										]
									},
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_customTransfer",
									"nameLocation": "2748:15:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2772:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "2764:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2788:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "2780:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2807:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "2799:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2763:51:19"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2824:0:19"
									},
									"scope": 3112,
									"src": "2739:601:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3046,
										"nodeType": "Block",
										"src": "3422:236:19",
										"statements": [
											{
												"assignments": [
													3018
												],
												"declarations": [
													{
														"constant": false,
														"id": 3018,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3440:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3046,
														"src": "3432:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3432:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3020,
												"initialValue": {
													"id": 3019,
													"name": "accumulatedFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2740,
													"src": "3449:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3432:32:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3022,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "3482:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3491:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3482:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206665657320746f207769746864726177",
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3494:21:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																"typeString": "literal_string \"No fees to withdraw\""
															},
															"value": "No fees to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																"typeString": "literal_string \"No fees to withdraw\""
															}
														],
														"id": 3021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3474:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3474:42:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "3474:42:19"
											},
											{
												"expression": {
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3028,
														"name": "accumulatedFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "3526:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3544:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3526:19:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "3526:19:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3035,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3573:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AdvancedToken_$3112",
																		"typeString": "contract AdvancedToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AdvancedToken_$3112",
																		"typeString": "contract AdvancedToken"
																	}
																],
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3565:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3565:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3565:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3037,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "3580:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3038,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "3594:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3032,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "3555:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3555:46:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3040,
												"nodeType": "ExpressionStatement",
												"src": "3555:46:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3042,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "3630:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3043,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "3644:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3041,
														"name": "FeesWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "3616:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3616:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3045,
												"nodeType": "EmitStatement",
												"src": "3611:40:19"
											}
										]
									},
									"functionSelector": "476343ee",
									"id": 3047,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3012,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "3388:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3013,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3011,
												"name": "onlyRole",
												"nameLocations": [
													"3379:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "3379:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "3379:28:19"
										},
										{
											"id": 3015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3014,
												"name": "whenNotPaused",
												"nameLocations": [
													"3408:13:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "3408:13:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "3408:13:19"
										}
									],
									"name": "withdrawFees",
									"nameLocation": "3355:12:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3367:2:19"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3422:0:19"
									},
									"scope": 3112,
									"src": "3346:312:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "3740:74:19",
										"statements": [
											{
												"expression": {
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3055,
														"name": "transferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "3750:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3056,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "3764:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3750:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3058,
												"nodeType": "ExpressionStatement",
												"src": "3750:18:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3060,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "3802:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3059,
														"name": "TransferFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "3783:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3783:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3062,
												"nodeType": "EmitStatement",
												"src": "3778:29:19"
											}
										]
									},
									"functionSelector": "8f02bb5b",
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3052,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "3720:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3051,
												"name": "onlyRole",
												"nameLocations": [
													"3711:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "3711:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:28:19"
										}
									],
									"name": "setTransferFee",
									"nameLocation": "3673:14:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "3696:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "3688:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:14:19"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3740:0:19"
									},
									"scope": 3112,
									"src": "3664:150:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "3894:70:19",
										"statements": [
											{
												"expression": {
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3072,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2736,
														"src": "3904:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3073,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "3915:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3904:16:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3075,
												"nodeType": "ExpressionStatement",
												"src": "3904:16:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3077,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "3951:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3076,
														"name": "BurnRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "3935:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3935:22:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3079,
												"nodeType": "EmitStatement",
												"src": "3930:27:19"
											}
										]
									},
									"functionSelector": "189d165e",
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3069,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "3874:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3070,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3068,
												"name": "onlyRole",
												"nameLocations": [
													"3865:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "3865:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "3865:28:19"
										}
									],
									"name": "setBurnRate",
									"nameLocation": "3829:11:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "3849:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3841:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3840:15:19"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3894:0:19"
									},
									"scope": 3112,
									"src": "3820:144:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3090,
										"nodeType": "Block",
										"src": "4018:25:19",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3087,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "4028:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4028:8:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3089,
												"nodeType": "ExpressionStatement",
												"src": "4028:8:19"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3084,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2727,
													"src": "4005:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3085,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3083,
												"name": "onlyRole",
												"nameLocations": [
													"3996:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "3996:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "3996:21:19"
										}
									],
									"name": "pause",
									"nameLocation": "3979:5:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3984:2:19"
									},
									"returnParameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:19"
									},
									"scope": 3112,
									"src": "3970:73:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3100,
										"nodeType": "Block",
										"src": "4099:27:19",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3097,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "4109:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4109:10:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3099,
												"nodeType": "ExpressionStatement",
												"src": "4109:10:19"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3094,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2727,
													"src": "4086:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3093,
												"name": "onlyRole",
												"nameLocations": [
													"4077:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4077:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "4077:21:19"
										}
									],
									"name": "unpause",
									"nameLocation": "4058:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4065:2:19"
									},
									"returnParameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4099:0:19"
									},
									"scope": 3112,
									"src": "4049:77:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "4210:2:19",
										"statements": []
									},
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3107,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2732,
													"src": "4195:13:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3106,
												"name": "onlyRole",
												"nameLocations": [
													"4186:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4186:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "4186:23:19"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4141:17:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4177:8:19"
									},
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "4159:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:9:19"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4210:0:19"
									},
									"scope": 3112,
									"src": "4132:80:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3113,
							"src": "377:3837:19",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1639,
								1642,
								1755,
								1760,
								1765,
								1774,
								1779,
								1784,
								1900,
								1913,
								2298,
								2561
							],
							"usedEvents": [
								387,
								813,
								818,
								1651,
								1660,
								1669,
								1720,
								2196,
								2205,
								2758,
								2762,
								2768
							]
						}
					],
					"src": "32:4182:19"
				},
				"id": 19
			}
		}
	}
}