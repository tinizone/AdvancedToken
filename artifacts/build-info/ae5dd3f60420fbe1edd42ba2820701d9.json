{
	"id": "ae5dd3f60420fbe1edd42ba2820701d9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFTStakingModule.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract NFTStakingModule is ReentrancyGuard {\n    IERC721 public nftContract;\n    IERC20 public token;\n    uint256 public rewardRate = 50; // 0.5% mỗi ngày\n    uint256 public constant RATE_DENOMINATOR = 10000;\n\n    struct NFTStake {\n        uint256 tokenId;\n        uint256 timestamp;\n        uint256 accumulatedReward;\n    }\n\n    mapping(address => NFTStake) public stakes;\n\n    event NFTStaked(address indexed user, uint256 tokenId);\n    event NFTUnstaked(address indexed user, uint256 tokenId, uint256 reward);\n\n    constructor(address _nftContract, address _token) {\n        nftContract = IERC721(_nftContract);\n        token = IERC20(_token);\n    }\n\n    function stakeNFT(uint256 tokenId) external nonReentrant {\n        require(nftContract.ownerOf(tokenId) == msg.sender, \"Not owner\");\n        nftContract.transferFrom(msg.sender, address(this), tokenId); // Gọi trực tiếp, sẽ revert nếu thất bại\n\n        NFTStake storage userStake = stakes[msg.sender];\n        if (userStake.tokenId != 0) {\n            userStake.accumulatedReward += calculateReward(msg.sender);\n        }\n\n        userStake.tokenId = tokenId;\n        userStake.timestamp = block.timestamp;\n\n        emit NFTStaked(msg.sender, tokenId);\n    }\n\n    function unstakeNFT() external nonReentrant {\n        NFTStake storage userStake = stakes[msg.sender];\n        require(userStake.tokenId != 0, \"No NFT staked\");\n\n        uint256 reward = calculateReward(msg.sender) + userStake.accumulatedReward;\n        uint256 tokenId = userStake.tokenId;\n\n        userStake.tokenId = 0;\n        userStake.timestamp = 0;\n        userStake.accumulatedReward = 0;\n\n        nftContract.transferFrom(address(this), msg.sender, tokenId); // Gọi trực tiếp, sẽ revert nếu thất bại\n        if (reward > 0) {\n            require(token.transfer(msg.sender, reward), \"Reward transfer failed\");\n        }\n\n        emit NFTUnstaked(msg.sender, tokenId, reward);\n    }\n\n    function calculateReward(address user) public view returns (uint256) {\n        NFTStake memory userStake = stakes[user];\n        if (userStake.tokenId == 0) return 0;\n        uint256 timeElapsed = block.timestamp - userStake.timestamp;\n        return (rewardRate * timeElapsed) / (RATE_DENOMINATOR * 1 days);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFTStakingModule.sol": {
				"NFTStakingModule": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "RATE_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftContract",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accumulatedReward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTStakingModule.sol\":238:2504  contract NFTStakingModule is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"NFTStakingModule.sol\":374:376  50 */\n  0x32\n    /* \"NFTStakingModule.sol\":346:376  uint256 public rewardRate = 50 */\n  0x03\n  sstore\n    /* \"NFTStakingModule.sol\":761:895  constructor(address _nftContract, address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"NFTStakingModule.sol\":843:855  _nftContract */\n  dup2\n    /* \"NFTStakingModule.sol\":821:832  nftContract */\n  0x01\n  0x00\n    /* \"NFTStakingModule.sol\":821:856  nftContract = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTStakingModule.sol\":881:887  _token */\n  dup1\n    /* \"NFTStakingModule.sol\":866:871  token */\n  0x02\n  0x00\n    /* \"NFTStakingModule.sol\":866:888  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTStakingModule.sol\":761:895  constructor(address _nftContract, address _token) {... */\n  pop\n  pop\n    /* \"NFTStakingModule.sol\":238:2504  contract NFTStakingModule is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":949:1068   */\ntag_29:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_31\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_32\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"NFTStakingModule.sol\":238:2504  contract NFTStakingModule is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTStakingModule.sol\":238:2504  contract NFTStakingModule is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd56d229d\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xd56d229d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe0a747fe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6eb604e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7efad8e0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFTStakingModule.sol\":573:615  mapping(address => NFTStake) public stakes */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStakingModule.sol\":901:1473  function stakeNFT(uint256 tokenId) external nonReentrant {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"NFTStakingModule.sol\":346:376  uint256 public rewardRate = 50 */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStakingModule.sol\":402:450  uint256 public constant RATE_DENOMINATOR = 10000 */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStakingModule.sol\":289:315  IERC721 public nftContract */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStakingModule.sol\":2188:2502  function calculateReward(address user) public view returns (uint256) {... */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStakingModule.sol\":1479:2182  function unstakeNFT() external nonReentrant {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"NFTStakingModule.sol\":321:340  IERC20 public token */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStakingModule.sol\":573:615  mapping(address => NFTStake) public stakes */\n    tag_15:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"NFTStakingModule.sol\":901:1473  function stakeNFT(uint256 tokenId) external nonReentrant {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_44\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_45\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_44:\n        /* \"NFTStakingModule.sol\":1008:1018  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":976:1018  nftContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStakingModule.sol\":976:987  nftContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStakingModule.sol\":976:995  nftContract.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"NFTStakingModule.sol\":996:1003  tokenId */\n      dup4\n        /* \"NFTStakingModule.sol\":976:1004  nftContract.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"NFTStakingModule.sol\":976:1018  nftContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTStakingModule.sol\":968:1032  require(nftContract.ownerOf(tokenId) == msg.sender, \"Not owner\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"NFTStakingModule.sol\":1042:1053  nftContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStakingModule.sol\":1042:1066  nftContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NFTStakingModule.sol\":1067:1077  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1087:1091  this */\n      address\n        /* \"NFTStakingModule.sol\":1094:1101  tokenId */\n      dup5\n        /* \"NFTStakingModule.sol\":1042:1102  nftContract.transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTStakingModule.sol\":1168:1194  NFTStake storage userStake */\n      0x00\n        /* \"NFTStakingModule.sol\":1197:1203  stakes */\n      0x04\n        /* \"NFTStakingModule.sol\":1197:1215  stakes[msg.sender] */\n      0x00\n        /* \"NFTStakingModule.sol\":1204:1214  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1197:1215  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTStakingModule.sol\":1168:1215  NFTStake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"NFTStakingModule.sol\":1250:1251  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":1229:1238  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":1229:1246  userStake.tokenId */\n      0x00\n      add\n      sload\n        /* \"NFTStakingModule.sol\":1229:1251  userStake.tokenId != 0 */\n      eq\n        /* \"NFTStakingModule.sol\":1225:1336  if (userStake.tokenId != 0) {... */\n      tag_60\n      jumpi\n        /* \"NFTStakingModule.sol\":1298:1325  calculateReward(msg.sender) */\n      tag_61\n        /* \"NFTStakingModule.sol\":1314:1324  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1298:1313  calculateReward */\n      tag_35\n        /* \"NFTStakingModule.sol\":1298:1325  calculateReward(msg.sender) */\n      jump\t// in\n    tag_61:\n        /* \"NFTStakingModule.sol\":1267:1276  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":1267:1294  userStake.accumulatedReward */\n      0x02\n      add\n      0x00\n        /* \"NFTStakingModule.sol\":1267:1325  userStake.accumulatedReward += calculateReward(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStakingModule.sol\":1225:1336  if (userStake.tokenId != 0) {... */\n    tag_60:\n        /* \"NFTStakingModule.sol\":1366:1373  tokenId */\n      dup2\n        /* \"NFTStakingModule.sol\":1346:1355  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":1346:1363  userStake.tokenId */\n      0x00\n      add\n        /* \"NFTStakingModule.sol\":1346:1373  userStake.tokenId = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStakingModule.sol\":1405:1420  block.timestamp */\n      timestamp\n        /* \"NFTStakingModule.sol\":1383:1392  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":1383:1402  userStake.timestamp */\n      0x01\n      add\n        /* \"NFTStakingModule.sol\":1383:1420  userStake.timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStakingModule.sol\":1446:1456  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1436:1466  NFTStaked(msg.sender, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cda5cf38f6592672c7b4a22ff3d50874d1913629bd5ffedc27b7b40503d60fd\n        /* \"NFTStakingModule.sol\":1458:1465  tokenId */\n      dup4\n        /* \"NFTStakingModule.sol\":1436:1466  NFTStaked(msg.sender, tokenId) */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"NFTStakingModule.sol\":958:1473  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_66\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_65:\n        /* \"NFTStakingModule.sol\":901:1473  function stakeNFT(uint256 tokenId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"NFTStakingModule.sol\":346:376  uint256 public rewardRate = 50 */\n    tag_23:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"NFTStakingModule.sol\":402:450  uint256 public constant RATE_DENOMINATOR = 10000 */\n    tag_27:\n        /* \"NFTStakingModule.sol\":445:450  10000 */\n      0x2710\n        /* \"NFTStakingModule.sol\":402:450  uint256 public constant RATE_DENOMINATOR = 10000 */\n      dup2\n      jump\t// out\n        /* \"NFTStakingModule.sol\":289:315  IERC721 public nftContract */\n    tag_30:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTStakingModule.sol\":2188:2502  function calculateReward(address user) public view returns (uint256) {... */\n    tag_35:\n        /* \"NFTStakingModule.sol\":2248:2255  uint256 */\n      0x00\n        /* \"NFTStakingModule.sol\":2267:2292  NFTStake memory userStake */\n      dup1\n        /* \"NFTStakingModule.sol\":2295:2301  stakes */\n      0x04\n        /* \"NFTStakingModule.sol\":2295:2307  stakes[user] */\n      0x00\n        /* \"NFTStakingModule.sol\":2302:2306  user */\n      dup5\n        /* \"NFTStakingModule.sol\":2295:2307  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTStakingModule.sol\":2267:2307  NFTStake memory userStake = stakes[user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFTStakingModule.sol\":2342:2343  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":2321:2330  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":2321:2338  userStake.tokenId */\n      0x00\n      add\n      mload\n        /* \"NFTStakingModule.sol\":2321:2343  userStake.tokenId == 0 */\n      sub\n        /* \"NFTStakingModule.sol\":2317:2353  if (userStake.tokenId == 0) return 0 */\n      tag_68\n      jumpi\n        /* \"NFTStakingModule.sol\":2352:2353  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":2345:2353  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_67)\n        /* \"NFTStakingModule.sol\":2317:2353  if (userStake.tokenId == 0) return 0 */\n    tag_68:\n        /* \"NFTStakingModule.sol\":2363:2382  uint256 timeElapsed */\n      0x00\n        /* \"NFTStakingModule.sol\":2403:2412  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":2403:2422  userStake.timestamp */\n      0x20\n      add\n      mload\n        /* \"NFTStakingModule.sol\":2385:2400  block.timestamp */\n      timestamp\n        /* \"NFTStakingModule.sol\":2385:2422  block.timestamp - userStake.timestamp */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"NFTStakingModule.sol\":2363:2422  uint256 timeElapsed = block.timestamp - userStake.timestamp */\n      swap1\n      pop\n        /* \"NFTStakingModule.sol\":2488:2494  1 days */\n      0x015180\n        /* \"NFTStakingModule.sol\":445:450  10000 */\n      0x2710\n        /* \"NFTStakingModule.sol\":2469:2494  RATE_DENOMINATOR * 1 days */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"NFTStakingModule.sol\":2453:2464  timeElapsed */\n      dup2\n        /* \"NFTStakingModule.sol\":2440:2450  rewardRate */\n      sload(0x03)\n        /* \"NFTStakingModule.sol\":2440:2464  rewardRate * timeElapsed */\n      tag_73\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n        /* \"NFTStakingModule.sol\":2439:2495  (rewardRate * timeElapsed) / (RATE_DENOMINATOR * 1 days) */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"NFTStakingModule.sol\":2432:2495  return (rewardRate * timeElapsed) / (RATE_DENOMINATOR * 1 days) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"NFTStakingModule.sol\":2188:2502  function calculateReward(address user) public view returns (uint256) {... */\n    tag_67:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTStakingModule.sol\":1479:2182  function unstakeNFT() external nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_77\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_45\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_77:\n        /* \"NFTStakingModule.sol\":1533:1559  NFTStake storage userStake */\n      0x00\n        /* \"NFTStakingModule.sol\":1562:1568  stakes */\n      0x04\n        /* \"NFTStakingModule.sol\":1562:1580  stakes[msg.sender] */\n      0x00\n        /* \"NFTStakingModule.sol\":1569:1579  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1562:1580  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTStakingModule.sol\":1533:1580  NFTStake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"NFTStakingModule.sol\":1619:1620  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":1598:1607  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":1598:1615  userStake.tokenId */\n      0x00\n      add\n      sload\n        /* \"NFTStakingModule.sol\":1598:1620  userStake.tokenId != 0 */\n      sub\n        /* \"NFTStakingModule.sol\":1590:1638  require(userStake.tokenId != 0, \"No NFT staked\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"NFTStakingModule.sol\":1649:1663  uint256 reward */\n      0x00\n        /* \"NFTStakingModule.sol\":1696:1705  userStake */\n      dup2\n        /* \"NFTStakingModule.sol\":1696:1723  userStake.accumulatedReward */\n      0x02\n      add\n      sload\n        /* \"NFTStakingModule.sol\":1666:1693  calculateReward(msg.sender) */\n      tag_82\n        /* \"NFTStakingModule.sol\":1682:1692  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1666:1681  calculateReward */\n      tag_35\n        /* \"NFTStakingModule.sol\":1666:1693  calculateReward(msg.sender) */\n      jump\t// in\n    tag_82:\n        /* \"NFTStakingModule.sol\":1666:1723  calculateReward(msg.sender) + userStake.accumulatedReward */\n      tag_83\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_83:\n        /* \"NFTStakingModule.sol\":1649:1723  uint256 reward = calculateReward(msg.sender) + userStake.accumulatedReward */\n      swap1\n      pop\n        /* \"NFTStakingModule.sol\":1733:1748  uint256 tokenId */\n      0x00\n        /* \"NFTStakingModule.sol\":1751:1760  userStake */\n      dup3\n        /* \"NFTStakingModule.sol\":1751:1768  userStake.tokenId */\n      0x00\n      add\n      sload\n        /* \"NFTStakingModule.sol\":1733:1768  uint256 tokenId = userStake.tokenId */\n      swap1\n      pop\n        /* \"NFTStakingModule.sol\":1799:1800  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":1779:1788  userStake */\n      dup4\n        /* \"NFTStakingModule.sol\":1779:1796  userStake.tokenId */\n      0x00\n      add\n        /* \"NFTStakingModule.sol\":1779:1800  userStake.tokenId = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStakingModule.sol\":1832:1833  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":1810:1819  userStake */\n      dup4\n        /* \"NFTStakingModule.sol\":1810:1829  userStake.timestamp */\n      0x01\n      add\n        /* \"NFTStakingModule.sol\":1810:1833  userStake.timestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStakingModule.sol\":1873:1874  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":1843:1852  userStake */\n      dup4\n        /* \"NFTStakingModule.sol\":1843:1870  userStake.accumulatedReward */\n      0x02\n      add\n        /* \"NFTStakingModule.sol\":1843:1874  userStake.accumulatedReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStakingModule.sol\":1885:1896  nftContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStakingModule.sol\":1885:1909  nftContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NFTStakingModule.sol\":1918:1922  this */\n      address\n        /* \"NFTStakingModule.sol\":1925:1935  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":1937:1944  tokenId */\n      dup5\n        /* \"NFTStakingModule.sol\":1885:1945  nftContract.transferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_84:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTStakingModule.sol\":2023:2024  0 */\n      0x00\n        /* \"NFTStakingModule.sol\":2014:2020  reward */\n      dup3\n        /* \"NFTStakingModule.sol\":2014:2024  reward > 0 */\n      gt\n        /* \"NFTStakingModule.sol\":2010:2120  if (reward > 0) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"NFTStakingModule.sol\":2048:2053  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStakingModule.sol\":2048:2062  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"NFTStakingModule.sol\":2063:2073  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":2075:2081  reward */\n      dup5\n        /* \"NFTStakingModule.sol\":2048:2082  token.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"NFTStakingModule.sol\":2040:2109  require(token.transfer(msg.sender, reward), \"Reward transfer failed\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"NFTStakingModule.sol\":2010:2120  if (reward > 0) {... */\n    tag_88:\n        /* \"NFTStakingModule.sol\":2147:2157  msg.sender */\n      caller\n        /* \"NFTStakingModule.sol\":2135:2175  NFTUnstaked(msg.sender, tokenId, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b\n        /* \"NFTStakingModule.sol\":2159:2166  tokenId */\n      dup3\n        /* \"NFTStakingModule.sol\":2168:2174  reward */\n      dup5\n        /* \"NFTStakingModule.sol\":2135:2175  NFTUnstaked(msg.sender, tokenId, reward) */\n      mload(0x40)\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"NFTStakingModule.sol\":1523:2182  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_100\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_66\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_100:\n        /* \"NFTStakingModule.sol\":1479:2182  function unstakeNFT() external nonReentrant {... */\n      jump\t// out\n        /* \"NFTStakingModule.sol\":321:340  IERC20 public token */\n    tag_40:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_107:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_109:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_110:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_146\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_111:\n        /* \"#utility.yul\":641:665   */\n      tag_148\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_110\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_149:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_112:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_151\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_111\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_154\n      tag_107\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":917:1036   */\n    tag_153:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_155\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_112\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_113:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_114:\n        /* \"#utility.yul\":1346:1370   */\n      tag_158\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_113\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1825   */\n    tag_17:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x60\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_160\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup7\n        /* \"#utility.yul\":1583:1654   */\n      tag_114\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1664:1736   */\n      tag_161\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup6\n        /* \"#utility.yul\":1664:1736   */\n      tag_114\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1746:1818   */\n      tag_162\n        /* \"#utility.yul\":1814:1816   */\n      0x40\n        /* \"#utility.yul\":1803:1812   */\n      dup4\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"#utility.yul\":1790:1796   */\n      dup5\n        /* \"#utility.yul\":1746:1818   */\n      tag_114\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1383:1825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1953   */\n    tag_115:\n        /* \"#utility.yul\":1904:1928   */\n      tag_164\n        /* \"#utility.yul\":1922:1927   */\n      dup2\n        /* \"#utility.yul\":1904:1928   */\n      tag_113\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1894:1929   */\n      eq\n        /* \"#utility.yul\":1884:1947   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1940:1941   */\n      dup1\n        /* \"#utility.yul\":1933:1945   */\n      revert\n        /* \"#utility.yul\":1884:1947   */\n    tag_165:\n        /* \"#utility.yul\":1831:1953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2098   */\n    tag_116:\n        /* \"#utility.yul\":2005:2010   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup2\n        /* \"#utility.yul\":2030:2050   */\n      calldataload\n        /* \"#utility.yul\":2021:2050   */\n      swap1\n      pop\n        /* \"#utility.yul\":2059:2092   */\n      tag_167\n        /* \"#utility.yul\":2086:2091   */\n      dup2\n        /* \"#utility.yul\":2059:2092   */\n      tag_115\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1959:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2433   */\n    tag_20:\n        /* \"#utility.yul\":2163:2169   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup3\n        /* \"#utility.yul\":2191:2198   */\n      dup5\n        /* \"#utility.yul\":2187:2210   */\n      sub\n        /* \"#utility.yul\":2183:2215   */\n      slt\n        /* \"#utility.yul\":2180:2299   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2218:2297   */\n      tag_170\n      tag_107\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2180:2299   */\n    tag_169:\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2363:2416   */\n      tag_171\n        /* \"#utility.yul\":2408:2415   */\n      dup5\n        /* \"#utility.yul\":2399:2405   */\n      dup3\n        /* \"#utility.yul\":2388:2397   */\n      dup6\n        /* \"#utility.yul\":2384:2406   */\n      add\n        /* \"#utility.yul\":2363:2416   */\n      tag_116\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2353:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2309:2426   */\n      pop\n        /* \"#utility.yul\":2104:2433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2661   */\n    tag_25:\n        /* \"#utility.yul\":2532:2536   */\n      0x00\n        /* \"#utility.yul\":2570:2572   */\n      0x20\n        /* \"#utility.yul\":2559:2568   */\n      dup3\n        /* \"#utility.yul\":2555:2573   */\n      add\n        /* \"#utility.yul\":2547:2573   */\n      swap1\n      pop\n        /* \"#utility.yul\":2583:2654   */\n      tag_173\n        /* \"#utility.yul\":2651:2652   */\n      0x00\n        /* \"#utility.yul\":2640:2649   */\n      dup4\n        /* \"#utility.yul\":2636:2653   */\n      add\n        /* \"#utility.yul\":2627:2633   */\n      dup5\n        /* \"#utility.yul\":2583:2654   */\n      tag_114\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2439:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:2727   */\n    tag_117:\n        /* \"#utility.yul\":2695:2698   */\n      0x00\n        /* \"#utility.yul\":2716:2721   */\n      dup2\n        /* \"#utility.yul\":2709:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2667:2727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:2875   */\n    tag_118:\n        /* \"#utility.yul\":2783:2792   */\n      0x00\n        /* \"#utility.yul\":2816:2869   */\n      tag_176\n        /* \"#utility.yul\":2834:2868   */\n      tag_177\n        /* \"#utility.yul\":2843:2867   */\n      tag_178\n        /* \"#utility.yul\":2861:2866   */\n      dup5\n        /* \"#utility.yul\":2843:2867   */\n      tag_109\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2834:2868   */\n      tag_117\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2816:2869   */\n      tag_109\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2803:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:2875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3007   */\n    tag_119:\n        /* \"#utility.yul\":2931:2940   */\n      0x00\n        /* \"#utility.yul\":2964:3001   */\n      tag_180\n        /* \"#utility.yul\":2995:3000   */\n      dup3\n        /* \"#utility.yul\":2964:3001   */\n      tag_118\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2951:3001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2881:3007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3154   */\n    tag_120:\n        /* \"#utility.yul\":3078:3087   */\n      0x00\n        /* \"#utility.yul\":3111:3148   */\n      tag_182\n        /* \"#utility.yul\":3142:3147   */\n      dup3\n        /* \"#utility.yul\":3111:3148   */\n      tag_119\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3098:3148   */\n      swap1\n      pop\n        /* \"#utility.yul\":3013:3154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3160:3321   */\n    tag_121:\n        /* \"#utility.yul\":3262:3314   */\n      tag_184\n        /* \"#utility.yul\":3308:3313   */\n      dup2\n        /* \"#utility.yul\":3262:3314   */\n      tag_120\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3257:3260   */\n      dup3\n        /* \"#utility.yul\":3250:3315   */\n      mstore\n        /* \"#utility.yul\":3160:3321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3327:3579   */\n    tag_32:\n        /* \"#utility.yul\":3435:3439   */\n      0x00\n        /* \"#utility.yul\":3473:3475   */\n      0x20\n        /* \"#utility.yul\":3462:3471   */\n      dup3\n        /* \"#utility.yul\":3458:3476   */\n      add\n        /* \"#utility.yul\":3450:3476   */\n      swap1\n      pop\n        /* \"#utility.yul\":3486:3572   */\n      tag_186\n        /* \"#utility.yul\":3569:3570   */\n      0x00\n        /* \"#utility.yul\":3558:3567   */\n      dup4\n        /* \"#utility.yul\":3554:3571   */\n      add\n        /* \"#utility.yul\":3545:3551   */\n      dup5\n        /* \"#utility.yul\":3486:3572   */\n      tag_121\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3327:3579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3585:3725   */\n    tag_122:\n        /* \"#utility.yul\":3649:3658   */\n      0x00\n        /* \"#utility.yul\":3682:3719   */\n      tag_188\n        /* \"#utility.yul\":3713:3718   */\n      dup3\n        /* \"#utility.yul\":3682:3719   */\n      tag_119\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3669:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3585:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3890   */\n    tag_123:\n        /* \"#utility.yul\":3832:3883   */\n      tag_190\n        /* \"#utility.yul\":3877:3882   */\n      dup2\n        /* \"#utility.yul\":3832:3883   */\n      tag_122\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3827:3830   */\n      dup3\n        /* \"#utility.yul\":3820:3884   */\n      mstore\n        /* \"#utility.yul\":3731:3890   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3896:4146   */\n    tag_42:\n        /* \"#utility.yul\":4003:4007   */\n      0x00\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4030:4039   */\n      dup3\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"#utility.yul\":4018:4044   */\n      swap1\n      pop\n        /* \"#utility.yul\":4054:4139   */\n      tag_192\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4125:4134   */\n      dup4\n        /* \"#utility.yul\":4121:4138   */\n      add\n        /* \"#utility.yul\":4112:4118   */\n      dup5\n        /* \"#utility.yul\":4054:4139   */\n      tag_123\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3896:4146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4295   */\n    tag_124:\n        /* \"#utility.yul\":4209:4214   */\n      0x00\n        /* \"#utility.yul\":4240:4246   */\n      dup2\n        /* \"#utility.yul\":4234:4247   */\n      mload\n        /* \"#utility.yul\":4225:4247   */\n      swap1\n      pop\n        /* \"#utility.yul\":4256:4289   */\n      tag_194\n        /* \"#utility.yul\":4283:4288   */\n      dup2\n        /* \"#utility.yul\":4256:4289   */\n      tag_111\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4152:4295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4301:4652   */\n    tag_51:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4420:4422   */\n      0x20\n        /* \"#utility.yul\":4408:4417   */\n      dup3\n        /* \"#utility.yul\":4399:4406   */\n      dup5\n        /* \"#utility.yul\":4395:4418   */\n      sub\n        /* \"#utility.yul\":4391:4423   */\n      slt\n        /* \"#utility.yul\":4388:4507   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":4426:4505   */\n      tag_197\n      tag_107\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4388:4507   */\n    tag_196:\n        /* \"#utility.yul\":4546:4547   */\n      0x00\n        /* \"#utility.yul\":4571:4635   */\n      tag_198\n        /* \"#utility.yul\":4627:4634   */\n      dup5\n        /* \"#utility.yul\":4618:4624   */\n      dup3\n        /* \"#utility.yul\":4607:4616   */\n      dup6\n        /* \"#utility.yul\":4603:4625   */\n      add\n        /* \"#utility.yul\":4571:4635   */\n      tag_124\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4561:4635   */\n      swap2\n      pop\n        /* \"#utility.yul\":4517:4645   */\n      pop\n        /* \"#utility.yul\":4301:4652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:4827   */\n    tag_125:\n        /* \"#utility.yul\":4742:4753   */\n      0x00\n        /* \"#utility.yul\":4776:4782   */\n      dup3\n        /* \"#utility.yul\":4771:4774   */\n      dup3\n        /* \"#utility.yul\":4764:4783   */\n      mstore\n        /* \"#utility.yul\":4816:4820   */\n      0x20\n        /* \"#utility.yul\":4811:4814   */\n      dup3\n        /* \"#utility.yul\":4807:4821   */\n      add\n        /* \"#utility.yul\":4792:4821   */\n      swap1\n      pop\n        /* \"#utility.yul\":4658:4827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4833:4992   */\n    tag_126:\n        /* \"#utility.yul\":4973:4984   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4969:4970   */\n      0x00\n        /* \"#utility.yul\":4961:4967   */\n      dup3\n        /* \"#utility.yul\":4957:4971   */\n      add\n        /* \"#utility.yul\":4950:4985   */\n      mstore\n        /* \"#utility.yul\":4833:4992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4998:5363   */\n    tag_127:\n        /* \"#utility.yul\":5140:5143   */\n      0x00\n        /* \"#utility.yul\":5161:5227   */\n      tag_202\n        /* \"#utility.yul\":5225:5226   */\n      0x09\n        /* \"#utility.yul\":5220:5223   */\n      dup4\n        /* \"#utility.yul\":5161:5227   */\n      tag_125\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5154:5227   */\n      swap2\n      pop\n        /* \"#utility.yul\":5236:5329   */\n      tag_203\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5236:5329   */\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5349:5352   */\n      dup3\n        /* \"#utility.yul\":5345:5357   */\n      add\n        /* \"#utility.yul\":5338:5357   */\n      swap1\n      pop\n        /* \"#utility.yul\":4998:5363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5788   */\n    tag_54:\n        /* \"#utility.yul\":5535:5539   */\n      0x00\n        /* \"#utility.yul\":5573:5575   */\n      0x20\n        /* \"#utility.yul\":5562:5571   */\n      dup3\n        /* \"#utility.yul\":5558:5576   */\n      add\n        /* \"#utility.yul\":5550:5576   */\n      swap1\n      pop\n        /* \"#utility.yul\":5622:5631   */\n      dup2\n        /* \"#utility.yul\":5616:5620   */\n      dup2\n        /* \"#utility.yul\":5612:5632   */\n      sub\n        /* \"#utility.yul\":5608:5609   */\n      0x00\n        /* \"#utility.yul\":5597:5606   */\n      dup4\n        /* \"#utility.yul\":5593:5610   */\n      add\n        /* \"#utility.yul\":5586:5633   */\n      mstore\n        /* \"#utility.yul\":5650:5781   */\n      tag_205\n        /* \"#utility.yul\":5776:5780   */\n      dup2\n        /* \"#utility.yul\":5650:5781   */\n      tag_127\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5642:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5369:5788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5794:5912   */\n    tag_128:\n        /* \"#utility.yul\":5881:5905   */\n      tag_207\n        /* \"#utility.yul\":5899:5904   */\n      dup2\n        /* \"#utility.yul\":5881:5905   */\n      tag_110\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5876:5879   */\n      dup3\n        /* \"#utility.yul\":5869:5906   */\n      mstore\n        /* \"#utility.yul\":5794:5912   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5918:6360   */\n    tag_56:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x60\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_209\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup7\n        /* \"#utility.yul\":6118:6189   */\n      tag_128\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6199:6271   */\n      tag_210\n        /* \"#utility.yul\":6267:6269   */\n      0x20\n        /* \"#utility.yul\":6256:6265   */\n      dup4\n        /* \"#utility.yul\":6252:6270   */\n      add\n        /* \"#utility.yul\":6243:6249   */\n      dup6\n        /* \"#utility.yul\":6199:6271   */\n      tag_128\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6281:6353   */\n      tag_211\n        /* \"#utility.yul\":6349:6351   */\n      0x40\n        /* \"#utility.yul\":6338:6347   */\n      dup4\n        /* \"#utility.yul\":6334:6352   */\n      add\n        /* \"#utility.yul\":6325:6331   */\n      dup5\n        /* \"#utility.yul\":6281:6353   */\n      tag_114\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5918:6360   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6366:6546   */\n    tag_129:\n        /* \"#utility.yul\":6414:6491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6411:6412   */\n      0x00\n        /* \"#utility.yul\":6404:6492   */\n      mstore\n        /* \"#utility.yul\":6511:6515   */\n      0x11\n        /* \"#utility.yul\":6508:6509   */\n      0x04\n        /* \"#utility.yul\":6501:6516   */\n      mstore\n        /* \"#utility.yul\":6535:6539   */\n      0x24\n        /* \"#utility.yul\":6532:6533   */\n      0x00\n        /* \"#utility.yul\":6525:6540   */\n      revert\n        /* \"#utility.yul\":6552:6743   */\n    tag_63:\n        /* \"#utility.yul\":6592:6595   */\n      0x00\n        /* \"#utility.yul\":6611:6631   */\n      tag_214\n        /* \"#utility.yul\":6629:6630   */\n      dup3\n        /* \"#utility.yul\":6611:6631   */\n      tag_113\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6606:6631   */\n      swap2\n      pop\n        /* \"#utility.yul\":6645:6665   */\n      tag_215\n        /* \"#utility.yul\":6663:6664   */\n      dup4\n        /* \"#utility.yul\":6645:6665   */\n      tag_113\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6640:6665   */\n      swap3\n      pop\n        /* \"#utility.yul\":6688:6689   */\n      dup3\n        /* \"#utility.yul\":6685:6686   */\n      dup3\n        /* \"#utility.yul\":6681:6690   */\n      add\n        /* \"#utility.yul\":6674:6690   */\n      swap1\n      pop\n        /* \"#utility.yul\":6709:6712   */\n      dup1\n        /* \"#utility.yul\":6706:6707   */\n      dup3\n        /* \"#utility.yul\":6703:6713   */\n      gt\n        /* \"#utility.yul\":6700:6736   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":6716:6734   */\n      tag_217\n      tag_129\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6700:6736   */\n    tag_216:\n        /* \"#utility.yul\":6552:6743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6749:6943   */\n    tag_70:\n        /* \"#utility.yul\":6789:6793   */\n      0x00\n        /* \"#utility.yul\":6809:6829   */\n      tag_219\n        /* \"#utility.yul\":6827:6828   */\n      dup3\n        /* \"#utility.yul\":6809:6829   */\n      tag_113\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6804:6829   */\n      swap2\n      pop\n        /* \"#utility.yul\":6843:6863   */\n      tag_220\n        /* \"#utility.yul\":6861:6862   */\n      dup4\n        /* \"#utility.yul\":6843:6863   */\n      tag_113\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6838:6863   */\n      swap3\n      pop\n        /* \"#utility.yul\":6887:6888   */\n      dup3\n        /* \"#utility.yul\":6884:6885   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      sub\n        /* \"#utility.yul\":6872:6889   */\n      swap1\n      pop\n        /* \"#utility.yul\":6911:6912   */\n      dup2\n        /* \"#utility.yul\":6905:6909   */\n      dup2\n        /* \"#utility.yul\":6902:6913   */\n      gt\n        /* \"#utility.yul\":6899:6936   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":6916:6934   */\n      tag_222\n      tag_129\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6899:6936   */\n    tag_221:\n        /* \"#utility.yul\":6749:6943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6949:7359   */\n    tag_72:\n        /* \"#utility.yul\":6989:6996   */\n      0x00\n        /* \"#utility.yul\":7012:7032   */\n      tag_224\n        /* \"#utility.yul\":7030:7031   */\n      dup3\n        /* \"#utility.yul\":7012:7032   */\n      tag_113\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7007:7032   */\n      swap2\n      pop\n        /* \"#utility.yul\":7046:7066   */\n      tag_225\n        /* \"#utility.yul\":7064:7065   */\n      dup4\n        /* \"#utility.yul\":7046:7066   */\n      tag_113\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7041:7066   */\n      swap3\n      pop\n        /* \"#utility.yul\":7101:7102   */\n      dup3\n        /* \"#utility.yul\":7098:7099   */\n      dup3\n        /* \"#utility.yul\":7094:7103   */\n      mul\n        /* \"#utility.yul\":7123:7153   */\n      tag_226\n        /* \"#utility.yul\":7141:7152   */\n      dup2\n        /* \"#utility.yul\":7123:7153   */\n      tag_113\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7112:7153   */\n      swap2\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7293:7300   */\n      dup3\n        /* \"#utility.yul\":7289:7304   */\n      div\n        /* \"#utility.yul\":7286:7287   */\n      dup5\n        /* \"#utility.yul\":7283:7305   */\n      eq\n        /* \"#utility.yul\":7263:7264   */\n      dup4\n        /* \"#utility.yul\":7256:7265   */\n      iszero\n        /* \"#utility.yul\":7236:7319   */\n      or\n        /* \"#utility.yul\":7213:7352   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":7332:7350   */\n      tag_228\n      tag_129\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7213:7352   */\n    tag_227:\n        /* \"#utility.yul\":6997:7359   */\n      pop\n        /* \"#utility.yul\":6949:7359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7365:7545   */\n    tag_130:\n        /* \"#utility.yul\":7413:7490   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7410:7411   */\n      0x00\n        /* \"#utility.yul\":7403:7491   */\n      mstore\n        /* \"#utility.yul\":7510:7514   */\n      0x12\n        /* \"#utility.yul\":7507:7508   */\n      0x04\n        /* \"#utility.yul\":7500:7515   */\n      mstore\n        /* \"#utility.yul\":7534:7538   */\n      0x24\n        /* \"#utility.yul\":7531:7532   */\n      0x00\n        /* \"#utility.yul\":7524:7539   */\n      revert\n        /* \"#utility.yul\":7551:7736   */\n    tag_75:\n        /* \"#utility.yul\":7591:7592   */\n      0x00\n        /* \"#utility.yul\":7608:7628   */\n      tag_231\n        /* \"#utility.yul\":7626:7627   */\n      dup3\n        /* \"#utility.yul\":7608:7628   */\n      tag_113\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7603:7628   */\n      swap2\n      pop\n        /* \"#utility.yul\":7642:7662   */\n      tag_232\n        /* \"#utility.yul\":7660:7661   */\n      dup4\n        /* \"#utility.yul\":7642:7662   */\n      tag_113\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7637:7662   */\n      swap3\n      pop\n        /* \"#utility.yul\":7681:7682   */\n      dup3\n        /* \"#utility.yul\":7671:7706   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":7686:7704   */\n      tag_234\n      tag_130\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7671:7706   */\n    tag_233:\n        /* \"#utility.yul\":7728:7729   */\n      dup3\n        /* \"#utility.yul\":7725:7726   */\n      dup3\n        /* \"#utility.yul\":7721:7730   */\n      div\n        /* \"#utility.yul\":7716:7730   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:7905   */\n    tag_131:\n        /* \"#utility.yul\":7882:7897   */\n      0x4e6f204e4654207374616b656400000000000000000000000000000000000000\n        /* \"#utility.yul\":7878:7879   */\n      0x00\n        /* \"#utility.yul\":7870:7876   */\n      dup3\n        /* \"#utility.yul\":7866:7880   */\n      add\n        /* \"#utility.yul\":7859:7898   */\n      mstore\n        /* \"#utility.yul\":7742:7905   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7911:8277   */\n    tag_132:\n        /* \"#utility.yul\":8053:8056   */\n      0x00\n        /* \"#utility.yul\":8074:8141   */\n      tag_237\n        /* \"#utility.yul\":8138:8140   */\n      0x0d\n        /* \"#utility.yul\":8133:8136   */\n      dup4\n        /* \"#utility.yul\":8074:8141   */\n      tag_125\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8067:8141   */\n      swap2\n      pop\n        /* \"#utility.yul\":8150:8243   */\n      tag_238\n        /* \"#utility.yul\":8239:8242   */\n      dup3\n        /* \"#utility.yul\":8150:8243   */\n      tag_131\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8268:8270   */\n      0x20\n        /* \"#utility.yul\":8263:8266   */\n      dup3\n        /* \"#utility.yul\":8259:8271   */\n      add\n        /* \"#utility.yul\":8252:8271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7911:8277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8283:8702   */\n    tag_81:\n        /* \"#utility.yul\":8449:8453   */\n      0x00\n        /* \"#utility.yul\":8487:8489   */\n      0x20\n        /* \"#utility.yul\":8476:8485   */\n      dup3\n        /* \"#utility.yul\":8472:8490   */\n      add\n        /* \"#utility.yul\":8464:8490   */\n      swap1\n      pop\n        /* \"#utility.yul\":8536:8545   */\n      dup2\n        /* \"#utility.yul\":8530:8534   */\n      dup2\n        /* \"#utility.yul\":8526:8546   */\n      sub\n        /* \"#utility.yul\":8522:8523   */\n      0x00\n        /* \"#utility.yul\":8511:8520   */\n      dup4\n        /* \"#utility.yul\":8507:8524   */\n      add\n        /* \"#utility.yul\":8500:8547   */\n      mstore\n        /* \"#utility.yul\":8564:8695   */\n      tag_240\n        /* \"#utility.yul\":8690:8694   */\n      dup2\n        /* \"#utility.yul\":8564:8695   */\n      tag_132\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8556:8695   */\n      swap1\n      pop\n        /* \"#utility.yul\":8283:8702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8708:9040   */\n    tag_90:\n        /* \"#utility.yul\":8829:8833   */\n      0x00\n        /* \"#utility.yul\":8867:8869   */\n      0x40\n        /* \"#utility.yul\":8856:8865   */\n      dup3\n        /* \"#utility.yul\":8852:8870   */\n      add\n        /* \"#utility.yul\":8844:8870   */\n      swap1\n      pop\n        /* \"#utility.yul\":8880:8951   */\n      tag_242\n        /* \"#utility.yul\":8948:8949   */\n      0x00\n        /* \"#utility.yul\":8937:8946   */\n      dup4\n        /* \"#utility.yul\":8933:8950   */\n      add\n        /* \"#utility.yul\":8924:8930   */\n      dup6\n        /* \"#utility.yul\":8880:8951   */\n      tag_128\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8961:9033   */\n      tag_243\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup4\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9005:9011   */\n      dup5\n        /* \"#utility.yul\":8961:9033   */\n      tag_114\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8708:9040   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9046:9136   */\n    tag_133:\n        /* \"#utility.yul\":9080:9087   */\n      0x00\n        /* \"#utility.yul\":9123:9128   */\n      dup2\n        /* \"#utility.yul\":9116:9129   */\n      iszero\n        /* \"#utility.yul\":9109:9130   */\n      iszero\n        /* \"#utility.yul\":9098:9130   */\n      swap1\n      pop\n        /* \"#utility.yul\":9046:9136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9142:9258   */\n    tag_134:\n        /* \"#utility.yul\":9212:9233   */\n      tag_246\n        /* \"#utility.yul\":9227:9232   */\n      dup2\n        /* \"#utility.yul\":9212:9233   */\n      tag_133\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9205:9210   */\n      dup2\n        /* \"#utility.yul\":9202:9234   */\n      eq\n        /* \"#utility.yul\":9192:9252   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":9248:9249   */\n      0x00\n        /* \"#utility.yul\":9245:9246   */\n      dup1\n        /* \"#utility.yul\":9238:9250   */\n      revert\n        /* \"#utility.yul\":9192:9252   */\n    tag_247:\n        /* \"#utility.yul\":9142:9258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9264:9401   */\n    tag_135:\n        /* \"#utility.yul\":9318:9323   */\n      0x00\n        /* \"#utility.yul\":9349:9355   */\n      dup2\n        /* \"#utility.yul\":9343:9356   */\n      mload\n        /* \"#utility.yul\":9334:9356   */\n      swap1\n      pop\n        /* \"#utility.yul\":9365:9395   */\n      tag_249\n        /* \"#utility.yul\":9389:9394   */\n      dup2\n        /* \"#utility.yul\":9365:9395   */\n      tag_134\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":9264:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9752   */\n    tag_94:\n        /* \"#utility.yul\":9474:9480   */\n      0x00\n        /* \"#utility.yul\":9523:9525   */\n      0x20\n        /* \"#utility.yul\":9511:9520   */\n      dup3\n        /* \"#utility.yul\":9502:9509   */\n      dup5\n        /* \"#utility.yul\":9498:9521   */\n      sub\n        /* \"#utility.yul\":9494:9526   */\n      slt\n        /* \"#utility.yul\":9491:9610   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":9529:9608   */\n      tag_252\n      tag_107\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9491:9610   */\n    tag_251:\n        /* \"#utility.yul\":9649:9650   */\n      0x00\n        /* \"#utility.yul\":9674:9735   */\n      tag_253\n        /* \"#utility.yul\":9727:9734   */\n      dup5\n        /* \"#utility.yul\":9718:9724   */\n      dup3\n        /* \"#utility.yul\":9707:9716   */\n      dup6\n        /* \"#utility.yul\":9703:9725   */\n      add\n        /* \"#utility.yul\":9674:9735   */\n      tag_135\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9664:9735   */\n      swap2\n      pop\n        /* \"#utility.yul\":9620:9745   */\n      pop\n        /* \"#utility.yul\":9407:9752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9758:9930   */\n    tag_136:\n        /* \"#utility.yul\":9898:9922   */\n      0x526577617264207472616e73666572206661696c656400000000000000000000\n        /* \"#utility.yul\":9894:9895   */\n      0x00\n        /* \"#utility.yul\":9886:9892   */\n      dup3\n        /* \"#utility.yul\":9882:9896   */\n      add\n        /* \"#utility.yul\":9875:9923   */\n      mstore\n        /* \"#utility.yul\":9758:9930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9936:10302   */\n    tag_137:\n        /* \"#utility.yul\":10078:10081   */\n      0x00\n        /* \"#utility.yul\":10099:10166   */\n      tag_256\n        /* \"#utility.yul\":10163:10165   */\n      0x16\n        /* \"#utility.yul\":10158:10161   */\n      dup4\n        /* \"#utility.yul\":10099:10166   */\n      tag_125\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":10092:10166   */\n      swap2\n      pop\n        /* \"#utility.yul\":10175:10268   */\n      tag_257\n        /* \"#utility.yul\":10264:10267   */\n      dup3\n        /* \"#utility.yul\":10175:10268   */\n      tag_136\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10293:10295   */\n      0x20\n        /* \"#utility.yul\":10288:10291   */\n      dup3\n        /* \"#utility.yul\":10284:10296   */\n      add\n        /* \"#utility.yul\":10277:10296   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:10302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10308:10727   */\n    tag_97:\n        /* \"#utility.yul\":10474:10478   */\n      0x00\n        /* \"#utility.yul\":10512:10514   */\n      0x20\n        /* \"#utility.yul\":10501:10510   */\n      dup3\n        /* \"#utility.yul\":10497:10515   */\n      add\n        /* \"#utility.yul\":10489:10515   */\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10570   */\n      dup2\n        /* \"#utility.yul\":10555:10559   */\n      dup2\n        /* \"#utility.yul\":10551:10571   */\n      sub\n        /* \"#utility.yul\":10547:10548   */\n      0x00\n        /* \"#utility.yul\":10536:10545   */\n      dup4\n        /* \"#utility.yul\":10532:10549   */\n      add\n        /* \"#utility.yul\":10525:10572   */\n      mstore\n        /* \"#utility.yul\":10589:10720   */\n      tag_259\n        /* \"#utility.yul\":10715:10719   */\n      dup2\n        /* \"#utility.yul\":10589:10720   */\n      tag_137\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10581:10720   */\n      swap1\n      pop\n        /* \"#utility.yul\":10308:10727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10733:11065   */\n    tag_99:\n        /* \"#utility.yul\":10854:10858   */\n      0x00\n        /* \"#utility.yul\":10892:10894   */\n      0x40\n        /* \"#utility.yul\":10881:10890   */\n      dup3\n        /* \"#utility.yul\":10877:10895   */\n      add\n        /* \"#utility.yul\":10869:10895   */\n      swap1\n      pop\n        /* \"#utility.yul\":10905:10976   */\n      tag_261\n        /* \"#utility.yul\":10973:10974   */\n      0x00\n        /* \"#utility.yul\":10962:10971   */\n      dup4\n        /* \"#utility.yul\":10958:10975   */\n      add\n        /* \"#utility.yul\":10949:10955   */\n      dup6\n        /* \"#utility.yul\":10905:10976   */\n      tag_114\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10986:11058   */\n      tag_262\n        /* \"#utility.yul\":11054:11056   */\n      0x20\n        /* \"#utility.yul\":11043:11052   */\n      dup4\n        /* \"#utility.yul\":11039:11057   */\n      add\n        /* \"#utility.yul\":11030:11036   */\n      dup5\n        /* \"#utility.yul\":10986:11058   */\n      tag_114\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10733:11065   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11071:11252   */\n    tag_138:\n        /* \"#utility.yul\":11211:11244   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11207:11208   */\n      0x00\n        /* \"#utility.yul\":11199:11205   */\n      dup3\n        /* \"#utility.yul\":11195:11209   */\n      add\n        /* \"#utility.yul\":11188:11245   */\n      mstore\n        /* \"#utility.yul\":11071:11252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11258:11624   */\n    tag_139:\n        /* \"#utility.yul\":11400:11403   */\n      0x00\n        /* \"#utility.yul\":11421:11488   */\n      tag_265\n        /* \"#utility.yul\":11485:11487   */\n      0x1f\n        /* \"#utility.yul\":11480:11483   */\n      dup4\n        /* \"#utility.yul\":11421:11488   */\n      tag_125\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11414:11488   */\n      swap2\n      pop\n        /* \"#utility.yul\":11497:11590   */\n      tag_266\n        /* \"#utility.yul\":11586:11589   */\n      dup3\n        /* \"#utility.yul\":11497:11590   */\n      tag_138\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":11615:11617   */\n      0x20\n        /* \"#utility.yul\":11610:11613   */\n      dup3\n        /* \"#utility.yul\":11606:11618   */\n      add\n        /* \"#utility.yul\":11599:11618   */\n      swap1\n      pop\n        /* \"#utility.yul\":11258:11624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11630:12049   */\n    tag_104:\n        /* \"#utility.yul\":11796:11800   */\n      0x00\n        /* \"#utility.yul\":11834:11836   */\n      0x20\n        /* \"#utility.yul\":11823:11832   */\n      dup3\n        /* \"#utility.yul\":11819:11837   */\n      add\n        /* \"#utility.yul\":11811:11837   */\n      swap1\n      pop\n        /* \"#utility.yul\":11883:11892   */\n      dup2\n        /* \"#utility.yul\":11877:11881   */\n      dup2\n        /* \"#utility.yul\":11873:11893   */\n      sub\n        /* \"#utility.yul\":11869:11870   */\n      0x00\n        /* \"#utility.yul\":11858:11867   */\n      dup4\n        /* \"#utility.yul\":11854:11871   */\n      add\n        /* \"#utility.yul\":11847:11894   */\n      mstore\n        /* \"#utility.yul\":11911:12042   */\n      tag_268\n        /* \"#utility.yul\":12037:12041   */\n      dup2\n        /* \"#utility.yul\":11911:12042   */\n      tag_139\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":11903:12042   */\n      swap1\n      pop\n        /* \"#utility.yul\":11630:12049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220db00864506980d08a1b1afc22b9b2a93a81fe783fa83cdd2800437285fe95d3e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:5",
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "939:413:5",
													"nodeType": "YulBlock",
													"src": "939:413:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:5",
																"nodeType": "YulBlock",
																"src": "985:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:5"
																			},
																			"nativeSrc": "987:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:5"
																		},
																		"nativeSrc": "987:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:5"
																		},
																		"nativeSrc": "956:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:5",
																		"nodeType": "YulLiteral",
																		"src": "981:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																},
																"nativeSrc": "952:32:5",
																"nodeType": "YulFunctionCall",
																"src": "952:32:5"
															},
															"nativeSrc": "949:119:5",
															"nodeType": "YulIf",
															"src": "949:119:5"
														},
														{
															"nativeSrc": "1078:128:5",
															"nodeType": "YulBlock",
															"src": "1078:128:5",
															"statements": [
																{
																	"nativeSrc": "1093:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:5"
																				},
																				"nativeSrc": "1164:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:5"
																		},
																		"nativeSrc": "1132:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:5",
															"nodeType": "YulBlock",
															"src": "1216:129:5",
															"statements": [
																{
																	"nativeSrc": "1231:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:5"
																				},
																				"nativeSrc": "1303:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:5"
																		},
																		"nativeSrc": "1271:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:5",
														"nodeType": "YulTypedName",
														"src": "901:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:5",
														"nodeType": "YulTypedName",
														"src": "912:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:5",
														"nodeType": "YulTypedName",
														"src": "924:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:5",
														"nodeType": "YulTypedName",
														"src": "932:6:5",
														"type": ""
													}
												],
												"src": "845:507:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526032600355348015610014575f80fd5b50604051610fca380380610fca83398181016040528101906100369190610122565b60015f819055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610160565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100f1826100c8565b9050919050565b610101816100e7565b811461010b575f80fd5b50565b5f8151905061011c816100f8565b92915050565b5f8060408385031215610138576101376100c4565b5b5f6101458582860161010e565b92505060206101568582860161010e565b9150509250929050565b610e5d8061016d5f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063d56d229d11610059578063d56d229d14610114578063d82e396214610132578063e0a747fe14610162578063fc0c546a1461016c57610086565b806316934fc41461008a5780636eb604e0146100bc5780637b0a47ee146100d85780637efad8e0146100f6575b5f80fd5b6100a4600480360381019061009f9190610882565b61018a565b6040516100b3939291906108c5565b60405180910390f35b6100d660048036038101906100d19190610924565b6101b0565b005b6100e0610421565b6040516100ed919061094f565b60405180910390f35b6100fe610427565b60405161010b919061094f565b60405180910390f35b61011c61042d565b60405161012991906109c3565b60405180910390f35b61014c60048036038101906101479190610882565b610452565b604051610159919061094f565b60405180910390f35b61016a610514565b005b6101746107a9565b60405161018191906109fc565b60405180910390f35b6004602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6101b86107ce565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610229919061094f565b602060405180830381865afa158015610244573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102689190610a29565b73ffffffffffffffffffffffffffffffffffffffff16146102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610aae565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161031c93929190610adb565b5f604051808303815f87803b158015610333575f80fd5b505af1158015610345573d5f803e3d5ffd5b505050505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154146103b65761039c33610452565b816002015f8282546103ae9190610b3d565b925050819055505b81815f01819055504281600101819055503373ffffffffffffffffffffffffffffffffffffffff167f0cda5cf38f6592672c7b4a22ff3d50874d1913629bd5ffedc27b7b40503d60fd8360405161040d919061094f565b60405180910390a25061041e61081b565b50565b60035481565b61271081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f0151036104ce575f91505061050f565b5f8160200151426104df9190610b70565b9050620151806127106104f29190610ba3565b816003546105009190610ba3565b61050a9190610c11565b925050505b919050565b61051c6107ce565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154036105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c8b565b60405180910390fd5b5f81600201546105b033610452565b6105ba9190610b3d565b90505f825f015490505f835f01819055505f83600101819055505f836002018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161063b93929190610adb565b5f604051808303815f87803b158015610652575f80fd5b505af1158015610664573d5f803e3d5ffd5b505050505f82111561074c5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016106cc929190610ca9565b6020604051808303815f875af11580156106e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070c9190610d05565b61074b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074290610d7a565b60405180910390fd5b5b3373ffffffffffffffffffffffffffffffffffffffff167fc486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b8284604051610794929190610d98565b60405180910390a25050506107a761081b565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f5403610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990610e09565b60405180910390fd5b60025f81905550565b60015f81905550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61085182610828565b9050919050565b61086181610847565b811461086b575f80fd5b50565b5f8135905061087c81610858565b92915050565b5f6020828403121561089757610896610824565b5b5f6108a48482850161086e565b91505092915050565b5f819050919050565b6108bf816108ad565b82525050565b5f6060820190506108d85f8301866108b6565b6108e560208301856108b6565b6108f260408301846108b6565b949350505050565b610903816108ad565b811461090d575f80fd5b50565b5f8135905061091e816108fa565b92915050565b5f6020828403121561093957610938610824565b5b5f61094684828501610910565b91505092915050565b5f6020820190506109625f8301846108b6565b92915050565b5f819050919050565b5f61098b61098661098184610828565b610968565b610828565b9050919050565b5f61099c82610971565b9050919050565b5f6109ad82610992565b9050919050565b6109bd816109a3565b82525050565b5f6020820190506109d65f8301846109b4565b92915050565b5f6109e682610992565b9050919050565b6109f6816109dc565b82525050565b5f602082019050610a0f5f8301846109ed565b92915050565b5f81519050610a2381610858565b92915050565b5f60208284031215610a3e57610a3d610824565b5b5f610a4b84828501610a15565b91505092915050565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610a98600983610a54565b9150610aa382610a64565b602082019050919050565b5f6020820190508181035f830152610ac581610a8c565b9050919050565b610ad581610847565b82525050565b5f606082019050610aee5f830186610acc565b610afb6020830185610acc565b610b0860408301846108b6565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b47826108ad565b9150610b52836108ad565b9250828201905080821115610b6a57610b69610b10565b5b92915050565b5f610b7a826108ad565b9150610b85836108ad565b9250828203905081811115610b9d57610b9c610b10565b5b92915050565b5f610bad826108ad565b9150610bb8836108ad565b9250828202610bc6816108ad565b91508282048414831517610bdd57610bdc610b10565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c1b826108ad565b9150610c26836108ad565b925082610c3657610c35610be4565b5b828204905092915050565b7f4e6f204e4654207374616b6564000000000000000000000000000000000000005f82015250565b5f610c75600d83610a54565b9150610c8082610c41565b602082019050919050565b5f6020820190508181035f830152610ca281610c69565b9050919050565b5f604082019050610cbc5f830185610acc565b610cc960208301846108b6565b9392505050565b5f8115159050919050565b610ce481610cd0565b8114610cee575f80fd5b50565b5f81519050610cff81610cdb565b92915050565b5f60208284031215610d1a57610d19610824565b5b5f610d2784828501610cf1565b91505092915050565b7f526577617264207472616e73666572206661696c6564000000000000000000005f82015250565b5f610d64601683610a54565b9150610d6f82610d30565b602082019050919050565b5f6020820190508181035f830152610d9181610d58565b9050919050565b5f604082019050610dab5f8301856108b6565b610db860208301846108b6565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610df3601f83610a54565b9150610dfe82610dbf565b602082019050919050565b5f6020820190508181035f830152610e2081610de7565b905091905056fea2646970667358221220db00864506980d08a1b1afc22b9b2a93a81fe783fa83cdd2800437285fe95d3e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFCA CODESIZE SUB DUP1 PUSH2 0xFCA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x160 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x10B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C DUP2 PUSH2 0xF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0xC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x145 DUP6 DUP3 DUP7 ADD PUSH2 0x10E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156 DUP6 DUP3 DUP7 ADD PUSH2 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5D DUP1 PUSH2 0x16D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD56D229D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE0A747FE EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x16C JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x6EB604E0 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x7EFAD8E0 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x174 PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x7CE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD EQ PUSH2 0x3B6 JUMPI PUSH2 0x39C CALLER PUSH2 0x452 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCDA5CF38F6592672C7B4A22FF3D50874D1913629BD5FFEDC27B7B40503D60FD DUP4 PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x41E PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SUB PUSH2 0x4CE JUMPI PUSH0 SWAP2 POP POP PUSH2 0x50F JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 PUSH2 0x2710 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST DUP2 PUSH1 0x3 SLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x50A SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C PUSH2 0x7CE JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x5B0 CALLER PUSH2 0x452 JUMP JUMPDEST PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP3 GT ISZERO PUSH2 0x74C JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70C SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP1 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC486B9458A8637650D84D262414833A5A457BC91AE86B7DA110386C8C3FA255B DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x794 SWAP3 SWAP2 SWAP1 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x7A7 PUSH2 0x81B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x851 DUP3 PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x861 DUP2 PUSH2 0x847 JUMP JUMPDEST DUP2 EQ PUSH2 0x86B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87C DUP2 PUSH2 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x897 JUMPI PUSH2 0x896 PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8A4 DUP5 DUP3 DUP6 ADD PUSH2 0x86E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BF DUP2 PUSH2 0x8AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8D8 PUSH0 DUP4 ADD DUP7 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8E5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8F2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x8AD JUMP JUMPDEST DUP2 EQ PUSH2 0x90D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x91E DUP2 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x939 JUMPI PUSH2 0x938 PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x946 DUP5 DUP3 DUP6 ADD PUSH2 0x910 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x962 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98B PUSH2 0x986 PUSH2 0x981 DUP5 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x99C DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AD DUP3 PUSH2 0x992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BD DUP2 PUSH2 0x9A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9E6 DUP3 PUSH2 0x992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x9DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0F PUSH0 DUP4 ADD DUP5 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA23 DUP2 PUSH2 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4B DUP5 DUP3 DUP6 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 PUSH1 0x9 DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA3 DUP3 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAC5 DUP2 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD5 DUP2 PUSH2 0x847 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAEE PUSH0 DUP4 ADD DUP7 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xAFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xB08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB47 DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xB52 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xB10 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7A DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xB85 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0xB10 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAD DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xBB8 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBC6 DUP2 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBDD JUMPI PUSH2 0xBDC PUSH2 0xB10 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC1B DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC36 JUMPI PUSH2 0xC35 PUSH2 0xBE4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204E4654207374616B656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC75 PUSH1 0xD DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xC80 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA2 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH0 DUP4 ADD DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xCC9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xCD0 JUMP JUMPDEST DUP2 EQ PUSH2 0xCEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCFF DUP2 PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD27 DUP5 DUP3 DUP6 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526577617264207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD64 PUSH1 0x16 DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP3 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD91 DUP2 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDAB PUSH0 DUP4 ADD DUP6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0xDB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDF3 PUSH1 0x1F DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xDFE DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE20 DUP2 PUSH2 0xDE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB STOP DUP7 GASLIMIT MOD SWAP9 0xD ADDMOD LOG1 0xB1 0xAF 0xC2 0x2B SWAP12 0x2A SWAP4 0xA8 0x1F 0xE7 DUP4 STATICCALL DUP4 0xCD 0xD2 DUP1 DIV CALLDATACOPY 0x28 PUSH0 0xE9 TSTORE RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "238:2266:4:-:0;;;374:2;346:30;;761:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;843:12:4;821:11;;:35;;;;;;;;;;;;;;;;;;881:6;866:5;;:22;;;;;;;;;;;;;;;;;;761:134;;238:2266;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;238:2266:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@RATE_DENOMINATOR_290": {
									"entryPoint": 1063,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 2075,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 1998,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateReward_538": {
									"entryPoint": 1106,
									"id": 538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nftContract_281": {
									"entryPoint": 1069,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_287": {
									"entryPoint": 1057,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeNFT_409": {
									"entryPoint": 432,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_302": {
									"entryPoint": 394,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_284": {
									"entryPoint": 1961,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstakeNFT_498": {
									"entryPoint": 1300,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$259_to_t_address_fromStack": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$259__to_t_address__fromStack_reversed": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$259_to_t_address": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12052:5",
										"nodeType": "YulBlock",
										"src": "0:12052:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "907:263:5",
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:5",
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nativeSrc": "955:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nativeSrc": "955:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nativeSrc": "924:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nativeSrc": "920:32:5",
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nativeSrc": "917:119:5",
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nativeSrc": "1046:117:5",
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nativeSrc": "1061:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nativeSrc": "1100:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:5",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:5",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nativeSrc": "1221:32:5",
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nativeSrc": "1231:16:5",
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:5",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:5",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:5",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1537:288:5",
													"nodeType": "YulBlock",
													"src": "1537:288:5",
													"statements": [
														{
															"nativeSrc": "1547:26:5",
															"nodeType": "YulAssignment",
															"src": "1547:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:5"
																},
																"nativeSrc": "1555:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:5"
																		},
																		"nativeSrc": "1636:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:5"
																},
																"nativeSrc": "1583:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:5"
															},
															"nativeSrc": "1583:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1708:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1721:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1732:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1732:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1717:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:5"
																		},
																		"nativeSrc": "1717:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1664:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1664:43:5"
																},
																"nativeSrc": "1664:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1664:72:5"
															},
															"nativeSrc": "1664:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1664:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1790:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1803:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1814:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1799:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:5"
																		},
																		"nativeSrc": "1799:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1746:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1746:43:5"
																},
																"nativeSrc": "1746:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1746:72:5"
															},
															"nativeSrc": "1746:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1746:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:5",
														"nodeType": "YulTypedName",
														"src": "1493:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1505:6:5",
														"nodeType": "YulTypedName",
														"src": "1505:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1513:6:5",
														"nodeType": "YulTypedName",
														"src": "1513:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:5",
														"nodeType": "YulTypedName",
														"src": "1521:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:5",
														"nodeType": "YulTypedName",
														"src": "1532:4:5",
														"type": ""
													}
												],
												"src": "1383:442:5"
											},
											{
												"body": {
													"nativeSrc": "1874:79:5",
													"nodeType": "YulBlock",
													"src": "1874:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1931:16:5",
																"nodeType": "YulBlock",
																"src": "1931:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1940:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1943:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1933:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:5"
																			},
																			"nativeSrc": "1933:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1933:12:5"
																		},
																		"nativeSrc": "1933:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1933:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1897:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1922:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1922:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1904:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1904:17:5"
																				},
																				"nativeSrc": "1904:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1894:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:5"
																		},
																		"nativeSrc": "1894:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1887:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:5"
																},
																"nativeSrc": "1887:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1887:43:5"
															},
															"nativeSrc": "1884:63:5",
															"nodeType": "YulIf",
															"src": "1884:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1831:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1867:5:5",
														"nodeType": "YulTypedName",
														"src": "1867:5:5",
														"type": ""
													}
												],
												"src": "1831:122:5"
											},
											{
												"body": {
													"nativeSrc": "2011:87:5",
													"nodeType": "YulBlock",
													"src": "2011:87:5",
													"statements": [
														{
															"nativeSrc": "2021:29:5",
															"nodeType": "YulAssignment",
															"src": "2021:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2043:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2043:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2030:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2030:12:5"
																},
																"nativeSrc": "2030:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2030:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2021:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2086:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2086:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2059:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2059:26:5"
																},
																"nativeSrc": "2059:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2059:33:5"
															},
															"nativeSrc": "2059:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2059:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1959:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1989:6:5",
														"nodeType": "YulTypedName",
														"src": "1989:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1997:3:5",
														"nodeType": "YulTypedName",
														"src": "1997:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2005:5:5",
														"nodeType": "YulTypedName",
														"src": "2005:5:5",
														"type": ""
													}
												],
												"src": "1959:139:5"
											},
											{
												"body": {
													"nativeSrc": "2170:263:5",
													"nodeType": "YulBlock",
													"src": "2170:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2216:83:5",
																"nodeType": "YulBlock",
																"src": "2216:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2218:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2218:77:5"
																			},
																			"nativeSrc": "2218:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:79:5"
																		},
																		"nativeSrc": "2218:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2218:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2187:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:5"
																		},
																		"nativeSrc": "2187:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2187:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2183:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:5"
																},
																"nativeSrc": "2183:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2183:32:5"
															},
															"nativeSrc": "2180:119:5",
															"nodeType": "YulIf",
															"src": "2180:119:5"
														},
														{
															"nativeSrc": "2309:117:5",
															"nodeType": "YulBlock",
															"src": "2309:117:5",
															"statements": [
																{
																	"nativeSrc": "2324:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2324:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2338:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2328:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2328:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2353:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2353:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2388:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2399:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2399:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2384:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:5"
																				},
																				"nativeSrc": "2384:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2408:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2363:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2363:20:5"
																		},
																		"nativeSrc": "2363:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2353:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2104:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2140:9:5",
														"nodeType": "YulTypedName",
														"src": "2140:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2151:7:5",
														"nodeType": "YulTypedName",
														"src": "2151:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2163:6:5",
														"nodeType": "YulTypedName",
														"src": "2163:6:5",
														"type": ""
													}
												],
												"src": "2104:329:5"
											},
											{
												"body": {
													"nativeSrc": "2537:124:5",
													"nodeType": "YulBlock",
													"src": "2537:124:5",
													"statements": [
														{
															"nativeSrc": "2547:26:5",
															"nodeType": "YulAssignment",
															"src": "2547:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2559:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2570:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2555:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:5"
																},
																"nativeSrc": "2555:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2555:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2547:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2547:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2627:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2640:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2640:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2651:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2651:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2636:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:5"
																		},
																		"nativeSrc": "2636:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2583:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2583:43:5"
																},
																"nativeSrc": "2583:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2583:71:5"
															},
															"nativeSrc": "2583:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2583:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2439:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2509:9:5",
														"nodeType": "YulTypedName",
														"src": "2509:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2521:6:5",
														"nodeType": "YulTypedName",
														"src": "2521:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2532:4:5",
														"nodeType": "YulTypedName",
														"src": "2532:4:5",
														"type": ""
													}
												],
												"src": "2439:222:5"
											},
											{
												"body": {
													"nativeSrc": "2699:28:5",
													"nodeType": "YulBlock",
													"src": "2699:28:5",
													"statements": [
														{
															"nativeSrc": "2709:12:5",
															"nodeType": "YulAssignment",
															"src": "2709:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2716:5:5",
																"nodeType": "YulIdentifier",
																"src": "2716:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2667:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:5",
														"nodeType": "YulTypedName",
														"src": "2685:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2695:3:5",
														"nodeType": "YulTypedName",
														"src": "2695:3:5",
														"type": ""
													}
												],
												"src": "2667:60:5"
											},
											{
												"body": {
													"nativeSrc": "2793:82:5",
													"nodeType": "YulBlock",
													"src": "2793:82:5",
													"statements": [
														{
															"nativeSrc": "2803:66:5",
															"nodeType": "YulAssignment",
															"src": "2803:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2861:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2861:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2843:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2843:17:5"
																				},
																				"nativeSrc": "2843:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2843:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2834:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2834:8:5"
																		},
																		"nativeSrc": "2834:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2834:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2816:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2816:17:5"
																},
																"nativeSrc": "2816:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2816:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2803:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2803:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2733:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2773:5:5",
														"nodeType": "YulTypedName",
														"src": "2773:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2783:9:5",
														"nodeType": "YulTypedName",
														"src": "2783:9:5",
														"type": ""
													}
												],
												"src": "2733:142:5"
											},
											{
												"body": {
													"nativeSrc": "2941:66:5",
													"nodeType": "YulBlock",
													"src": "2941:66:5",
													"statements": [
														{
															"nativeSrc": "2951:50:5",
															"nodeType": "YulAssignment",
															"src": "2951:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2995:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2995:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2964:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2964:30:5"
																},
																"nativeSrc": "2964:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2964:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2951:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2951:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2881:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2921:5:5",
														"nodeType": "YulTypedName",
														"src": "2921:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2931:9:5",
														"nodeType": "YulTypedName",
														"src": "2931:9:5",
														"type": ""
													}
												],
												"src": "2881:126:5"
											},
											{
												"body": {
													"nativeSrc": "3088:66:5",
													"nodeType": "YulBlock",
													"src": "3088:66:5",
													"statements": [
														{
															"nativeSrc": "3098:50:5",
															"nodeType": "YulAssignment",
															"src": "3098:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3142:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3142:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3111:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3111:30:5"
																},
																"nativeSrc": "3111:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3111:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3098:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3098:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$259_to_t_address",
												"nativeSrc": "3013:141:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3068:5:5",
														"nodeType": "YulTypedName",
														"src": "3068:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3078:9:5",
														"nodeType": "YulTypedName",
														"src": "3078:9:5",
														"type": ""
													}
												],
												"src": "3013:141:5"
											},
											{
												"body": {
													"nativeSrc": "3240:81:5",
													"nodeType": "YulBlock",
													"src": "3240:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3257:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3257:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3308:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3308:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$259_to_t_address",
																			"nativeSrc": "3262:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "3262:45:5"
																		},
																		"nativeSrc": "3262:52:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3262:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3250:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:5"
																},
																"nativeSrc": "3250:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3250:65:5"
															},
															"nativeSrc": "3250:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3250:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$259_to_t_address_fromStack",
												"nativeSrc": "3160:161:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3228:5:5",
														"nodeType": "YulTypedName",
														"src": "3228:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3235:3:5",
														"nodeType": "YulTypedName",
														"src": "3235:3:5",
														"type": ""
													}
												],
												"src": "3160:161:5"
											},
											{
												"body": {
													"nativeSrc": "3440:139:5",
													"nodeType": "YulBlock",
													"src": "3440:139:5",
													"statements": [
														{
															"nativeSrc": "3450:26:5",
															"nodeType": "YulAssignment",
															"src": "3450:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3462:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3462:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3473:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3473:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3458:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:5"
																},
																"nativeSrc": "3458:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3458:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3450:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3450:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3545:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3545:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3558:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3558:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3569:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3569:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3554:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3554:3:5"
																		},
																		"nativeSrc": "3554:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3554:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$259_to_t_address_fromStack",
																	"nativeSrc": "3486:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3486:58:5"
																},
																"nativeSrc": "3486:86:5",
																"nodeType": "YulFunctionCall",
																"src": "3486:86:5"
															},
															"nativeSrc": "3486:86:5",
															"nodeType": "YulExpressionStatement",
															"src": "3486:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$259__to_t_address__fromStack_reversed",
												"nativeSrc": "3327:252:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3412:9:5",
														"nodeType": "YulTypedName",
														"src": "3412:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3424:6:5",
														"nodeType": "YulTypedName",
														"src": "3424:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3435:4:5",
														"nodeType": "YulTypedName",
														"src": "3435:4:5",
														"type": ""
													}
												],
												"src": "3327:252:5"
											},
											{
												"body": {
													"nativeSrc": "3659:66:5",
													"nodeType": "YulBlock",
													"src": "3659:66:5",
													"statements": [
														{
															"nativeSrc": "3669:50:5",
															"nodeType": "YulAssignment",
															"src": "3669:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3713:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3713:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3682:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3682:30:5"
																},
																"nativeSrc": "3682:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3682:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3669:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3669:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "3585:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3639:5:5",
														"nodeType": "YulTypedName",
														"src": "3639:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3649:9:5",
														"nodeType": "YulTypedName",
														"src": "3649:9:5",
														"type": ""
													}
												],
												"src": "3585:140:5"
											},
											{
												"body": {
													"nativeSrc": "3810:80:5",
													"nodeType": "YulBlock",
													"src": "3810:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3827:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3827:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3877:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3877:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "3832:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "3832:44:5"
																		},
																		"nativeSrc": "3832:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3832:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3820:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:5"
																},
																"nativeSrc": "3820:64:5",
																"nodeType": "YulFunctionCall",
																"src": "3820:64:5"
															},
															"nativeSrc": "3820:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "3820:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "3731:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3798:5:5",
														"nodeType": "YulTypedName",
														"src": "3798:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3805:3:5",
														"nodeType": "YulTypedName",
														"src": "3805:3:5",
														"type": ""
													}
												],
												"src": "3731:159:5"
											},
											{
												"body": {
													"nativeSrc": "4008:138:5",
													"nodeType": "YulBlock",
													"src": "4008:138:5",
													"statements": [
														{
															"nativeSrc": "4018:26:5",
															"nodeType": "YulAssignment",
															"src": "4018:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4030:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4041:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4041:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4026:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4026:3:5"
																},
																"nativeSrc": "4026:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4026:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4018:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4018:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4112:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4112:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4125:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4136:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4136:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4121:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:5"
																		},
																		"nativeSrc": "4121:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4121:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "4054:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "4054:57:5"
																},
																"nativeSrc": "4054:85:5",
																"nodeType": "YulFunctionCall",
																"src": "4054:85:5"
															},
															"nativeSrc": "4054:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "4054:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "3896:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3980:9:5",
														"nodeType": "YulTypedName",
														"src": "3980:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3992:6:5",
														"nodeType": "YulTypedName",
														"src": "3992:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4003:4:5",
														"nodeType": "YulTypedName",
														"src": "4003:4:5",
														"type": ""
													}
												],
												"src": "3896:250:5"
											},
											{
												"body": {
													"nativeSrc": "4215:80:5",
													"nodeType": "YulBlock",
													"src": "4215:80:5",
													"statements": [
														{
															"nativeSrc": "4225:22:5",
															"nodeType": "YulAssignment",
															"src": "4225:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4240:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4240:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4234:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4234:5:5"
																},
																"nativeSrc": "4234:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4234:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4225:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4225:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4283:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4283:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4256:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4256:26:5"
																},
																"nativeSrc": "4256:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4256:33:5"
															},
															"nativeSrc": "4256:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4256:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "4152:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4193:6:5",
														"nodeType": "YulTypedName",
														"src": "4193:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4201:3:5",
														"nodeType": "YulTypedName",
														"src": "4201:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4209:5:5",
														"nodeType": "YulTypedName",
														"src": "4209:5:5",
														"type": ""
													}
												],
												"src": "4152:143:5"
											},
											{
												"body": {
													"nativeSrc": "4378:274:5",
													"nodeType": "YulBlock",
													"src": "4378:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4424:83:5",
																"nodeType": "YulBlock",
																"src": "4424:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4426:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4426:77:5"
																			},
																			"nativeSrc": "4426:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4426:79:5"
																		},
																		"nativeSrc": "4426:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4426:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4399:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4399:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4395:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:5"
																		},
																		"nativeSrc": "4395:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4395:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4420:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4420:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4391:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4391:3:5"
																},
																"nativeSrc": "4391:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4391:32:5"
															},
															"nativeSrc": "4388:119:5",
															"nodeType": "YulIf",
															"src": "4388:119:5"
														},
														{
															"nativeSrc": "4517:128:5",
															"nodeType": "YulBlock",
															"src": "4517:128:5",
															"statements": [
																{
																	"nativeSrc": "4532:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4532:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4546:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4546:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4536:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4536:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4561:74:5",
																	"nodeType": "YulAssignment",
																	"src": "4561:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4607:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4607:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4618:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4618:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4603:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4603:3:5"
																				},
																				"nativeSrc": "4603:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4603:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4627:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4627:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4571:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4571:31:5"
																		},
																		"nativeSrc": "4571:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4561:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4561:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "4301:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:5",
														"nodeType": "YulTypedName",
														"src": "4348:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:5",
														"nodeType": "YulTypedName",
														"src": "4359:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:5",
														"nodeType": "YulTypedName",
														"src": "4371:6:5",
														"type": ""
													}
												],
												"src": "4301:351:5"
											},
											{
												"body": {
													"nativeSrc": "4754:73:5",
													"nodeType": "YulBlock",
													"src": "4754:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4771:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4771:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4776:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4776:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:5"
																},
																"nativeSrc": "4764:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4764:19:5"
															},
															"nativeSrc": "4764:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4764:19:5"
														},
														{
															"nativeSrc": "4792:29:5",
															"nodeType": "YulAssignment",
															"src": "4792:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4811:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4811:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4816:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4816:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4807:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4807:3:5"
																},
																"nativeSrc": "4807:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4807:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4792:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4792:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4658:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4726:3:5",
														"nodeType": "YulTypedName",
														"src": "4726:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4731:6:5",
														"nodeType": "YulTypedName",
														"src": "4731:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4742:11:5",
														"nodeType": "YulTypedName",
														"src": "4742:11:5",
														"type": ""
													}
												],
												"src": "4658:169:5"
											},
											{
												"body": {
													"nativeSrc": "4939:53:5",
													"nodeType": "YulBlock",
													"src": "4939:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4961:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4961:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4969:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4969:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4957:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4957:3:5"
																		},
																		"nativeSrc": "4957:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4957:14:5"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4973:11:5",
																		"nodeType": "YulLiteral",
																		"src": "4973:11:5",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4950:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:5"
																},
																"nativeSrc": "4950:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4950:35:5"
															},
															"nativeSrc": "4950:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4950:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nativeSrc": "4833:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4931:6:5",
														"nodeType": "YulTypedName",
														"src": "4931:6:5",
														"type": ""
													}
												],
												"src": "4833:159:5"
											},
											{
												"body": {
													"nativeSrc": "5144:219:5",
													"nodeType": "YulBlock",
													"src": "5144:219:5",
													"statements": [
														{
															"nativeSrc": "5154:73:5",
															"nodeType": "YulAssignment",
															"src": "5154:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5220:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5220:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5225:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5225:1:5",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5161:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5161:58:5"
																},
																"nativeSrc": "5161:66:5",
																"nodeType": "YulFunctionCall",
																"src": "5161:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5154:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5325:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nativeSrc": "5236:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5236:88:5"
																},
																"nativeSrc": "5236:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5236:93:5"
															},
															"nativeSrc": "5236:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5236:93:5"
														},
														{
															"nativeSrc": "5338:19:5",
															"nodeType": "YulAssignment",
															"src": "5338:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5349:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5354:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5345:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:5"
																},
																"nativeSrc": "5345:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5345:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5338:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4998:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5132:3:5",
														"nodeType": "YulTypedName",
														"src": "5132:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5140:3:5",
														"nodeType": "YulTypedName",
														"src": "5140:3:5",
														"type": ""
													}
												],
												"src": "4998:365:5"
											},
											{
												"body": {
													"nativeSrc": "5540:248:5",
													"nodeType": "YulBlock",
													"src": "5540:248:5",
													"statements": [
														{
															"nativeSrc": "5550:26:5",
															"nodeType": "YulAssignment",
															"src": "5550:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5562:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5562:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5573:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5573:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5558:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:5"
																},
																"nativeSrc": "5558:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5558:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5550:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5550:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5597:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5597:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5608:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5608:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5593:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:5"
																		},
																		"nativeSrc": "5593:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5593:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5616:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5616:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5622:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5622:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5612:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:5"
																		},
																		"nativeSrc": "5612:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:5"
																},
																"nativeSrc": "5586:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5586:47:5"
															},
															"nativeSrc": "5586:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5586:47:5"
														},
														{
															"nativeSrc": "5642:139:5",
															"nodeType": "YulAssignment",
															"src": "5642:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5776:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5776:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5650:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5650:124:5"
																},
																"nativeSrc": "5650:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5650:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5642:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5642:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5369:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5520:9:5",
														"nodeType": "YulTypedName",
														"src": "5520:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5535:4:5",
														"nodeType": "YulTypedName",
														"src": "5535:4:5",
														"type": ""
													}
												],
												"src": "5369:419:5"
											},
											{
												"body": {
													"nativeSrc": "5859:53:5",
													"nodeType": "YulBlock",
													"src": "5859:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5876:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5876:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5899:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5899:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5881:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5881:17:5"
																		},
																		"nativeSrc": "5881:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5881:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5869:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:5"
																},
																"nativeSrc": "5869:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5869:37:5"
															},
															"nativeSrc": "5869:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5869:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5794:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5847:5:5",
														"nodeType": "YulTypedName",
														"src": "5847:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5854:3:5",
														"nodeType": "YulTypedName",
														"src": "5854:3:5",
														"type": ""
													}
												],
												"src": "5794:118:5"
											},
											{
												"body": {
													"nativeSrc": "6072:288:5",
													"nodeType": "YulBlock",
													"src": "6072:288:5",
													"statements": [
														{
															"nativeSrc": "6082:26:5",
															"nodeType": "YulAssignment",
															"src": "6082:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:5"
																},
																"nativeSrc": "6090:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:5"
																		},
																		"nativeSrc": "6171:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6118:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:5"
																},
																"nativeSrc": "6118:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:5"
															},
															"nativeSrc": "6118:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6243:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6243:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6256:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6256:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6267:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6267:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:5"
																		},
																		"nativeSrc": "6252:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6199:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6199:43:5"
																},
																"nativeSrc": "6199:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6199:72:5"
															},
															"nativeSrc": "6199:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6199:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6325:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6325:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6338:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6349:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:5"
																		},
																		"nativeSrc": "6334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6334:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6281:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6281:43:5"
																},
																"nativeSrc": "6281:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6281:72:5"
															},
															"nativeSrc": "6281:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6281:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5918:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6028:9:5",
														"nodeType": "YulTypedName",
														"src": "6028:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6040:6:5",
														"nodeType": "YulTypedName",
														"src": "6040:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6048:6:5",
														"nodeType": "YulTypedName",
														"src": "6048:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:5",
														"nodeType": "YulTypedName",
														"src": "6056:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:5",
														"nodeType": "YulTypedName",
														"src": "6067:4:5",
														"type": ""
													}
												],
												"src": "5918:442:5"
											},
											{
												"body": {
													"nativeSrc": "6394:152:5",
													"nodeType": "YulBlock",
													"src": "6394:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6411:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6411:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6414:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6404:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:5"
																},
																"nativeSrc": "6404:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6404:88:5"
															},
															"nativeSrc": "6404:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6404:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6508:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6508:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6511:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6511:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6501:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:5"
																},
																"nativeSrc": "6501:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6501:15:5"
															},
															"nativeSrc": "6501:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6501:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6532:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6532:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6535:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6535:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6525:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6525:6:5"
																},
																"nativeSrc": "6525:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6525:15:5"
															},
															"nativeSrc": "6525:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6525:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6366:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6366:180:5"
											},
											{
												"body": {
													"nativeSrc": "6596:147:5",
													"nodeType": "YulBlock",
													"src": "6596:147:5",
													"statements": [
														{
															"nativeSrc": "6606:25:5",
															"nodeType": "YulAssignment",
															"src": "6606:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6629:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6629:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6611:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6611:17:5"
																},
																"nativeSrc": "6611:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6611:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6606:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6606:1:5"
																}
															]
														},
														{
															"nativeSrc": "6640:25:5",
															"nodeType": "YulAssignment",
															"src": "6640:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6663:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6663:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6645:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6645:17:5"
																},
																"nativeSrc": "6645:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6645:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6640:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6640:1:5"
																}
															]
														},
														{
															"nativeSrc": "6674:16:5",
															"nodeType": "YulAssignment",
															"src": "6674:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6685:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6685:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6688:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6688:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6681:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:5"
																},
																"nativeSrc": "6681:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6681:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6674:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6714:22:5",
																"nodeType": "YulBlock",
																"src": "6714:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6716:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6716:16:5"
																			},
																			"nativeSrc": "6716:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6716:18:5"
																		},
																		"nativeSrc": "6716:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6716:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6706:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6706:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6709:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6709:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6703:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6703:2:5"
																},
																"nativeSrc": "6703:10:5",
																"nodeType": "YulFunctionCall",
																"src": "6703:10:5"
															},
															"nativeSrc": "6700:36:5",
															"nodeType": "YulIf",
															"src": "6700:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6552:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6583:1:5",
														"nodeType": "YulTypedName",
														"src": "6583:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6586:1:5",
														"nodeType": "YulTypedName",
														"src": "6586:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6592:3:5",
														"nodeType": "YulTypedName",
														"src": "6592:3:5",
														"type": ""
													}
												],
												"src": "6552:191:5"
											},
											{
												"body": {
													"nativeSrc": "6794:149:5",
													"nodeType": "YulBlock",
													"src": "6794:149:5",
													"statements": [
														{
															"nativeSrc": "6804:25:5",
															"nodeType": "YulAssignment",
															"src": "6804:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6827:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6827:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6809:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6809:17:5"
																},
																"nativeSrc": "6809:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6809:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6804:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6804:1:5"
																}
															]
														},
														{
															"nativeSrc": "6838:25:5",
															"nodeType": "YulAssignment",
															"src": "6838:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6861:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6861:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6843:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6843:17:5"
																},
																"nativeSrc": "6843:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6843:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6838:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6838:1:5"
																}
															]
														},
														{
															"nativeSrc": "6872:17:5",
															"nodeType": "YulAssignment",
															"src": "6872:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6884:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6884:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6887:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6887:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6880:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6880:3:5"
																},
																"nativeSrc": "6880:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6880:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6872:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6872:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6914:22:5",
																"nodeType": "YulBlock",
																"src": "6914:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6916:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6916:16:5"
																			},
																			"nativeSrc": "6916:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6916:18:5"
																		},
																		"nativeSrc": "6916:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6916:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6905:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6905:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6911:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6902:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6902:2:5"
																},
																"nativeSrc": "6902:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6902:11:5"
															},
															"nativeSrc": "6899:37:5",
															"nodeType": "YulIf",
															"src": "6899:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6749:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6780:1:5",
														"nodeType": "YulTypedName",
														"src": "6780:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6783:1:5",
														"nodeType": "YulTypedName",
														"src": "6783:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6789:4:5",
														"nodeType": "YulTypedName",
														"src": "6789:4:5",
														"type": ""
													}
												],
												"src": "6749:194:5"
											},
											{
												"body": {
													"nativeSrc": "6997:362:5",
													"nodeType": "YulBlock",
													"src": "6997:362:5",
													"statements": [
														{
															"nativeSrc": "7007:25:5",
															"nodeType": "YulAssignment",
															"src": "7007:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7030:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7030:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7012:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7012:17:5"
																},
																"nativeSrc": "7012:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7012:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7007:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7007:1:5"
																}
															]
														},
														{
															"nativeSrc": "7041:25:5",
															"nodeType": "YulAssignment",
															"src": "7041:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7064:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7064:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7046:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7046:17:5"
																},
																"nativeSrc": "7046:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7046:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7041:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7041:1:5"
																}
															]
														},
														{
															"nativeSrc": "7075:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7075:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7098:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7098:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7101:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7101:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7094:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7094:3:5"
																},
																"nativeSrc": "7094:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7094:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7079:11:5",
																	"nodeType": "YulTypedName",
																	"src": "7079:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7112:41:5",
															"nodeType": "YulAssignment",
															"src": "7112:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7141:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "7141:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7123:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7123:17:5"
																},
																"nativeSrc": "7123:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7123:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7112:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7112:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7330:22:5",
																"nodeType": "YulBlock",
																"src": "7330:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7332:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7332:16:5"
																			},
																			"nativeSrc": "7332:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7332:18:5"
																		},
																		"nativeSrc": "7332:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7332:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7263:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "7263:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7256:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "7256:6:5"
																				},
																				"nativeSrc": "7256:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7256:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7286:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "7286:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7293:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "7293:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7302:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "7302:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7289:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7289:3:5"
																						},
																						"nativeSrc": "7289:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "7289:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7283:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "7283:2:5"
																				},
																				"nativeSrc": "7283:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7283:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7236:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7236:2:5"
																		},
																		"nativeSrc": "7236:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7236:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7216:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7216:6:5"
																},
																"nativeSrc": "7216:113:5",
																"nodeType": "YulFunctionCall",
																"src": "7216:113:5"
															},
															"nativeSrc": "7213:139:5",
															"nodeType": "YulIf",
															"src": "7213:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6949:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6980:1:5",
														"nodeType": "YulTypedName",
														"src": "6980:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6983:1:5",
														"nodeType": "YulTypedName",
														"src": "6983:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6989:7:5",
														"nodeType": "YulTypedName",
														"src": "6989:7:5",
														"type": ""
													}
												],
												"src": "6949:410:5"
											},
											{
												"body": {
													"nativeSrc": "7393:152:5",
													"nodeType": "YulBlock",
													"src": "7393:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7410:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7410:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7413:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7413:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7403:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7403:6:5"
																},
																"nativeSrc": "7403:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7403:88:5"
															},
															"nativeSrc": "7403:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7403:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7507:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7507:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7510:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7510:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7500:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7500:6:5"
																},
																"nativeSrc": "7500:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7500:15:5"
															},
															"nativeSrc": "7500:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7500:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7531:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7534:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7524:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:5"
																},
																"nativeSrc": "7524:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7524:15:5"
															},
															"nativeSrc": "7524:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7524:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7365:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7365:180:5"
											},
											{
												"body": {
													"nativeSrc": "7593:143:5",
													"nodeType": "YulBlock",
													"src": "7593:143:5",
													"statements": [
														{
															"nativeSrc": "7603:25:5",
															"nodeType": "YulAssignment",
															"src": "7603:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7626:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7626:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7608:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7608:17:5"
																},
																"nativeSrc": "7608:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7608:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7603:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7603:1:5"
																}
															]
														},
														{
															"nativeSrc": "7637:25:5",
															"nodeType": "YulAssignment",
															"src": "7637:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7660:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7660:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7642:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7642:17:5"
																},
																"nativeSrc": "7642:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7642:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7637:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7637:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7684:22:5",
																"nodeType": "YulBlock",
																"src": "7684:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7686:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7686:16:5"
																			},
																			"nativeSrc": "7686:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7686:18:5"
																		},
																		"nativeSrc": "7686:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7686:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7681:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7681:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7674:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7674:6:5"
																},
																"nativeSrc": "7674:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7674:9:5"
															},
															"nativeSrc": "7671:35:5",
															"nodeType": "YulIf",
															"src": "7671:35:5"
														},
														{
															"nativeSrc": "7716:14:5",
															"nodeType": "YulAssignment",
															"src": "7716:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7725:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7725:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7728:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7728:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7721:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7721:3:5"
																},
																"nativeSrc": "7721:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7721:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7716:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7716:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7551:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7582:1:5",
														"nodeType": "YulTypedName",
														"src": "7582:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7585:1:5",
														"nodeType": "YulTypedName",
														"src": "7585:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7591:1:5",
														"nodeType": "YulTypedName",
														"src": "7591:1:5",
														"type": ""
													}
												],
												"src": "7551:185:5"
											},
											{
												"body": {
													"nativeSrc": "7848:57:5",
													"nodeType": "YulBlock",
													"src": "7848:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7870:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7870:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7878:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7878:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7866:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7866:3:5"
																		},
																		"nativeSrc": "7866:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7866:14:5"
																	},
																	{
																		"hexValue": "4e6f204e4654207374616b6564",
																		"kind": "string",
																		"nativeSrc": "7882:15:5",
																		"nodeType": "YulLiteral",
																		"src": "7882:15:5",
																		"type": "",
																		"value": "No NFT staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7859:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:5"
																},
																"nativeSrc": "7859:39:5",
																"nodeType": "YulFunctionCall",
																"src": "7859:39:5"
															},
															"nativeSrc": "7859:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "7859:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e",
												"nativeSrc": "7742:163:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7840:6:5",
														"nodeType": "YulTypedName",
														"src": "7840:6:5",
														"type": ""
													}
												],
												"src": "7742:163:5"
											},
											{
												"body": {
													"nativeSrc": "8057:220:5",
													"nodeType": "YulBlock",
													"src": "8057:220:5",
													"statements": [
														{
															"nativeSrc": "8067:74:5",
															"nodeType": "YulAssignment",
															"src": "8067:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8133:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8133:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8138:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8138:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8074:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8074:58:5"
																},
																"nativeSrc": "8074:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8074:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8067:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8067:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8239:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8239:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e",
																	"nativeSrc": "8150:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8150:88:5"
																},
																"nativeSrc": "8150:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8150:93:5"
															},
															"nativeSrc": "8150:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8150:93:5"
														},
														{
															"nativeSrc": "8252:19:5",
															"nodeType": "YulAssignment",
															"src": "8252:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8263:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8263:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8268:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8268:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8259:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8259:3:5"
																},
																"nativeSrc": "8259:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8259:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8252:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7911:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8045:3:5",
														"nodeType": "YulTypedName",
														"src": "8045:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8053:3:5",
														"nodeType": "YulTypedName",
														"src": "8053:3:5",
														"type": ""
													}
												],
												"src": "7911:366:5"
											},
											{
												"body": {
													"nativeSrc": "8454:248:5",
													"nodeType": "YulBlock",
													"src": "8454:248:5",
													"statements": [
														{
															"nativeSrc": "8464:26:5",
															"nodeType": "YulAssignment",
															"src": "8464:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8476:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8476:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8487:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8487:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8472:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8472:3:5"
																},
																"nativeSrc": "8472:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8472:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8464:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8464:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8511:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8511:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8522:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8522:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8507:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8507:3:5"
																		},
																		"nativeSrc": "8507:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8507:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8530:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8530:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8536:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8536:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8526:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8526:3:5"
																		},
																		"nativeSrc": "8526:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8526:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8500:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8500:6:5"
																},
																"nativeSrc": "8500:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8500:47:5"
															},
															"nativeSrc": "8500:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8500:47:5"
														},
														{
															"nativeSrc": "8556:139:5",
															"nodeType": "YulAssignment",
															"src": "8556:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8690:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8690:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8564:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8564:124:5"
																},
																"nativeSrc": "8564:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8564:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8556:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8556:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8283:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8434:9:5",
														"nodeType": "YulTypedName",
														"src": "8434:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8449:4:5",
														"nodeType": "YulTypedName",
														"src": "8449:4:5",
														"type": ""
													}
												],
												"src": "8283:419:5"
											},
											{
												"body": {
													"nativeSrc": "8834:206:5",
													"nodeType": "YulBlock",
													"src": "8834:206:5",
													"statements": [
														{
															"nativeSrc": "8844:26:5",
															"nodeType": "YulAssignment",
															"src": "8844:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8856:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8856:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8867:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8867:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8852:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:3:5"
																},
																"nativeSrc": "8852:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8852:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8844:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8844:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8924:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8924:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8937:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8948:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8948:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8933:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8933:3:5"
																		},
																		"nativeSrc": "8933:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8933:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8880:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8880:43:5"
																},
																"nativeSrc": "8880:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8880:71:5"
															},
															"nativeSrc": "8880:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8880:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9005:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9005:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9018:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9018:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9029:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9029:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9014:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9014:3:5"
																		},
																		"nativeSrc": "9014:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9014:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8961:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8961:43:5"
																},
																"nativeSrc": "8961:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8961:72:5"
															},
															"nativeSrc": "8961:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8961:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8708:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8798:9:5",
														"nodeType": "YulTypedName",
														"src": "8798:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8810:6:5",
														"nodeType": "YulTypedName",
														"src": "8810:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8818:6:5",
														"nodeType": "YulTypedName",
														"src": "8818:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8829:4:5",
														"nodeType": "YulTypedName",
														"src": "8829:4:5",
														"type": ""
													}
												],
												"src": "8708:332:5"
											},
											{
												"body": {
													"nativeSrc": "9088:48:5",
													"nodeType": "YulBlock",
													"src": "9088:48:5",
													"statements": [
														{
															"nativeSrc": "9098:32:5",
															"nodeType": "YulAssignment",
															"src": "9098:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9123:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9123:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9116:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9116:6:5"
																		},
																		"nativeSrc": "9116:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9116:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9109:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:5"
																},
																"nativeSrc": "9109:21:5",
																"nodeType": "YulFunctionCall",
																"src": "9109:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9098:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9098:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "9046:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9070:5:5",
														"nodeType": "YulTypedName",
														"src": "9070:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9080:7:5",
														"nodeType": "YulTypedName",
														"src": "9080:7:5",
														"type": ""
													}
												],
												"src": "9046:90:5"
											},
											{
												"body": {
													"nativeSrc": "9182:76:5",
													"nodeType": "YulBlock",
													"src": "9182:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9236:16:5",
																"nodeType": "YulBlock",
																"src": "9236:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9245:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9245:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9248:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9248:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9238:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9238:6:5"
																			},
																			"nativeSrc": "9238:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9238:12:5"
																		},
																		"nativeSrc": "9238:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9238:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9205:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9205:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9227:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9227:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9212:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "9212:14:5"
																				},
																				"nativeSrc": "9212:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9212:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9202:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "9202:2:5"
																		},
																		"nativeSrc": "9202:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9202:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9195:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:5"
																},
																"nativeSrc": "9195:40:5",
																"nodeType": "YulFunctionCall",
																"src": "9195:40:5"
															},
															"nativeSrc": "9192:60:5",
															"nodeType": "YulIf",
															"src": "9192:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9142:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9175:5:5",
														"nodeType": "YulTypedName",
														"src": "9175:5:5",
														"type": ""
													}
												],
												"src": "9142:116:5"
											},
											{
												"body": {
													"nativeSrc": "9324:77:5",
													"nodeType": "YulBlock",
													"src": "9324:77:5",
													"statements": [
														{
															"nativeSrc": "9334:22:5",
															"nodeType": "YulAssignment",
															"src": "9334:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9349:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9349:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9343:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9343:5:5"
																},
																"nativeSrc": "9343:13:5",
																"nodeType": "YulFunctionCall",
																"src": "9343:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9334:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9334:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9389:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9389:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9365:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "9365:23:5"
																},
																"nativeSrc": "9365:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9365:30:5"
															},
															"nativeSrc": "9365:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9365:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9264:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9302:6:5",
														"nodeType": "YulTypedName",
														"src": "9302:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9310:3:5",
														"nodeType": "YulTypedName",
														"src": "9310:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9318:5:5",
														"nodeType": "YulTypedName",
														"src": "9318:5:5",
														"type": ""
													}
												],
												"src": "9264:137:5"
											},
											{
												"body": {
													"nativeSrc": "9481:271:5",
													"nodeType": "YulBlock",
													"src": "9481:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9527:83:5",
																"nodeType": "YulBlock",
																"src": "9527:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9529:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "9529:77:5"
																			},
																			"nativeSrc": "9529:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9529:79:5"
																		},
																		"nativeSrc": "9529:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9529:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9502:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9502:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9511:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9511:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9498:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:5"
																		},
																		"nativeSrc": "9498:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9523:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9523:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9494:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9494:3:5"
																},
																"nativeSrc": "9494:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9494:32:5"
															},
															"nativeSrc": "9491:119:5",
															"nodeType": "YulIf",
															"src": "9491:119:5"
														},
														{
															"nativeSrc": "9620:125:5",
															"nodeType": "YulBlock",
															"src": "9620:125:5",
															"statements": [
																{
																	"nativeSrc": "9635:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9635:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9649:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9649:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9639:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9639:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9664:71:5",
																	"nodeType": "YulAssignment",
																	"src": "9664:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9707:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9707:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9718:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9718:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9703:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9703:3:5"
																				},
																				"nativeSrc": "9703:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9703:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9727:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9727:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9674:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "9674:28:5"
																		},
																		"nativeSrc": "9674:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9664:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9664:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9407:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9451:9:5",
														"nodeType": "YulTypedName",
														"src": "9451:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9462:7:5",
														"nodeType": "YulTypedName",
														"src": "9462:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9474:6:5",
														"nodeType": "YulTypedName",
														"src": "9474:6:5",
														"type": ""
													}
												],
												"src": "9407:345:5"
											},
											{
												"body": {
													"nativeSrc": "9864:66:5",
													"nodeType": "YulBlock",
													"src": "9864:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9886:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9886:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9894:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9894:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9882:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9882:3:5"
																		},
																		"nativeSrc": "9882:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9882:14:5"
																	},
																	{
																		"hexValue": "526577617264207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9898:24:5",
																		"nodeType": "YulLiteral",
																		"src": "9898:24:5",
																		"type": "",
																		"value": "Reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9875:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9875:6:5"
																},
																"nativeSrc": "9875:48:5",
																"nodeType": "YulFunctionCall",
																"src": "9875:48:5"
															},
															"nativeSrc": "9875:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "9875:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
												"nativeSrc": "9758:172:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9856:6:5",
														"nodeType": "YulTypedName",
														"src": "9856:6:5",
														"type": ""
													}
												],
												"src": "9758:172:5"
											},
											{
												"body": {
													"nativeSrc": "10082:220:5",
													"nodeType": "YulBlock",
													"src": "10082:220:5",
													"statements": [
														{
															"nativeSrc": "10092:74:5",
															"nodeType": "YulAssignment",
															"src": "10092:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10158:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10158:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10163:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10099:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10099:58:5"
																},
																"nativeSrc": "10099:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10099:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10092:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10092:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10264:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10264:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																	"nativeSrc": "10175:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10175:88:5"
																},
																"nativeSrc": "10175:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10175:93:5"
															},
															"nativeSrc": "10175:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10175:93:5"
														},
														{
															"nativeSrc": "10277:19:5",
															"nodeType": "YulAssignment",
															"src": "10277:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10288:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10288:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10293:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10293:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10284:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10284:3:5"
																},
																"nativeSrc": "10284:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10284:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10277:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9936:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10070:3:5",
														"nodeType": "YulTypedName",
														"src": "10070:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10078:3:5",
														"nodeType": "YulTypedName",
														"src": "10078:3:5",
														"type": ""
													}
												],
												"src": "9936:366:5"
											},
											{
												"body": {
													"nativeSrc": "10479:248:5",
													"nodeType": "YulBlock",
													"src": "10479:248:5",
													"statements": [
														{
															"nativeSrc": "10489:26:5",
															"nodeType": "YulAssignment",
															"src": "10489:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10501:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10501:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10512:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10512:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10497:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10497:3:5"
																},
																"nativeSrc": "10497:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10497:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10489:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10489:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10536:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10536:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10547:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10547:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10532:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10532:3:5"
																		},
																		"nativeSrc": "10532:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10555:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10555:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10561:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10561:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10551:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10551:3:5"
																		},
																		"nativeSrc": "10551:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10551:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10525:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:5"
																},
																"nativeSrc": "10525:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10525:47:5"
															},
															"nativeSrc": "10525:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10525:47:5"
														},
														{
															"nativeSrc": "10581:139:5",
															"nodeType": "YulAssignment",
															"src": "10581:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10715:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10715:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10589:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10589:124:5"
																},
																"nativeSrc": "10589:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10589:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10581:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10581:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10308:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10459:9:5",
														"nodeType": "YulTypedName",
														"src": "10459:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10474:4:5",
														"nodeType": "YulTypedName",
														"src": "10474:4:5",
														"type": ""
													}
												],
												"src": "10308:419:5"
											},
											{
												"body": {
													"nativeSrc": "10859:206:5",
													"nodeType": "YulBlock",
													"src": "10859:206:5",
													"statements": [
														{
															"nativeSrc": "10869:26:5",
															"nodeType": "YulAssignment",
															"src": "10869:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10881:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10881:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10892:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10892:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10877:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10877:3:5"
																},
																"nativeSrc": "10877:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10877:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10869:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10869:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10949:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10949:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10962:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10962:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10973:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10973:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10958:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10958:3:5"
																		},
																		"nativeSrc": "10958:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10958:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10905:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10905:43:5"
																},
																"nativeSrc": "10905:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10905:71:5"
															},
															"nativeSrc": "10905:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10905:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11030:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11030:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11043:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11043:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11054:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11054:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11039:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11039:3:5"
																		},
																		"nativeSrc": "11039:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11039:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10986:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10986:43:5"
																},
																"nativeSrc": "10986:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10986:72:5"
															},
															"nativeSrc": "10986:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10986:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10733:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10823:9:5",
														"nodeType": "YulTypedName",
														"src": "10823:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10835:6:5",
														"nodeType": "YulTypedName",
														"src": "10835:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10843:6:5",
														"nodeType": "YulTypedName",
														"src": "10843:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10854:4:5",
														"nodeType": "YulTypedName",
														"src": "10854:4:5",
														"type": ""
													}
												],
												"src": "10733:332:5"
											},
											{
												"body": {
													"nativeSrc": "11177:75:5",
													"nodeType": "YulBlock",
													"src": "11177:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11199:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11199:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11207:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11207:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11195:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11195:3:5"
																		},
																		"nativeSrc": "11195:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11195:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11211:33:5",
																		"nodeType": "YulLiteral",
																		"src": "11211:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11188:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11188:6:5"
																},
																"nativeSrc": "11188:57:5",
																"nodeType": "YulFunctionCall",
																"src": "11188:57:5"
															},
															"nativeSrc": "11188:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "11188:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11071:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11169:6:5",
														"nodeType": "YulTypedName",
														"src": "11169:6:5",
														"type": ""
													}
												],
												"src": "11071:181:5"
											},
											{
												"body": {
													"nativeSrc": "11404:220:5",
													"nodeType": "YulBlock",
													"src": "11404:220:5",
													"statements": [
														{
															"nativeSrc": "11414:74:5",
															"nodeType": "YulAssignment",
															"src": "11414:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11480:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11480:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11485:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11485:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11421:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11421:58:5"
																},
																"nativeSrc": "11421:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11421:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11414:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11414:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11586:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11586:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11497:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11497:88:5"
																},
																"nativeSrc": "11497:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11497:93:5"
															},
															"nativeSrc": "11497:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11497:93:5"
														},
														{
															"nativeSrc": "11599:19:5",
															"nodeType": "YulAssignment",
															"src": "11599:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11610:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11610:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11615:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11606:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11606:3:5"
																},
																"nativeSrc": "11606:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11606:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11599:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11599:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11258:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11392:3:5",
														"nodeType": "YulTypedName",
														"src": "11392:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11400:3:5",
														"nodeType": "YulTypedName",
														"src": "11400:3:5",
														"type": ""
													}
												],
												"src": "11258:366:5"
											},
											{
												"body": {
													"nativeSrc": "11801:248:5",
													"nodeType": "YulBlock",
													"src": "11801:248:5",
													"statements": [
														{
															"nativeSrc": "11811:26:5",
															"nodeType": "YulAssignment",
															"src": "11811:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11823:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11823:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11834:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11834:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11819:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11819:3:5"
																},
																"nativeSrc": "11819:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11819:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11811:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11811:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11858:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11858:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11869:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11869:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11854:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11854:3:5"
																		},
																		"nativeSrc": "11854:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11854:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11877:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11877:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11883:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11883:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11873:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:5"
																		},
																		"nativeSrc": "11873:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11873:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11847:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11847:6:5"
																},
																"nativeSrc": "11847:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11847:47:5"
															},
															"nativeSrc": "11847:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11847:47:5"
														},
														{
															"nativeSrc": "11903:139:5",
															"nodeType": "YulAssignment",
															"src": "11903:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12037:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12037:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11911:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11911:124:5"
																},
																"nativeSrc": "11911:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11911:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11903:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11903:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11630:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11781:9:5",
														"nodeType": "YulTypedName",
														"src": "11781:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11796:4:5",
														"nodeType": "YulTypedName",
														"src": "11796:4:5",
														"type": ""
													}
												],
												"src": "11630:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$259_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$259_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$259_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$259__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$259_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"No NFT staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063d56d229d11610059578063d56d229d14610114578063d82e396214610132578063e0a747fe14610162578063fc0c546a1461016c57610086565b806316934fc41461008a5780636eb604e0146100bc5780637b0a47ee146100d85780637efad8e0146100f6575b5f80fd5b6100a4600480360381019061009f9190610882565b61018a565b6040516100b3939291906108c5565b60405180910390f35b6100d660048036038101906100d19190610924565b6101b0565b005b6100e0610421565b6040516100ed919061094f565b60405180910390f35b6100fe610427565b60405161010b919061094f565b60405180910390f35b61011c61042d565b60405161012991906109c3565b60405180910390f35b61014c60048036038101906101479190610882565b610452565b604051610159919061094f565b60405180910390f35b61016a610514565b005b6101746107a9565b60405161018191906109fc565b60405180910390f35b6004602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6101b86107ce565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610229919061094f565b602060405180830381865afa158015610244573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102689190610a29565b73ffffffffffffffffffffffffffffffffffffffff16146102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610aae565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161031c93929190610adb565b5f604051808303815f87803b158015610333575f80fd5b505af1158015610345573d5f803e3d5ffd5b505050505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154146103b65761039c33610452565b816002015f8282546103ae9190610b3d565b925050819055505b81815f01819055504281600101819055503373ffffffffffffffffffffffffffffffffffffffff167f0cda5cf38f6592672c7b4a22ff3d50874d1913629bd5ffedc27b7b40503d60fd8360405161040d919061094f565b60405180910390a25061041e61081b565b50565b60035481565b61271081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f0151036104ce575f91505061050f565b5f8160200151426104df9190610b70565b9050620151806127106104f29190610ba3565b816003546105009190610ba3565b61050a9190610c11565b925050505b919050565b61051c6107ce565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154036105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c8b565b60405180910390fd5b5f81600201546105b033610452565b6105ba9190610b3d565b90505f825f015490505f835f01819055505f83600101819055505f836002018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161063b93929190610adb565b5f604051808303815f87803b158015610652575f80fd5b505af1158015610664573d5f803e3d5ffd5b505050505f82111561074c5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016106cc929190610ca9565b6020604051808303815f875af11580156106e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070c9190610d05565b61074b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074290610d7a565b60405180910390fd5b5b3373ffffffffffffffffffffffffffffffffffffffff167fc486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b8284604051610794929190610d98565b60405180910390a25050506107a761081b565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f5403610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990610e09565b60405180910390fd5b60025f81905550565b60015f81905550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61085182610828565b9050919050565b61086181610847565b811461086b575f80fd5b50565b5f8135905061087c81610858565b92915050565b5f6020828403121561089757610896610824565b5b5f6108a48482850161086e565b91505092915050565b5f819050919050565b6108bf816108ad565b82525050565b5f6060820190506108d85f8301866108b6565b6108e560208301856108b6565b6108f260408301846108b6565b949350505050565b610903816108ad565b811461090d575f80fd5b50565b5f8135905061091e816108fa565b92915050565b5f6020828403121561093957610938610824565b5b5f61094684828501610910565b91505092915050565b5f6020820190506109625f8301846108b6565b92915050565b5f819050919050565b5f61098b61098661098184610828565b610968565b610828565b9050919050565b5f61099c82610971565b9050919050565b5f6109ad82610992565b9050919050565b6109bd816109a3565b82525050565b5f6020820190506109d65f8301846109b4565b92915050565b5f6109e682610992565b9050919050565b6109f6816109dc565b82525050565b5f602082019050610a0f5f8301846109ed565b92915050565b5f81519050610a2381610858565b92915050565b5f60208284031215610a3e57610a3d610824565b5b5f610a4b84828501610a15565b91505092915050565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610a98600983610a54565b9150610aa382610a64565b602082019050919050565b5f6020820190508181035f830152610ac581610a8c565b9050919050565b610ad581610847565b82525050565b5f606082019050610aee5f830186610acc565b610afb6020830185610acc565b610b0860408301846108b6565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b47826108ad565b9150610b52836108ad565b9250828201905080821115610b6a57610b69610b10565b5b92915050565b5f610b7a826108ad565b9150610b85836108ad565b9250828203905081811115610b9d57610b9c610b10565b5b92915050565b5f610bad826108ad565b9150610bb8836108ad565b9250828202610bc6816108ad565b91508282048414831517610bdd57610bdc610b10565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c1b826108ad565b9150610c26836108ad565b925082610c3657610c35610be4565b5b828204905092915050565b7f4e6f204e4654207374616b6564000000000000000000000000000000000000005f82015250565b5f610c75600d83610a54565b9150610c8082610c41565b602082019050919050565b5f6020820190508181035f830152610ca281610c69565b9050919050565b5f604082019050610cbc5f830185610acc565b610cc960208301846108b6565b9392505050565b5f8115159050919050565b610ce481610cd0565b8114610cee575f80fd5b50565b5f81519050610cff81610cdb565b92915050565b5f60208284031215610d1a57610d19610824565b5b5f610d2784828501610cf1565b91505092915050565b7f526577617264207472616e73666572206661696c6564000000000000000000005f82015250565b5f610d64601683610a54565b9150610d6f82610d30565b602082019050919050565b5f6020820190508181035f830152610d9181610d58565b9050919050565b5f604082019050610dab5f8301856108b6565b610db860208301846108b6565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610df3601f83610a54565b9150610dfe82610dbf565b602082019050919050565b5f6020820190508181035f830152610e2081610de7565b905091905056fea2646970667358221220db00864506980d08a1b1afc22b9b2a93a81fe783fa83cdd2800437285fe95d3e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD56D229D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE0A747FE EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x16C JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x6EB604E0 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x7EFAD8E0 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x174 PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x7CE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD EQ PUSH2 0x3B6 JUMPI PUSH2 0x39C CALLER PUSH2 0x452 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCDA5CF38F6592672C7B4A22FF3D50874D1913629BD5FFEDC27B7B40503D60FD DUP4 PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x41E PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SUB PUSH2 0x4CE JUMPI PUSH0 SWAP2 POP POP PUSH2 0x50F JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 PUSH2 0x2710 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST DUP2 PUSH1 0x3 SLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x50A SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C PUSH2 0x7CE JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x5B0 CALLER PUSH2 0x452 JUMP JUMPDEST PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP3 GT ISZERO PUSH2 0x74C JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70C SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP1 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC486B9458A8637650D84D262414833A5A457BC91AE86B7DA110386C8C3FA255B DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x794 SWAP3 SWAP2 SWAP1 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x7A7 PUSH2 0x81B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x851 DUP3 PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x861 DUP2 PUSH2 0x847 JUMP JUMPDEST DUP2 EQ PUSH2 0x86B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87C DUP2 PUSH2 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x897 JUMPI PUSH2 0x896 PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8A4 DUP5 DUP3 DUP6 ADD PUSH2 0x86E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BF DUP2 PUSH2 0x8AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8D8 PUSH0 DUP4 ADD DUP7 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8E5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8F2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x8AD JUMP JUMPDEST DUP2 EQ PUSH2 0x90D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x91E DUP2 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x939 JUMPI PUSH2 0x938 PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x946 DUP5 DUP3 DUP6 ADD PUSH2 0x910 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x962 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98B PUSH2 0x986 PUSH2 0x981 DUP5 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x99C DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AD DUP3 PUSH2 0x992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BD DUP2 PUSH2 0x9A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9E6 DUP3 PUSH2 0x992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x9DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0F PUSH0 DUP4 ADD DUP5 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA23 DUP2 PUSH2 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4B DUP5 DUP3 DUP6 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 PUSH1 0x9 DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA3 DUP3 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAC5 DUP2 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD5 DUP2 PUSH2 0x847 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAEE PUSH0 DUP4 ADD DUP7 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xAFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xB08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB47 DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xB52 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xB10 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7A DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xB85 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0xB10 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAD DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xBB8 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBC6 DUP2 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBDD JUMPI PUSH2 0xBDC PUSH2 0xB10 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC1B DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 DUP4 PUSH2 0x8AD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC36 JUMPI PUSH2 0xC35 PUSH2 0xBE4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204E4654207374616B656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC75 PUSH1 0xD DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xC80 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA2 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH0 DUP4 ADD DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xCC9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xCD0 JUMP JUMPDEST DUP2 EQ PUSH2 0xCEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCFF DUP2 PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD27 DUP5 DUP3 DUP6 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526577617264207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD64 PUSH1 0x16 DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP3 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD91 DUP2 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDAB PUSH0 DUP4 ADD DUP6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0xDB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDF3 PUSH1 0x1F DUP4 PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP PUSH2 0xDFE DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE20 DUP2 PUSH2 0xDE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB STOP DUP7 GASLIMIT MOD SWAP9 0xD ADDMOD LOG1 0xB1 0xAF 0xC2 0x2B SWAP12 0x2A SWAP4 0xA8 0x1F 0xE7 DUP4 STATICCALL DUP4 0xCD 0xD2 DUP1 DIV CALLDATACOPY 0x28 PUSH0 0xE9 TSTORE RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "238:2266:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;901:572;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;346:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;289:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2188:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1479:703;;;:::i;:::-;;321:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;901:572::-;2261:21:0;:19;:21::i;:::-;1008:10:4::1;976:42;;:11;;;;;;;;;;;:19;;;996:7;976:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;968:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:11;;;;;;;;;;;:24;;;1067:10;1087:4;1094:7;1042:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1168:26;1197:6;:18;1204:10;1197:18;;;;;;;;;;;;;;;1168:47;;1250:1;1229:9;:17;;;:22;1225:111;;1298:27;1314:10;1298:15;:27::i;:::-;1267:9;:27;;;:58;;;;;;;:::i;:::-;;;;;;;;1225:111;1366:7;1346:9;:17;;:27;;;;1405:15;1383:9;:19;;:37;;;;1446:10;1436:30;;;1458:7;1436:30;;;;;;:::i;:::-;;;;;;;;958:515;2303:20:0::0;:18;:20::i;:::-;901:572:4;:::o;346:30::-;;;;:::o;402:48::-;445:5;402:48;:::o;289:26::-;;;;;;;;;;;;;:::o;2188:314::-;2248:7;2267:25;2295:6;:12;2302:4;2295:12;;;;;;;;;;;;;;;2267:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2342:1;2321:9;:17;;;:22;2317:36;;2352:1;2345:8;;;;;2317:36;2363:19;2403:9;:19;;;2385:15;:37;;;;:::i;:::-;2363:59;;2488:6;445:5;2469:25;;;;:::i;:::-;2453:11;2440:10;;:24;;;;:::i;:::-;2439:56;;;;:::i;:::-;2432:63;;;;2188:314;;;;:::o;1479:703::-;2261:21:0;:19;:21::i;:::-;1533:26:4::1;1562:6;:18;1569:10;1562:18;;;;;;;;;;;;;;;1533:47;;1619:1;1598:9;:17;;;:22:::0;1590:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:14;1696:9;:27;;;1666;1682:10;1666:15;:27::i;:::-;:57;;;;:::i;:::-;1649:74;;1733:15;1751:9;:17;;;1733:35;;1799:1;1779:9;:17;;:21;;;;1832:1;1810:9;:19;;:23;;;;1873:1;1843:9;:27;;:31;;;;1885:11;;;;;;;;;;;:24;;;1918:4;1925:10;1937:7;1885:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2023:1;2014:6;:10;2010:110;;;2048:5;;;;;;;;;;;:14;;;2063:10;2075:6;2048:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2040:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2010:110;2147:10;2135:40;;;2159:7;2168:6;2135:40;;;;;;;:::i;:::-;;;;;;;;1523:659;;;2303:20:0::0;:18;:20::i;:::-;1479:703:4:o;321:19::-;;;;;;;;;;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:442::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1664:72;1732:2;1721:9;1717:18;1708:6;1664:72;:::i;:::-;1746;1814:2;1803:9;1799:18;1790:6;1746:72;:::i;:::-;1383:442;;;;;;:::o;1831:122::-;1904:24;1922:5;1904:24;:::i;:::-;1897:5;1894:35;1884:63;;1943:1;1940;1933:12;1884:63;1831:122;:::o;1959:139::-;2005:5;2043:6;2030:20;2021:29;;2059:33;2086:5;2059:33;:::i;:::-;1959:139;;;;:::o;2104:329::-;2163:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:119;;;2218:79;;:::i;:::-;2180:119;2338:1;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2309:117;2104:329;;;;:::o;2439:222::-;2532:4;2570:2;2559:9;2555:18;2547:26;;2583:71;2651:1;2640:9;2636:17;2627:6;2583:71;:::i;:::-;2439:222;;;;:::o;2667:60::-;2695:3;2716:5;2709:12;;2667:60;;;:::o;2733:142::-;2783:9;2816:53;2834:34;2843:24;2861:5;2843:24;:::i;:::-;2834:34;:::i;:::-;2816:53;:::i;:::-;2803:66;;2733:142;;;:::o;2881:126::-;2931:9;2964:37;2995:5;2964:37;:::i;:::-;2951:50;;2881:126;;;:::o;3013:141::-;3078:9;3111:37;3142:5;3111:37;:::i;:::-;3098:50;;3013:141;;;:::o;3160:161::-;3262:52;3308:5;3262:52;:::i;:::-;3257:3;3250:65;3160:161;;:::o;3327:252::-;3435:4;3473:2;3462:9;3458:18;3450:26;;3486:86;3569:1;3558:9;3554:17;3545:6;3486:86;:::i;:::-;3327:252;;;;:::o;3585:140::-;3649:9;3682:37;3713:5;3682:37;:::i;:::-;3669:50;;3585:140;;;:::o;3731:159::-;3832:51;3877:5;3832:51;:::i;:::-;3827:3;3820:64;3731:159;;:::o;3896:250::-;4003:4;4041:2;4030:9;4026:18;4018:26;;4054:85;4136:1;4125:9;4121:17;4112:6;4054:85;:::i;:::-;3896:250;;;;:::o;4152:143::-;4209:5;4240:6;4234:13;4225:22;;4256:33;4283:5;4256:33;:::i;:::-;4152:143;;;;:::o;4301:351::-;4371:6;4420:2;4408:9;4399:7;4395:23;4391:32;4388:119;;;4426:79;;:::i;:::-;4388:119;4546:1;4571:64;4627:7;4618:6;4607:9;4603:22;4571:64;:::i;:::-;4561:74;;4517:128;4301:351;;;;:::o;4658:169::-;4742:11;4776:6;4771:3;4764:19;4816:4;4811:3;4807:14;4792:29;;4658:169;;;;:::o;4833:159::-;4973:11;4969:1;4961:6;4957:14;4950:35;4833:159;:::o;4998:365::-;5140:3;5161:66;5225:1;5220:3;5161:66;:::i;:::-;5154:73;;5236:93;5325:3;5236:93;:::i;:::-;5354:2;5349:3;5345:12;5338:19;;4998:365;;;:::o;5369:419::-;5535:4;5573:2;5562:9;5558:18;5550:26;;5622:9;5616:4;5612:20;5608:1;5597:9;5593:17;5586:47;5650:131;5776:4;5650:131;:::i;:::-;5642:139;;5369:419;;;:::o;5794:118::-;5881:24;5899:5;5881:24;:::i;:::-;5876:3;5869:37;5794:118;;:::o;5918:442::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;6199:72;6267:2;6256:9;6252:18;6243:6;6199:72;:::i;:::-;6281;6349:2;6338:9;6334:18;6325:6;6281:72;:::i;:::-;5918:442;;;;;;:::o;6366:180::-;6414:77;6411:1;6404:88;6511:4;6508:1;6501:15;6535:4;6532:1;6525:15;6552:191;6592:3;6611:20;6629:1;6611:20;:::i;:::-;6606:25;;6645:20;6663:1;6645:20;:::i;:::-;6640:25;;6688:1;6685;6681:9;6674:16;;6709:3;6706:1;6703:10;6700:36;;;6716:18;;:::i;:::-;6700:36;6552:191;;;;:::o;6749:194::-;6789:4;6809:20;6827:1;6809:20;:::i;:::-;6804:25;;6843:20;6861:1;6843:20;:::i;:::-;6838:25;;6887:1;6884;6880:9;6872:17;;6911:1;6905:4;6902:11;6899:37;;;6916:18;;:::i;:::-;6899:37;6749:194;;;;:::o;6949:410::-;6989:7;7012:20;7030:1;7012:20;:::i;:::-;7007:25;;7046:20;7064:1;7046:20;:::i;:::-;7041:25;;7101:1;7098;7094:9;7123:30;7141:11;7123:30;:::i;:::-;7112:41;;7302:1;7293:7;7289:15;7286:1;7283:22;7263:1;7256:9;7236:83;7213:139;;7332:18;;:::i;:::-;7213:139;6997:362;6949:410;;;;:::o;7365:180::-;7413:77;7410:1;7403:88;7510:4;7507:1;7500:15;7534:4;7531:1;7524:15;7551:185;7591:1;7608:20;7626:1;7608:20;:::i;:::-;7603:25;;7642:20;7660:1;7642:20;:::i;:::-;7637:25;;7681:1;7671:35;;7686:18;;:::i;:::-;7671:35;7728:1;7725;7721:9;7716:14;;7551:185;;;;:::o;7742:163::-;7882:15;7878:1;7870:6;7866:14;7859:39;7742:163;:::o;7911:366::-;8053:3;8074:67;8138:2;8133:3;8074:67;:::i;:::-;8067:74;;8150:93;8239:3;8150:93;:::i;:::-;8268:2;8263:3;8259:12;8252:19;;7911:366;;;:::o;8283:419::-;8449:4;8487:2;8476:9;8472:18;8464:26;;8536:9;8530:4;8526:20;8522:1;8511:9;8507:17;8500:47;8564:131;8690:4;8564:131;:::i;:::-;8556:139;;8283:419;;;:::o;8708:332::-;8829:4;8867:2;8856:9;8852:18;8844:26;;8880:71;8948:1;8937:9;8933:17;8924:6;8880:71;:::i;:::-;8961:72;9029:2;9018:9;9014:18;9005:6;8961:72;:::i;:::-;8708:332;;;;;:::o;9046:90::-;9080:7;9123:5;9116:13;9109:21;9098:32;;9046:90;;;:::o;9142:116::-;9212:21;9227:5;9212:21;:::i;:::-;9205:5;9202:32;9192:60;;9248:1;9245;9238:12;9192:60;9142:116;:::o;9264:137::-;9318:5;9349:6;9343:13;9334:22;;9365:30;9389:5;9365:30;:::i;:::-;9264:137;;;;:::o;9407:345::-;9474:6;9523:2;9511:9;9502:7;9498:23;9494:32;9491:119;;;9529:79;;:::i;:::-;9491:119;9649:1;9674:61;9727:7;9718:6;9707:9;9703:22;9674:61;:::i;:::-;9664:71;;9620:125;9407:345;;;;:::o;9758:172::-;9898:24;9894:1;9886:6;9882:14;9875:48;9758:172;:::o;9936:366::-;10078:3;10099:67;10163:2;10158:3;10099:67;:::i;:::-;10092:74;;10175:93;10264:3;10175:93;:::i;:::-;10293:2;10288:3;10284:12;10277:19;;9936:366;;;:::o;10308:419::-;10474:4;10512:2;10501:9;10497:18;10489:26;;10561:9;10555:4;10551:20;10547:1;10536:9;10532:17;10525:47;10589:131;10715:4;10589:131;:::i;:::-;10581:139;;10308:419;;;:::o;10733:332::-;10854:4;10892:2;10881:9;10877:18;10869:26;;10905:71;10973:1;10962:9;10958:17;10949:6;10905:71;:::i;:::-;10986:72;11054:2;11043:9;11039:18;11030:6;10986:72;:::i;:::-;10733:332;;;;;:::o;11071:181::-;11211:33;11207:1;11199:6;11195:14;11188:57;11071:181;:::o;11258:366::-;11400:3;11421:67;11485:2;11480:3;11421:67;:::i;:::-;11414:74;;11497:93;11586:3;11497:93;:::i;:::-;11615:2;11610:3;11606:12;11599:19;;11258:366;;;:::o;11630:419::-;11796:4;11834:2;11823:9;11819:18;11811:26;;11883:9;11877:4;11873:20;11869:1;11858:9;11854:17;11847:47;11911:131;12037:4;11911:131;:::i;:::-;11903:139;;11630:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "735400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"RATE_DENOMINATOR()": "392",
								"calculateReward(address)": "infinite",
								"nftContract()": "infinite",
								"rewardRate()": "2470",
								"stakeNFT(uint256)": "infinite",
								"stakes(address)": "infinite",
								"token()": "infinite",
								"unstakeNFT()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 374,
									"end": 376,
									"name": "PUSH",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 346,
									"end": 376,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 346,
									"end": 376,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 761,
									"end": 895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 761,
									"end": 895,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 843,
									"end": 855,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 821,
									"end": 832,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 821,
									"end": 832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 856,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 821,
									"end": 856,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 821,
									"end": 856,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 821,
									"end": 856,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 821,
									"end": 856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 881,
									"end": 887,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 866,
									"end": 871,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 866,
									"end": 871,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 888,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 866,
									"end": 888,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 866,
									"end": 888,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 866,
									"end": 888,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 866,
									"end": 888,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2504,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db00864506980d08a1b1afc22b9b2a93a81fe783fa83cdd2800437285fe95d3e64736f6c634300081a0033",
									".code": [
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "D56D229D"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "D56D229D"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "D82E3962"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "E0A747FE"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "FC0C546A"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "16934FC4"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "6EB604E0"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "7B0A47EE"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "7EFAD8E0"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2504,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 573,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 573,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 573,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 901,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 901,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 346,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 346,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 402,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 289,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 289,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2188,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2188,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2188,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 321,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 573,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1018,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 1018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 996,
											"end": 1003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 976,
											"end": 1004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 976,
											"end": 1004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 976,
											"end": 1004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 1018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1018,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 968,
											"end": 1032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 968,
											"end": 1032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1067,
											"end": 1077,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1091,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1042,
											"end": 1102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1214,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1251,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1225,
											"end": 1336,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1314,
											"end": 1324,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1298,
											"end": 1325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1298,
											"end": 1325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1267,
											"end": 1294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1267,
											"end": 1325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1225,
											"end": 1336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1420,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1420,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1420,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1456,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "CDA5CF38F6592672C7B4A22FF3D50874D1913629BD5FFEDC27B7B40503D60FD"
										},
										{
											"begin": 1458,
											"end": 1465,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1436,
											"end": 1466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1466,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 958,
											"end": 1473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 346,
											"end": 376,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 346,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 445,
											"end": 450,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 402,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 289,
											"end": 315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2338,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2385,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "PUSH",
											"source": 4,
											"value": "15180"
										},
										{
											"begin": 445,
											"end": 450,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2469,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2450,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2440,
											"end": 2450,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2440,
											"end": 2464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2440,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2464,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2440,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2439,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2439,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2495,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2439,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1579,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1580,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1580,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1620,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1590,
											"end": 1638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1590,
											"end": 1638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1696,
											"end": 1723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1723,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1682,
											"end": 1692,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1666,
											"end": 1693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1666,
											"end": 1693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1666,
											"end": 1723,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1666,
											"end": 1723,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1666,
											"end": 1723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1723,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1788,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1800,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1810,
											"end": 1829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1843,
											"end": 1870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1874,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1909,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1918,
											"end": 1922,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1935,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1885,
											"end": 1945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2024,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2010,
											"end": 2120,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2048,
											"end": 2062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2063,
											"end": 2073,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2081,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2048,
											"end": 2082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2048,
											"end": 2082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2048,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2040,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2040,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2010,
											"end": 2120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2157,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "C486B9458A8637650D84D262414833A5A457BC91AE86B7DA110386C8C3FA255B"
										},
										{
											"begin": 2159,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2135,
											"end": 2175,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2175,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 2182,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 2182,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 2182,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 321,
											"end": 340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1664,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1746,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1904,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1929,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 1945,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2050,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2059,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2210,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2215,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2218,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2363,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2636,
											"end": 2653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2583,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2843,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2834,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2816,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2995,
											"end": 3000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2964,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3154,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3013,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3142,
											"end": 3147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3111,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3160,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3308,
											"end": 3313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3262,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3314,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3262,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3579,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3327,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3569,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3567,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3486,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3486,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3579,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3725,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3585,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3682,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3890,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3731,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3832,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3832,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3832,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3832,
											"end": 3883,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3832,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 4146,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3896,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4054,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4054,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 4146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 4146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 4146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 4146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4295,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4152,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4283,
											"end": 4288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4256,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4289,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4256,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4295,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4652,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4301,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4406,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4423,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4426,
											"end": 4505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4627,
											"end": 4634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4571,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4635,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4571,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4652,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 4783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4792,
											"end": 4821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4792,
											"end": 4821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4833,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4984,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4969,
											"end": 4970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5363,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4998,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5225,
											"end": 5226,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5220,
											"end": 5223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5161,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5227,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5161,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5236,
											"end": 5329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5788,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5369,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5632,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5593,
											"end": 5610,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5776,
											"end": 5780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5650,
											"end": 5781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5781,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5650,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5788,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5899,
											"end": 5904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5881,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5906,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6265,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6243,
											"end": 6249,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6199,
											"end": 6271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6281,
											"end": 6353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6353,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6281,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6366,
											"end": 6546,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6366,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6508,
											"end": 6509,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6501,
											"end": 6516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6539,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6532,
											"end": 6533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6540,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6743,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 6552,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6592,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6629,
											"end": 6630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6611,
											"end": 6631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6631,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6611,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6645,
											"end": 6665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6665,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6645,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6665,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6712,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6703,
											"end": 6713,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6700,
											"end": 6736,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6700,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6700,
											"end": 6736,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6716,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6700,
											"end": 6736,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6700,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6743,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6943,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6749,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6809,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6809,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6809,
											"end": 6829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6809,
											"end": 6829,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6809,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6843,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6863,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6872,
											"end": 6889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6872,
											"end": 6889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6913,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6899,
											"end": 6936,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6899,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 6899,
											"end": 6936,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6916,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6899,
											"end": 6936,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 6899,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 7359,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6949,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6989,
											"end": 6996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7030,
											"end": 7031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7012,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7012,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7012,
											"end": 7032,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7012,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7046,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7066,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7046,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7041,
											"end": 7066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7041,
											"end": 7066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7103,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7141,
											"end": 7152,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7123,
											"end": 7153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7153,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7123,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7304,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7283,
											"end": 7305,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7256,
											"end": 7265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7319,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7213,
											"end": 7352,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7332,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7352,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7213,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6997,
											"end": 7359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 7359,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 7359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 7359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 7359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 7359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7545,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7365,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7413,
											"end": 7490,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7410,
											"end": 7411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7514,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7500,
											"end": 7515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7534,
											"end": 7538,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7531,
											"end": 7532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7539,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7736,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7551,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7626,
											"end": 7627,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7608,
											"end": 7628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7642,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7642,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7642,
											"end": 7662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7642,
											"end": 7662,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 7642,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7662,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7681,
											"end": 7682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 7671,
											"end": 7706,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7686,
											"end": 7704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7706,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 7671,
											"end": 7706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7725,
											"end": 7726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7721,
											"end": 7730,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7736,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7905,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7742,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7882,
											"end": 7897,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F204E4654207374616B656400000000000000000000000000000000000000"
										},
										{
											"begin": 7878,
											"end": 7879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7866,
											"end": 7880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7859,
											"end": 7898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 8277,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7911,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8053,
											"end": 8056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 8138,
											"end": 8140,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 8133,
											"end": 8136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 8074,
											"end": 8141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8141,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 8074,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 8150,
											"end": 8243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8243,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8150,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 8277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 8277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 8277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 8277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8283,
											"end": 8702,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 8283,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8449,
											"end": 8453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8476,
											"end": 8485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8472,
											"end": 8490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8464,
											"end": 8490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8464,
											"end": 8490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8500,
											"end": 8547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 8564,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8695,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8564,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8556,
											"end": 8695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8556,
											"end": 8695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8283,
											"end": 8702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8283,
											"end": 8702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8283,
											"end": 8702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8283,
											"end": 8702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8829,
											"end": 8833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 8869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8856,
											"end": 8865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 8870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 8870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 8948,
											"end": 8949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8933,
											"end": 8950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8930,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 8880,
											"end": 8951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 8951,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 8880,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8961,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9005,
											"end": 9011,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8961,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8961,
											"end": 9033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8961,
											"end": 9033,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 8961,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 9040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9136,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 9046,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9080,
											"end": 9087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9129,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9109,
											"end": 9130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9258,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 9142,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9227,
											"end": 9232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 9212,
											"end": 9233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9233,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9212,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9234,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9192,
											"end": 9252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9248,
											"end": 9249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9238,
											"end": 9250,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9252,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9192,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9401,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 9264,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9334,
											"end": 9356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9334,
											"end": 9356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9389,
											"end": 9394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 9365,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9395,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9365,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9752,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 9407,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9474,
											"end": 9480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9502,
											"end": 9509,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9498,
											"end": 9521,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9494,
											"end": 9526,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9529,
											"end": 9608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9674,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9727,
											"end": 9734,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9718,
											"end": 9724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9674,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 9674,
											"end": 9735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9674,
											"end": 9735,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9674,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9664,
											"end": 9735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9664,
											"end": 9735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9752,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9930,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 9758,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9898,
											"end": 9922,
											"name": "PUSH",
											"source": 5,
											"value": "526577617264207472616E73666572206661696C656400000000000000000000"
										},
										{
											"begin": 9894,
											"end": 9895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9882,
											"end": 9896,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9875,
											"end": 9923,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 10302,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9936,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10078,
											"end": 10081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 10158,
											"end": 10161,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 10099,
											"end": 10166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10166,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10099,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10175,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10264,
											"end": 10267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10175,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 10175,
											"end": 10268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10175,
											"end": 10268,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10175,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 10295,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10284,
											"end": 10296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 10302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 10302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 10302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 10302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10308,
											"end": 10727,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10308,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10474,
											"end": 10478,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10514,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10501,
											"end": 10510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10497,
											"end": 10515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10561,
											"end": 10570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10555,
											"end": 10559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10551,
											"end": 10571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10547,
											"end": 10548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10545,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10525,
											"end": 10572,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10589,
											"end": 10720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10715,
											"end": 10719,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10589,
											"end": 10720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 10589,
											"end": 10720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10589,
											"end": 10720,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10589,
											"end": 10720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10581,
											"end": 10720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10581,
											"end": 10720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10308,
											"end": 10727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10308,
											"end": 10727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10308,
											"end": 10727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10308,
											"end": 10727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10854,
											"end": 10858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10869,
											"end": 10895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10869,
											"end": 10895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10958,
											"end": 10975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10949,
											"end": 10955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 10905,
											"end": 10976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10976,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10905,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11036,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 10986,
											"end": 11058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11058,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10986,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 11065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11252,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 11071,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11211,
											"end": 11244,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11207,
											"end": 11208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11188,
											"end": 11245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11400,
											"end": 11403,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 11485,
											"end": 11487,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11480,
											"end": 11483,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11421,
											"end": 11488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 11586,
											"end": 11589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 11497,
											"end": 11590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11615,
											"end": 11617,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11610,
											"end": 11613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11258,
											"end": 11624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11834,
											"end": 11836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11819,
											"end": 11837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11811,
											"end": 11837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11811,
											"end": 11837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11883,
											"end": 11892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11867,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 11894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 12037,
											"end": 12041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 11911,
											"end": 12042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 12049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"NFTStakingModule.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"RATE_DENOMINATOR()": "7efad8e0",
							"calculateReward(address)": "d82e3962",
							"nftContract()": "d56d229d",
							"rewardRate()": "7b0a47ee",
							"stakeNFT(uint256)": "6eb604e0",
							"stakes(address)": "16934fc4",
							"token()": "fc0c546a",
							"unstakeNFT()": "e0a747fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RATE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTStakingModule.sol\":\"NFTStakingModule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"NFTStakingModule.sol\":{\"keccak256\":\"0xd786ba675510966f9907d1a4c052637dfe9b8c22954a0ee1cfd192e5465fd7e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e5b01dc4d822f5e5006156abfa9ceecb4f56baabdfd9414c22f6e69e453dd8\",\"dweb:/ipfs/Qmdqi1V2AwabXcp1Xsui7UXZb5KKjfHdKoGdZHc6ZXUeAp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "NFTStakingModule.sol:NFTStakingModule",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 281,
								"contract": "NFTStakingModule.sol:NFTStakingModule",
								"label": "nftContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)259"
							},
							{
								"astId": 284,
								"contract": "NFTStakingModule.sol:NFTStakingModule",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 287,
								"contract": "NFTStakingModule.sol:NFTStakingModule",
								"label": "rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 302,
								"contract": "NFTStakingModule.sol:NFTStakingModule",
								"label": "stakes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(NFTStake)297_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)259": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(NFTStake)297_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTStakingModule.NFTStake)",
								"numberOfBytes": "32",
								"value": "t_struct(NFTStake)297_storage"
							},
							"t_struct(NFTStake)297_storage": {
								"encoding": "inplace",
								"label": "struct NFTStakingModule.NFTStake",
								"members": [
									{
										"astId": 292,
										"contract": "NFTStakingModule.sol:NFTStakingModule",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 294,
										"contract": "NFTStakingModule.sol:NFTStakingModule",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 296,
										"contract": "NFTStakingModule.sol:NFTStakingModule",
										"label": "accumulatedReward",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 142,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 142,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 142,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 142,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 142,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 142,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							271
						],
						"IERC721": [
							259
						]
					},
					"id": 260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 260,
							"sourceUnit": 272,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 271,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "IERC165",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "288:7:2"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:2",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 259,
							"linearizedBaseContracts": [
								259,
								271
							],
							"name": "IERC721",
							"nameLocation": "277:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 158,
									"name": "Transfer",
									"nameLocation": "401:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "410:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "432:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "452:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:2"
									},
									"src": "395:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 167,
									"name": "Approval",
									"nameLocation": "588:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "597:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "620:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "646:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:2"
									},
									"src": "582:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 176,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "820:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "843:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "869:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:2"
									},
									"src": "799:85:2"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1028:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:2"
									},
									"scope": 259,
									"src": "971:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:2"
									},
									"scope": 259,
									"src": "1187:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1861:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1875:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1887:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1904:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:2"
									},
									"scope": 259,
									"src": "1835:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:2"
									},
									"scope": 259,
									"src": "2651:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3495:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3509:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3521:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:2"
									},
									"scope": 259,
									"src": "3473:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4027:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4039:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:2"
									},
									"scope": 259,
									"src": "4010:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4418:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4436:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:2"
									},
									"scope": 259,
									"src": "4391:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4671:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:2"
									},
									"scope": 259,
									"src": "4610:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4864:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4879:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4920:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:2"
									},
									"scope": 259,
									"src": "4838:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 260,
							"src": "267:4661:2",
							"usedErrors": [],
							"usedEvents": [
								158,
								167,
								176
							]
						}
					],
					"src": "108:4821:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 261,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 262,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:3",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "IERC165",
							"nameLocation": "432:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "818:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 264,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "861:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:3"
									},
									"scope": 271,
									"src": "791:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 272,
							"src": "422:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:3"
				},
				"id": 3
			},
			"NFTStakingModule.sol": {
				"ast": {
					"absolutePath": "NFTStakingModule.sol",
					"exportedSymbols": {
						"IERC165": [
							271
						],
						"IERC20": [
							142
						],
						"IERC721": [
							259
						],
						"NFTStakingModule": [
							539
						],
						"ReentrancyGuard": [
							64
						]
					},
					"id": 540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 540,
							"sourceUnit": 260,
							"src": "58:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 540,
							"sourceUnit": 143,
							"src": "117:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 540,
							"sourceUnit": 65,
							"src": "174:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"267:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "267:15:4"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "267:15:4"
								}
							],
							"canonicalName": "NFTStakingModule",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 539,
							"linearizedBaseContracts": [
								539,
								64
							],
							"name": "NFTStakingModule",
							"nameLocation": "247:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d56d229d",
									"id": 281,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "304:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "289:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$259",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 280,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 279,
											"name": "IERC721",
											"nameLocations": [
												"289:7:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 259,
											"src": "289:7:4"
										},
										"referencedDeclaration": 259,
										"src": "289:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$259",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 284,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "335:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "321:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 283,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 282,
											"name": "IERC20",
											"nameLocations": [
												"321:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "321:6:4"
										},
										"referencedDeclaration": 142,
										"src": "321:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 287,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "361:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "346:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "346:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "374:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7efad8e0",
									"id": 290,
									"mutability": "constant",
									"name": "RATE_DENOMINATOR",
									"nameLocation": "426:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "402:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "445:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTStakingModule.NFTStake",
									"id": 297,
									"members": [
										{
											"constant": false,
											"id": 292,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "491:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 297,
											"src": "483:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 294,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "516:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 297,
											"src": "508:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 293,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 296,
											"mutability": "mutable",
											"name": "accumulatedReward",
											"nameLocation": "543:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 297,
											"src": "535:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 295,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "535:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTStake",
									"nameLocation": "464:8:4",
									"nodeType": "StructDefinition",
									"scope": 539,
									"src": "457:110:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 302,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "609:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "573:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTStake_$297_storage_$",
										"typeString": "mapping(address => struct NFTStakingModule.NFTStake)"
									},
									"typeName": {
										"id": 301,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 298,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "581:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "573:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTStake_$297_storage_$",
											"typeString": "mapping(address => struct NFTStakingModule.NFTStake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 300,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 299,
												"name": "NFTStake",
												"nameLocations": [
													"592:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 297,
												"src": "592:8:4"
											},
											"referencedDeclaration": 297,
											"src": "592:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
												"typeString": "struct NFTStakingModule.NFTStake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0cda5cf38f6592672c7b4a22ff3d50874d1913629bd5ffedc27b7b40503d60fd",
									"id": 308,
									"name": "NFTStaked",
									"nameLocation": "628:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "654:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "638:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "668:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "660:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:39:4"
									},
									"src": "622:55:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b",
									"id": 316,
									"name": "NFTUnstaked",
									"nameLocation": "688:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "716:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "700:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "730:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:55:4"
									},
									"src": "682:73:4"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "811:84:4",
										"statements": [
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "821:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$259",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 325,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "843:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 324,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "835:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$259_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "835:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$259",
															"typeString": "contract IERC721"
														}
													},
													"src": "821:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$259",
														"typeString": "contract IERC721"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "821:35:4"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "866:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 331,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "881:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 330,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "874:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "874:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "866:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "866:22:4"
											}
										]
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "781:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "773:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "803:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "795:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:38:4"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:4"
									},
									"scope": 539,
									"src": "761:134:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "958:515:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 346,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "996:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 344,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "976:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$259",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "988:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "976:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "976:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 348,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1008:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1012:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1008:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "976:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1020:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "968:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "968:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 357,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1067:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1071:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1067:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 361,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1087:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingModule_$539",
																		"typeString": "contract NFTStakingModule"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingModule_$539",
																		"typeString": "contract NFTStakingModule"
																	}
																],
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1079:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 359,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1079:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1079:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1094:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 354,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1042:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$259",
																"typeString": "contract IERC721"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1054:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "1042:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1042:60:4"
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "1185:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "1168:26:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
															"typeString": "struct NFTStakingModule.NFTStake"
														},
														"typeName": {
															"id": 367,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 366,
																"name": "NFTStake",
																"nameLocations": [
																	"1168:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 297,
																"src": "1168:8:4"
															},
															"referencedDeclaration": 297,
															"src": "1168:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"baseExpression": {
														"id": 369,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1197:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTStake_$297_storage_$",
															"typeString": "mapping(address => struct NFTStakingModule.NFTStake storage ref)"
														}
													},
													"id": 372,
													"indexExpression": {
														"expression": {
															"id": 370,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1204:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1208:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1204:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1197:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTStake_$297_storage",
														"typeString": "struct NFTStakingModule.NFTStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1168:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 374,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1229:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1239:7:4",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "1229:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1250:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1229:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 388,
												"nodeType": "IfStatement",
												"src": "1225:111:4",
												"trueBody": {
													"id": 387,
													"nodeType": "Block",
													"src": "1253:83:4",
													"statements": [
														{
															"expression": {
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 378,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "1267:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																			"typeString": "struct NFTStakingModule.NFTStake storage pointer"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1277:17:4",
																	"memberName": "accumulatedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 296,
																	"src": "1267:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 382,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1314:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1318:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1314:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 381,
																		"name": "calculateReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1298:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1298:27:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1267:58:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"nodeType": "ExpressionStatement",
															"src": "1267:58:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 389,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1346:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1356:7:4",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "1346:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 392,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1366:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1346:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "1346:27:4"
											},
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 395,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1383:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1393:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "1383:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 398,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1411:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1405:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1383:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "1383:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1446:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1450:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1446:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1458:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 402,
														"name": "NFTStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1436:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1436:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "EmitStatement",
												"src": "1431:35:4"
											}
										]
									},
									"functionSelector": "6eb604e0",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 340,
												"name": "nonReentrant",
												"nameLocations": [
													"945:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "945:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:12:4"
										}
									],
									"name": "stakeNFT",
									"nameLocation": "910:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "927:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "919:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:17:4"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:0:4"
									},
									"scope": 539,
									"src": "901:572:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1523:659:4",
										"statements": [
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "1550:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "1533:26:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
															"typeString": "struct NFTStakingModule.NFTStake"
														},
														"typeName": {
															"id": 415,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 414,
																"name": "NFTStake",
																"nameLocations": [
																	"1533:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 297,
																"src": "1533:8:4"
															},
															"referencedDeclaration": 297,
															"src": "1533:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"baseExpression": {
														"id": 417,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1562:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTStake_$297_storage_$",
															"typeString": "mapping(address => struct NFTStakingModule.NFTStake storage ref)"
														}
													},
													"id": 420,
													"indexExpression": {
														"expression": {
															"id": 418,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1569:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1573:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1569:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1562:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTStake_$297_storage",
														"typeString": "struct NFTStakingModule.NFTStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1533:47:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 423,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "1598:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																		"typeString": "struct NFTStakingModule.NFTStake storage pointer"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1608:7:4",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "1598:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1619:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1598:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e4654207374616b6564",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e",
																"typeString": "literal_string \"No NFT staked\""
															},
															"value": "No NFT staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf45134785742ae07c171b34ff8f3c591f488685e53379f86eba634a62ceff6e",
																"typeString": "literal_string \"No NFT staked\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1590:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "1590:48:4"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1657:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "1649:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1649:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 433,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1682:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1686:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1682:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 432,
															"name": "calculateReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1666:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1666:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 436,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "1696:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1706:17:4",
														"memberName": "accumulatedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 296,
														"src": "1696:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1666:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1649:74:4"
											},
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1741:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "1733:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1733:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"expression": {
														"id": 442,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1751:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
															"typeString": "struct NFTStakingModule.NFTStake storage pointer"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1761:7:4",
													"memberName": "tokenId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 292,
													"src": "1751:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1733:35:4"
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 445,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "1779:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1789:7:4",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "1779:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1799:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1779:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1779:21:4"
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 451,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "1810:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1820:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "1810:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1810:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1810:23:4"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 457,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "1843:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake storage pointer"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1853:17:4",
														"memberName": "accumulatedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 296,
														"src": "1843:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1843:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "1843:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 468,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1918:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingModule_$539",
																		"typeString": "contract NFTStakingModule"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingModule_$539",
																		"typeString": "contract NFTStakingModule"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1910:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1910:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1910:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1925:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1929:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1925:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "1937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 463,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1885:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$259",
																"typeString": "contract IERC721"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1897:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "1885:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1885:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "1885:60:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2014:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2023:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2014:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "2010:110:4",
												"trueBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "2026:94:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 481,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2063:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2067:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2063:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 483,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "2075:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 479,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 284,
																				"src": "2048:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2054:8:4",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 109,
																			"src": "2048:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2048:34:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526577617264207472616e73666572206661696c6564",
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2084:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																			"typeString": "literal_string \"Reward transfer failed\""
																		},
																		"value": "Reward transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																			"typeString": "literal_string \"Reward transfer failed\""
																		}
																	],
																	"id": 478,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2040:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2040:69:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 487,
															"nodeType": "ExpressionStatement",
															"src": "2040:69:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2147:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2151:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2147:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "2159:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 494,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "2168:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "NFTUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2135:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "2130:45:4"
											}
										]
									},
									"functionSelector": "e0a747fe",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 411,
												"name": "nonReentrant",
												"nameLocations": [
													"1510:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1510:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1510:12:4"
										}
									],
									"name": "unstakeNFT",
									"nameLocation": "1488:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:2:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:4"
									},
									"scope": 539,
									"src": "1479:703:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "2257:245:4",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2283:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "2267:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTStake_$297_memory_ptr",
															"typeString": "struct NFTStakingModule.NFTStake"
														},
														"typeName": {
															"id": 506,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 505,
																"name": "NFTStake",
																"nameLocations": [
																	"2267:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 297,
																"src": "2267:8:4"
															},
															"referencedDeclaration": 297,
															"src": "2267:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_storage_ptr",
																"typeString": "struct NFTStakingModule.NFTStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"baseExpression": {
														"id": 508,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2295:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTStake_$297_storage_$",
															"typeString": "mapping(address => struct NFTStakingModule.NFTStake storage ref)"
														}
													},
													"id": 510,
													"indexExpression": {
														"id": 509,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2302:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2295:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTStake_$297_storage",
														"typeString": "struct NFTStakingModule.NFTStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2267:40:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 512,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "2321:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_memory_ptr",
																"typeString": "struct NFTStakingModule.NFTStake memory"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2331:7:4",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "2321:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2342:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2321:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 518,
												"nodeType": "IfStatement",
												"src": "2317:36:4",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2352:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 504,
													"id": 517,
													"nodeType": "Return",
													"src": "2345:8:4"
												}
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "2371:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "2363:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2363:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 521,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2385:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2391:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2385:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 523,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "2403:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTStake_$297_memory_ptr",
																"typeString": "struct NFTStakingModule.NFTStake memory"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2413:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "2403:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2385:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2363:59:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 527,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2440:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 528,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "2453:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2440:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 530,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2439:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 531,
																	"name": "RATE_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2469:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2488:6:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "2469:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 534,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2468:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2439:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 536,
												"nodeType": "Return",
												"src": "2432:63:4"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2197:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2221:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2213:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:14:4"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 539,
									"src": "2188:314:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 540,
							"src": "238:2266:4",
							"usedErrors": [],
							"usedEvents": [
								308,
								316
							]
						}
					],
					"src": "32:2472:4"
				},
				"id": 4
			}
		}
	}
}